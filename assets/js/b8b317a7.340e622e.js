"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[631],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(m,l(l({ref:t},c),{},{components:n})):i.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[d]="string"==typeof e?e:r,l[1]=a;for(var p=2;p<o;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const o={sidebar_position:8,title:"File",keywords:["Fort.js","File Handling","File Upload","Web Development"],description:"Explore file handling capabilities in Fort.js, including file uploads and storage. Learn how to implement robust file handling functionality for your web application."},l="File Handling",a={unversionedId:"concepts/file",id:"concepts/file",title:"File",description:"Explore file handling capabilities in Fort.js, including file uploads and storage. Learn how to implement robust file handling functionality for your web application.",source:"@site/docs/concepts/file.md",sourceDirName:"concepts",slug:"/concepts/file",permalink:"/docs/concepts/file",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/concepts/file.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"File",keywords:["Fort.js","File Handling","File Upload","Web Development"],description:"Explore file handling capabilities in Fort.js, including file uploads and storage. Learn how to implement robust file handling functionality for your web application."},sidebar:"tutorialSidebar",previous:{title:"Cookie",permalink:"/docs/concepts/cookie"},next:{title:"View",permalink:"/docs/concepts/view"}},s={},p=[{value:"File Upload",id:"file-upload",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"file-handling"},"File Handling"),(0,r.kt)("p",null,"To facilitate file uploads, utilize the ",(0,r.kt)("inlineCode",{parentName:"p"},"file")," property, accessible as a class member within ",(0,r.kt)("inlineCode",{parentName:"p"},"Guard"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Shield"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"Controller"),". This property provides convenient access to the files included in the HTTP request."),(0,r.kt)("h2",{id:"file-upload"},"File Upload"),(0,r.kt)("p",null,"Let's explore the process of uploading a file in Fort.js:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Controller, textResult, http } from "fortjs";\nimport * as Path from "path";\n\nexport class FileController extends Controller {\n   \n    @http.post("/upload")\n    async uploadFile() {\n\n        let result;\n        // Check if a file exists in the HTTP request\n        if (this.file.isExist(\'jsstore\') === true) {\n            // Save the file to the desired location\n\n            const pathToSave = Path.join(__dirname, "../upload.png");\n            //highlight-start\n            // Supply the filename from the request and the path to save\n            await this.file.saveTo(\'jsstore\', pathToSave);\n            //highlight-end\n            result = "File saved";\n        } else {\n            result = "File not saved";\n        }\n        return textResult(result);\n    }    \n}\n')),(0,r.kt)("p",null,"In this example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"uploadFile")," method handles file uploads. It checks if a file named 'jsstore' is present in the HTTP request. If the file exists, it is saved to a specified location. Adjust the filename and path as needed for your application. The process ensures a seamless file upload mechanism in Fort.js."))}u.isMDXComponent=!0}}]);