"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[6570],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(n),y=i,f=d["".concat(c,".").concat(y)]||d[y]||u[y]||a;return n?r.createElement(f,o(o({ref:t},l),{},{components:n})):r.createElement(f,o({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=y;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[d]="string"==typeof e?e:i,o[1]=p;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4179:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={title:"View Engine Data",keywords:["view engine","data","types","fortjs","node"],description:"Type viewEngineData member description"},o="ViewEngineData",p={unversionedId:"types/view-engine-data",id:"types/view-engine-data",title:"View Engine Data",description:"Type viewEngineData member description",source:"@site/docs/types/view-engine-data.md",sourceDirName:"types",slug:"/types/view-engine-data",permalink:"/docs/types/view-engine-data",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/types/view-engine-data.md",tags:[],version:"current",frontMatter:{title:"View Engine Data",keywords:["view engine","data","types","fortjs","node"],description:"Type viewEngineData member description"},sidebar:"tutorialSidebar",previous:{title:"HttpResult",permalink:"/docs/types/http-result"},next:{title:"Worker",permalink:"/docs/advanced/worker"}},c={},s=[],l={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"viewenginedata"},"ViewEngineData"),(0,i.kt)("p",null,"The type ViewEngineData is used by ViewEngine to get view related data from workers."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"type ViewEngineData = {\n\n    /**\n     * name of the view or path of view\n     *\n     * @type {string}\n     */\n    view: string;\n\n    /**\n     * view model\n     *\n     * @type {*}\n     */\n    model: any;\n};\n")))}u.isMDXComponent=!0}}]);