"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[4042],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=i(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4993:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:4,title:"Data",keywords:["data","components","options","fortjs","node"],description:"How to pass & access components data"},s="Data",c={unversionedId:"concepts/data",id:"concepts/data",title:"Data",description:"How to pass & access components data",source:"@site/docs/concepts/data.md",sourceDirName:"concepts",slug:"/concepts/data",permalink:"/docs/concepts/data",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/concepts/data.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Data",keywords:["data","components","options","fortjs","node"],description:"How to pass & access components data"},sidebar:"tutorialSidebar",previous:{title:"Http Body",permalink:"/docs/concepts/body"},next:{title:"Dependency Injection",permalink:"/docs/concepts/dependency-injection"}},l={},i=[{value:"Pass data from Wall",id:"pass-data-from-wall",level:2},{value:"Access data passed from Wall in Controller",id:"access-data-passed-from-wall-in-controller",level:2}],p={toc:i},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data"},"Data"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"data")," is class member of Wall, Guard , Shield and Controller. It is used to transfer data from one component to another till worker."),(0,o.kt)("p",null,"e.g - Let's see how we can pass data from ",(0,o.kt)("strong",{parentName:"p"},"Wall")," to ",(0,o.kt)("strong",{parentName:"p"},"Controller")," - "),(0,o.kt)("h2",{id:"pass-data-from-wall"},"Pass data from Wall"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Wall, textResult } from \"fortjs\";\nexport class RequestLogger extends Wall {\n\n    private getIP(req) {\n        var ip = (req.headers['x-forwarded-for'] || '').split(',').pop() ||\n            req.connection.remoteAddress ||\n            req.socket.remoteAddress ||\n            req.connection.socket.remoteAddress\n        return ip;\n    }\n\n    async onIncoming() {\n        // here we are sending ip to other components\n        this.data.ip = this.getIP(this.request);\n\n        return null;\n    }\n}\n")),(0,o.kt)("p",null,"The above wall is using ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," to pass ip to other components."),(0,o.kt)("h2",{id:"access-data-passed-from-wall-in-controller"},"Access data passed from Wall in Controller"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { Controller, textResult, defaultWorker } from "fortjs";\n\nexport class DefaultController extends Controller {\n\n    @defaultWorker()\n    async default() {\n        // access ip \n        const ip = this.data.ip;\n        return textResult(`Ip is ${ip}`);\n    }\n}\n')))}u.isMDXComponent=!0}}]);