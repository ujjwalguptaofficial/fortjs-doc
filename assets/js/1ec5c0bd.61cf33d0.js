"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[2614],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),u=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},l=function(e){var r=u(e.components);return n.createElement(i.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),y=o,f=p["".concat(i,".").concat(y)]||p[y]||d[y]||a;return t?n.createElement(f,c(c({ref:r},l),{},{components:t})):n.createElement(f,c({ref:r},l))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=y;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[p]="string"==typeof e?e:o,c[1]=s;for(var u=2;u<a;u++)c[u]=t[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},4596:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=t(7462),o=(t(7294),t(3905));const a={title:"Query",keywords:["query string","variable","fortjs","node"],description:"Accessing query string value in fortjs"},c="query",s={unversionedId:"concepts/query",id:"concepts/query",title:"Query",description:"Accessing query string value in fortjs",source:"@site/docs/concepts/query.md",sourceDirName:"concepts",slug:"/concepts/query",permalink:"/fortjs-doc/docs/concepts/query",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/concepts/query.md",tags:[],version:"current",frontMatter:{title:"Query",keywords:["query string","variable","fortjs","node"],description:"Accessing query string value in fortjs"},sidebar:"tutorialSidebar",previous:{title:"Param",permalink:"/fortjs-doc/docs/concepts/param"},next:{title:"Session",permalink:"/fortjs-doc/docs/concepts/session"}},i={},u=[],l={toc:u},p="wrapper";function d(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"query"},"query"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"query")," can be used to get the query string value. It is class member of  Wall, Guard, Shield and Controller."),(0,o.kt)("p",null,"e.g - Conside the url - abc.com/?userid=5&name=ujjwal"),(0,o.kt)("p",null,"There are two variables in query string - ",(0,o.kt)("inlineCode",{parentName:"p"},"userid")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," . We can use ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," to access those value."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"export class DefaultController extends Controller {\n\n    @defaultWorker()\n    async default() {\n        const userId = this.query.userid;\n        const name = this.query.name;\n\n        return textResult(`userId is ${userId} & name is ${name}`);\n    }\n}\n")))}d.isMDXComponent=!0}}]);