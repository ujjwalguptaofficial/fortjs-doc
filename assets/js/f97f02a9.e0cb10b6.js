"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[8494],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),l=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(a.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),y=o,f=d["".concat(a,".").concat(y)]||d[y]||u[y]||i;return t?r.createElement(f,c(c({ref:n},p),{},{components:t})):r.createElement(f,c({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=y;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[d]="string"==typeof e?e:o,c[1]=s;for(var l=2;l<i;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},5300:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const i={title:"Dependency Injection",keywords:["dependency injection","assign","singleton","fortjs","node js"],description:"Dependency injection in nodejs"},c="Dependency Injection",s={unversionedId:"concepts/dependency-injection",id:"concepts/dependency-injection",title:"Dependency Injection",description:"Dependency injection in nodejs",source:"@site/docs/concepts/dependency-injection.md",sourceDirName:"concepts",slug:"/concepts/dependency-injection",permalink:"/fortjs-doc/docs/concepts/dependency-injection",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/concepts/dependency-injection.md",tags:[],version:"current",frontMatter:{title:"Dependency Injection",keywords:["dependency injection","assign","singleton","fortjs","node js"],description:"Dependency injection in nodejs"},sidebar:"tutorialSidebar",previous:{title:"Data",permalink:"/fortjs-doc/docs/concepts/data"},next:{title:"File",permalink:"/fortjs-doc/docs/concepts/file"}},a={},l=[{value:"assign",id:"assign",level:2},{value:"singleton",id:"singleton",level:2}],p={toc:l},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dependency-injection"},"Dependency Injection"),(0,o.kt)("p",null,"Dependency Injection is a process of injecting dependency into different parts by framework. it allows to write unit testable code."),(0,o.kt)("p",null,"FortJs provides ",(0,o.kt)("inlineCode",{parentName:"p"},"assign")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"singleton")," decorator for dependency Injection. "),(0,o.kt)("h2",{id:"assign"},"assign"),(0,o.kt)("p",null,"assign can be used in controller and all type of component."),(0,o.kt)("p",null,'Let\'s inject "hello world" to a variable value'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export class UserController extends Controller {\n    service: UserService;\n\n    @worker()\n    index(@assign('hello world') value) {\n\n        console.log(value) // hello world\n    }\n}\n")),(0,o.kt)("h2",{id:"singleton"},"singleton"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"singleton")," allows you to inject a class dependency and maintain a single instance of the class across whole application."),(0,o.kt)("p",null,"Let's inject a class ",(0,o.kt)("inlineCode",{parentName:"p"},"UserService")," in a controller constructor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export class UserController extends Controller {\n    service: UserService;\n\n    constructor(@singleton(UserService) service) {\n        super();\n        this.service = service;\n    }\n}\n")),(0,o.kt)("p",null,"By using ",(0,o.kt)("inlineCode",{parentName:"p"},"singleton")," you can save memory as its create only one instance of class and maintains throughout the app."))}u.isMDXComponent=!0}}]);