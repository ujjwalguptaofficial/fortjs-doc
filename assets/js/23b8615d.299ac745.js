"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[3051],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1695:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:8,title:"View",keywords:["view","render","fortjs","node"],description:"How to create & render views"},a="View",l={unversionedId:"view",id:"view",title:"View",description:"How to create & render views",source:"@site/docs/view.md",sourceDirName:".",slug:"/view",permalink:"/docs/view",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/view.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"View",keywords:["view","render","fortjs","node"],description:"How to create & render views"},sidebar:"tutorialSidebar",previous:{title:"Bootstrap",permalink:"/docs/setup"},next:{title:"Logger",permalink:"/docs/logger"}},s={},c=[{value:"viewResult",id:"viewresult",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"view"},"View"),(0,o.kt)("p",null,"A view is a HTML page which needs some data also called ",(0,o.kt)("strong",{parentName:"p"},"model")," to show those datas to users.The data(model) is passed from controller to view where view engine accepts the data and create the html page."),(0,o.kt)("h2",{id:"viewresult"},"viewResult"),(0,o.kt)("p",null,"A view is rendered using the method ",(0,o.kt)("inlineCode",{parentName:"p"},"viewResult"),". The viewResult accepts two parameters - "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"view identification - view location or view name or id"),(0,o.kt)("li",{parentName:"ol"},"model")),(0,o.kt)("p",null,"Let's see an example - "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { defaultWorker, viewResult } from \"fortjs\"\n\nexport class DefaultController extends Controller {\n    \n    @defaultWorker()\n    async default() {\n        const model = {\n            title: 'FortJs'\n        }\n        const result = await viewResult('default/index.html',model);\n        return result;\n    }\n}\n")),(0,o.kt)("p",null,"By default fortjs provides ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/janl/mustache.js/"},"mustache")," as view engine. But any view engine like - handlebar, ejs etc can be used."),(0,o.kt)("p",null,"For configuring other view engine, please read the docs - ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced/view-engine"},"viewEngine")))}d.isMDXComponent=!0}}]);