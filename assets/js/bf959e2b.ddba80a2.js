"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[7128],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,y=d["".concat(i,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(y,s(s({ref:t},p),{},{components:r})):n.createElement(y,s({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[d]="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9514:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={title:"Body",keywords:["request","post","body","fortjs","node"],description:"fortjs body member details"},s="Body",c={unversionedId:"concepts/body",id:"concepts/body",title:"Body",description:"fortjs body member details",source:"@site/docs/concepts/body.md",sourceDirName:"concepts",slug:"/concepts/body",permalink:"/docs/concepts/body",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/concepts/body.md",tags:[],version:"current",frontMatter:{title:"Body",keywords:["request","post","body","fortjs","node"],description:"fortjs body member details"},sidebar:"tutorialSidebar",previous:{title:"Guard",permalink:"/docs/component/guard"},next:{title:"Cookie",permalink:"/docs/concepts/cookie"}},i={},l=[{value:"Inject Body Data",id:"inject-body-data",level:2}],p={toc:l},d="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"body"},"Body"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"body")," is class member of ",(0,o.kt)("a",{parentName:"p",href:"/docs/component/guard"},"Guard")," and ",(0,o.kt)("a",{parentName:"p",href:"/docs/controller"},"Controller"),". It is used to access body data sent in http post request. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { Controller, worker, HTTP_METHOD,  textResult } from "fortjs";\n\nexport class DefaultController extends Controller {\n\n    @worker(HTTP_METHOD.Post)\n    async login() {\n        // access post data\n        const userId = this.body.userId;\n        const pwd = this.body.password;\n\n        return textResult("OK")\n    }\n}\n')),(0,o.kt)("p",null,"By default fortjs parses the body data. But it can be turned off by setting option - ",(0,o.kt)("inlineCode",{parentName:"p"},"shouldParsePost")," . Please check ",(0,o.kt)("a",{parentName:"p",href:"/docs/setup"},"bootstrap")," doc for more info."),(0,o.kt)("p",null,"Certainly! Here's the prettified version:"),(0,o.kt)("h2",{id:"inject-body-data"},"Inject Body Data"),(0,o.kt)("p",null,"You can inject body data into components or controller methods for easy access to HTTP request body data. This also allows you to type the HTTP body."),(0,o.kt)("p",null,"To achieve this, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"@asBody")," decorator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { Controller, http, textResult, asBody } from "fortjs";\n\nexport class UserController extends Controller {\n\n    @http.post("/create")\n    //highlight-next-line\n    async createUser(@asBody user) {\n        // The \'user\' parameter now contains the data from the HTTP request body\n        console.log(user);\n\n        // Your logic for creating a user\n        // ...\n\n        return textResult("User created successfully");\n    }\n}\n')),(0,o.kt)("p",null,"In this example, the ",(0,o.kt)("inlineCode",{parentName:"p"},"@asBody()")," decorator is used on the ",(0,o.kt)("inlineCode",{parentName:"p"},"user")," parameter of the ",(0,o.kt)("inlineCode",{parentName:"p"},"createUser")," method. This automatically injects the data from the HTTP request body into the ",(0,o.kt)("inlineCode",{parentName:"p"},"user")," parameter. You can then use this data within your method to perform the desired logic, such as creating a user in this case."),(0,o.kt)("p",null,"Please ensure that the structure of the ",(0,o.kt)("inlineCode",{parentName:"p"},"user")," object aligns with the expected format and content of the data sent in the HTTP request body."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"In typescript: you can assign a type to user variable. For example -"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import {user} from "@/models";\nasync createUser(@asBody user: User) {\n    \n}\n'))))}u.isMDXComponent=!0}}]);