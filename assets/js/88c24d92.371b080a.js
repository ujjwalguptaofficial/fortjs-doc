"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[2465],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(a),u=r,m=d["".concat(l,".").concat(u)]||d[u]||h[u]||o;return a?n.createElement(m,c(c({ref:t},p),{},{components:a})):n.createElement(m,c({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,c=new Array(o);c[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=a[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6718:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const o={title:"Cache Manager",keywords:["Fort.js","caching","cacheFor decorator","performance optimization","web development","JavaScript framework"],description:"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cacheFor decorator and best practices for caching strategies."},c="Cache Manager",i={unversionedId:"advanced/caching/cache-manager",id:"advanced/caching/cache-manager",title:"Cache Manager",description:"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cacheFor decorator and best practices for caching strategies.",source:"@site/docs/advanced/caching/cache-manager.md",sourceDirName:"advanced/caching",slug:"/advanced/caching/cache-manager",permalink:"/docs/advanced/caching/cache-manager",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/advanced/caching/cache-manager.md",tags:[],version:"current",frontMatter:{title:"Cache Manager",keywords:["Fort.js","caching","cacheFor decorator","performance optimization","web development","JavaScript framework"],description:"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cacheFor decorator and best practices for caching strategies."},sidebar:"tutorialSidebar",previous:{title:"Caching",permalink:"/docs/advanced/caching/"},next:{title:"Components",permalink:"/docs/advanced/components"}},l={},s=[{value:"Save data",id:"save-data",level:2},{value:"Get data",id:"get-data",level:2},{value:"Delete data",id:"delete-data",level:2}],p={toc:s},d="wrapper";function h(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cache-manager"},"Cache Manager"),(0,r.kt)("p",null,"The Cache Manager allows you to manually cache data using key-value pairs. In Fort.js, you can access the ",(0,r.kt)("inlineCode",{parentName:"p"},"cache")," property in all components to utilize the Cache Manager."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"cacheFor")," internally uses Cache Manager.")),(0,r.kt)("h2",{id:"save-data"},"Save data"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," method available on ",(0,r.kt)("inlineCode",{parentName:"p"},"cache")," can be used to save data. The ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," method accepts - key, value and ttl in seconds. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Controller, http, cacheFor, textResult } from "fortjs";\n\nexport class CacheController extends Controller {\n\n    @http.post("/add")\n    async cacheDataManually() {\n        const { key, value } = this.body;\n        //highlight-start\n        // cache this data for 60 second\n        await this.cache.set(key, value, 60);\n        //highlight-end\n        return textResult("Ok");\n    }\n}\n')),(0,r.kt)("h2",{id:"get-data"},"Get data"),(0,r.kt)("p",null,"Once you have save data, you can get data using ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," property to fetch the data stored."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Controller, http, cacheFor, jsonResult } from "fortjs";\n\nexport class CacheController extends Controller {\n\n    @http.get("/get/{key}")\n    async getCacheData() {\n        const { key } = this.param;\n        //highlight-start\n        const value = await this.cache.get(key);\n        //highlight-end\n        return jsonResult({\n            value: value && value.data\n        });\n    }\n\n}\n')),(0,r.kt)("h2",{id:"delete-data"},"Delete data"),(0,r.kt)("p",null,"The stored data can be deleted using ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," method. The ",(0,r.kt)("inlineCode",{parentName:"p"},"delete")," method returns boolean value indicating if data is deleted or not."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Controller, http, cacheFor, jsonResult } from "fortjs";\n\nexport class CacheController extends Controller {\n\n    @http.get("/delete/{key}")\n    async deleteCache() {\n        const { key } = this.param;\n        //highlight-start\n        const value = await this.cache.delete(key);\n        //highlight-end\n        return jsonResult({\n            value: value\n        });\n    }\n}\n')))}h.isMDXComponent=!0}}]);