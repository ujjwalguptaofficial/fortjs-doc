"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Get Started","href":"/docs/get-started","docId":"get-started"},{"type":"link","label":"Controller","href":"/docs/controller","docId":"controller"},{"type":"link","label":"Route","href":"/docs/route","docId":"route"},{"type":"link","label":"Validation","href":"/docs/validation","docId":"validation"},{"type":"category","label":"Authentication","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Passport","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Passport JWT Authentication","href":"/docs/authentication/passport/passport-jwt","docId":"authentication/passport/passport-jwt"}],"href":"/docs/authentication/passport/"}],"href":"/docs/authentication/"},{"type":"category","label":"Component","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Wall","href":"/docs/component/wall","docId":"component/wall"},{"type":"link","label":"Shield","href":"/docs/component/shield","docId":"component/shield"},{"type":"link","label":"Guard","href":"/docs/component/guard","docId":"component/guard"}],"href":"/docs/component/"},{"type":"category","label":"Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Query","href":"/docs/concepts/query","docId":"concepts/query"},{"type":"link","label":"Param","href":"/docs/concepts/param","docId":"concepts/param"},{"type":"link","label":"Http Body","href":"/docs/concepts/body","docId":"concepts/body"},{"type":"link","label":"Data","href":"/docs/concepts/data","docId":"concepts/data"},{"type":"link","label":"Dependency Injection","href":"/docs/concepts/dependency-injection","docId":"concepts/dependency-injection"},{"type":"link","label":"Session","href":"/docs/concepts/session","docId":"concepts/session"},{"type":"link","label":"Cookie","href":"/docs/concepts/cookie","docId":"concepts/cookie"},{"type":"link","label":"File","href":"/docs/concepts/file","docId":"concepts/file"},{"type":"link","label":"View","href":"/docs/concepts/view","docId":"concepts/view"},{"type":"link","label":"Logger","href":"/docs/concepts/logger","docId":"concepts/logger"},{"type":"link","label":"Middleware","href":"/docs/concepts/middleware","docId":"concepts/middleware"},{"type":"link","label":"Caching","href":"/docs/concepts/caching","docId":"concepts/caching"},{"type":"link","label":"Cron","href":"/docs/concepts/cron","docId":"concepts/cron"}]},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Database","href":"/docs/guides/database","docId":"guides/database"},{"type":"link","label":"REST API","href":"/docs/guides/rest","docId":"guides/rest"}]},{"type":"link","label":"Http Result","href":"/docs/http-result","docId":"http-result"},{"type":"link","label":"Bootstrap","href":"/docs/setup","docId":"setup"},{"type":"category","label":"Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Worker","href":"/docs/advanced/worker","docId":"advanced/worker"},{"type":"category","label":"caching","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cache Manager","href":"/docs/advanced/caching/cache-manager","docId":"advanced/caching/cache-manager"},{"type":"link","label":"Cache store","href":"/docs/advanced/caching/cache-store","docId":"advanced/caching/cache-store"}]},{"type":"link","label":"Components","href":"/docs/advanced/components","docId":"advanced/components"},{"type":"link","label":"Customize Error","href":"/docs/advanced/customize-error","docId":"advanced/customize-error"},{"type":"link","label":"Format Response","href":"/docs/advanced/format-response","docId":"advanced/format-response"},{"type":"link","label":"GraphQl","href":"/docs/advanced/graphql","docId":"advanced/graphql"},{"type":"link","label":"Session store","href":"/docs/advanced/session-store","docId":"advanced/session-store"},{"type":"link","label":"Socket.io Configuration","href":"/docs/advanced/socket-io","docId":"advanced/socket-io"},{"type":"link","label":"Task scheduler","href":"/docs/advanced/task_scheduler","docId":"advanced/task_scheduler"},{"type":"link","label":"Validator","href":"/docs/advanced/validator","docId":"advanced/validator"},{"type":"link","label":"View Engine","href":"/docs/advanced/view-engine","docId":"advanced/view-engine"},{"type":"link","label":"XmlBodyParser","href":"/docs/advanced/xml-parser","docId":"advanced/xml-parser"}]},{"type":"category","label":"Decorators","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"validate Decorator","href":"/docs/decorators/validate","docId":"decorators/validate"}],"href":"/docs/decorators/"},{"type":"category","label":"Test","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"e2e Test","href":"/docs/test/e2e-test","docId":"test/e2e-test"},{"type":"link","label":"Initialize Controller","href":"/docs/test/initialize","docId":"test/initialize"},{"type":"link","label":"Unit Test","href":"/docs/test/unit-test","docId":"test/unit-test"}],"href":"/docs/test/"},{"type":"category","label":"Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Http Request","href":"/docs/interfaces/http-request","docId":"interfaces/http-request"},{"type":"link","label":"Http Response","href":"/docs/interfaces/http-response","docId":"interfaces/http-response"},{"type":"link","label":"HttpResult","href":"/docs/interfaces/http-result","docId":"interfaces/http-result"},{"type":"link","label":"View Engine Data","href":"/docs/interfaces/view-engine-data","docId":"interfaces/view-engine-data"}]},{"type":"category","label":"Swagger","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Swagger Model","href":"/docs/swagger/model","docId":"swagger/model"}],"href":"/docs/swagger/"},{"type":"link","label":"Deployment","href":"/docs/deployment","docId":"deployment"}]},"docs":{"advanced/caching/cache-manager":{"id":"advanced/caching/cache-manager","title":"Cache Manager","description":"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cache manager and best practices for caching strategies.","sidebar":"tutorialSidebar"},"advanced/caching/cache-store":{"id":"advanced/caching/cache-store","title":"Cache store","description":"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cache manager and best practices for caching strategies.","sidebar":"tutorialSidebar"},"advanced/components":{"id":"advanced/components","title":"Components","description":"Fortjs exposes Components which allows you to access application component at anywhere in your code.","sidebar":"tutorialSidebar"},"advanced/customize-error":{"id":"advanced/customize-error","title":"Customize Error","description":"How to customize error in nodejs using fortjs","sidebar":"tutorialSidebar"},"advanced/format-response":{"id":"advanced/format-response","title":"Format Response","description":"Formatting response in nodejs using fortjs","sidebar":"tutorialSidebar"},"advanced/graphql":{"id":"advanced/graphql","title":"GraphQl","description":"How to use graphql in node using fortjs","sidebar":"tutorialSidebar"},"advanced/session-store":{"id":"advanced/session-store","title":"Session store","description":"Explore the implementation of a custom session store in FortJs. Learn how to manage user sessions efficiently for your FortJs applications.","sidebar":"tutorialSidebar"},"advanced/socket-io":{"id":"advanced/socket-io","title":"Socket.io Configuration","description":"Socket.IO enables real-time, bidirectional and event-based communication.","sidebar":"tutorialSidebar"},"advanced/task_scheduler":{"id":"advanced/task_scheduler","title":"Task scheduler","description":"DOC in progress, please check later.","sidebar":"tutorialSidebar"},"advanced/validator":{"id":"advanced/validator","title":"Validator","description":"We are working on this page.","sidebar":"tutorialSidebar"},"advanced/view-engine":{"id":"advanced/view-engine","title":"View Engine","description":"Creating custom view engine in fortjs","sidebar":"tutorialSidebar"},"advanced/worker":{"id":"advanced/worker","title":"Worker","description":"Description about worker in fortjs","sidebar":"tutorialSidebar"},"advanced/xml-parser":{"id":"advanced/xml-parser","title":"XmlBodyParser","description":"Configure fortjs to accept xml data as http body","sidebar":"tutorialSidebar"},"authentication/authentication":{"id":"authentication/authentication","title":"Authentication","description":"Learn how to implement authentication in Fort.js, covering session-based authentication for securing your web applications. Explore the documentation for robust user authentication.","sidebar":"tutorialSidebar"},"authentication/passport/passport":{"id":"authentication/passport/passport","title":"Passport","description":"Fort.js framework with Passport.js integration for flexible authentication, supporting JWT and sessions. Enhance security and user management in your web applications.","sidebar":"tutorialSidebar"},"authentication/passport/passport-jwt":{"id":"authentication/passport/passport-jwt","title":"Passport JWT Authentication","description":"Implement secure JWT authentication in Fort.js using Passport.js. Enhance your web application\'s security and user authentication with stateless persistence.","sidebar":"tutorialSidebar"},"component/component":{"id":"component/component","title":"Component","description":"Explore the versatile components in Fort.js, including Walls, Shields, and Guards. Learn how to use them to enhance your application\'s structure and security.","sidebar":"tutorialSidebar"},"component/guard":{"id":"component/guard","title":"Guard","description":"Learn about creating and using Guards in Fort.js to control access to controller methods.","sidebar":"tutorialSidebar"},"component/shield":{"id":"component/shield","title":"Shield","description":"Enhance the security and control access to your Fort.js application using Shields. Shields act as security layers on top of controllers, allowing you to execute logic before granting access to specific resources. Explore use cases like authentication, authorization, rate limiting, input validation, and more.","sidebar":"tutorialSidebar"},"component/wall":{"id":"component/wall","title":"Wall","description":"A Wall in Fort.js acts as the initial gatekeeper for incoming HTTP requests. It controls whether a request should be allowed or rejected, and it can execute tasks and pass data to the Controller. Walls are essential components for implementing global application logic, such as setting CORS headers or counting requests. They provide a modular and reusable way to structure the initial handling of incoming requests.","sidebar":"tutorialSidebar"},"concepts/body":{"id":"concepts/body","title":"Http Body","description":"Explore the HTTP body handling capabilities in Fort.js. Learn how to access and parse the request body in a Fort.js application.","sidebar":"tutorialSidebar"},"concepts/caching":{"id":"concepts/caching","title":"Caching","description":"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cacheFor decorator and best practices for caching strategies.","sidebar":"tutorialSidebar"},"concepts/cookie":{"id":"concepts/cookie","title":"Cookie","description":"How to access Http Cookie in node using fortjs","sidebar":"tutorialSidebar"},"concepts/cron":{"id":"concepts/cron","title":"Cron","description":"Learn how to seamlessly integrate and manage cron jobs using Fortjs. Create, start, stop, and configure cron tasks effortlessly.","sidebar":"tutorialSidebar"},"concepts/data":{"id":"concepts/data","title":"Data","description":"How to pass & access components data","sidebar":"tutorialSidebar"},"concepts/dependency-injection":{"id":"concepts/dependency-injection","title":"Dependency Injection","description":"Learn about Dependency Injection in Fort.js and how to use decorators such as `@singleton` and `@assign` for injecting dependencies into controllers and components. These decorators provide a clean and modular way to manage dependencies, making your code more maintainable and testable. ","sidebar":"tutorialSidebar"},"concepts/file":{"id":"concepts/file","title":"File","description":"Explore file handling capabilities in Fort.js, including file uploads and storage. Learn how to implement robust file handling functionality for your web application.","sidebar":"tutorialSidebar"},"concepts/logger":{"id":"concepts/logger","title":"Logger","description":"How to use & customize logger in fortjs","sidebar":"tutorialSidebar"},"concepts/middleware":{"id":"concepts/middleware","title":"Middleware","description":"Explore how to use middleware, including Helmet.js, in Fort.js for securing your API.","sidebar":"tutorialSidebar"},"concepts/param":{"id":"concepts/param","title":"Param","description":"parameterizing route in fortjs","sidebar":"tutorialSidebar"},"concepts/query":{"id":"concepts/query","title":"Query","description":"Accessing query string value in fortjs","sidebar":"tutorialSidebar"},"concepts/session":{"id":"concepts/session","title":"Session","description":"Learn about sessions in FortJs, a web framework for Node.js. Understand how to manage session data and customize the session store.","sidebar":"tutorialSidebar"},"concepts/view":{"id":"concepts/view","title":"View","description":"How to create & render views","sidebar":"tutorialSidebar"},"controller":{"id":"controller","title":"Controller","description":"Explore the documentation for Fort.js controllers, the key components for handling HTTP requests, organizing application logic, and building robust web applications.","sidebar":"tutorialSidebar"},"decorators/decorators":{"id":"decorators/decorators","title":"Decorator","description":"This page tells about different decorator present in fortjs.","sidebar":"tutorialSidebar"},"decorators/validate":{"id":"decorators/validate","title":"validate Decorator","description":"This page tells about decorator ExpectQuery & how to use this.","sidebar":"tutorialSidebar"},"deployment":{"id":"deployment","title":"Deployment","description":"Deployment note in Node.js using Fort.js","sidebar":"tutorialSidebar"},"get-started":{"id":"get-started","title":"Get Started","description":"Get started quickly with Fort.js, a powerful and modular web framework for Node.js. Follow this comprehensive guide to set up your project, understand the basics, and explore essential features for building robust web applications.","sidebar":"tutorialSidebar"},"guides/database":{"id":"guides/database","title":"Database","description":"Explore database integration with Fort.js using popular ORM libraries such as Sequelize, TypeORM, and Prisma. Learn how to connect Fort.js to PostgreSQL, MongoDB, MySQL, SQLite, and SQL Server. Discover best practices, data modeling, CRUD operations, and database security in Fort.js applications.","sidebar":"tutorialSidebar"},"guides/rest":{"id":"guides/rest","title":"REST API","description":"Comprehensive guide on building and consuming RESTful APIs with Fort.js","sidebar":"tutorialSidebar"},"http-result":{"id":"http-result","title":"Http Result","description":"Learn about different HTTP result types in FortJs, including text results, JSON results, HTML results, view results, file results, download results, and redirect results.","sidebar":"tutorialSidebar"},"interfaces/http-request":{"id":"interfaces/http-request","title":"Http Request","description":"Type http request member description","sidebar":"tutorialSidebar"},"interfaces/http-response":{"id":"interfaces/http-response","title":"Http Response","description":"Type HttpResponse member description","sidebar":"tutorialSidebar"},"interfaces/http-result":{"id":"interfaces/http-result","title":"HttpResult","description":"Type HttpResult member description","sidebar":"tutorialSidebar"},"interfaces/view-engine-data":{"id":"interfaces/view-engine-data","title":"View Engine Data","description":"Type viewEngineData member description","sidebar":"tutorialSidebar"},"route":{"id":"route","title":"Route","description":"Explore the documentation for a specific route in Fort.js, including details on the associated controller route and HTTP route. Understand the purpose and usage of this route to efficiently handle incoming requests and enhance your Fort.js application.","sidebar":"tutorialSidebar"},"setup":{"id":"setup","title":"Bootstrap","description":"fortjs bootstrap information & how to bootstrap","sidebar":"tutorialSidebar"},"swagger/model":{"id":"swagger/model","title":"Swagger Model","description":"Swagger model in fortjs","sidebar":"tutorialSidebar"},"swagger/swagger":{"id":"swagger/swagger","title":"Swagger Integration with FortJs","description":"Learn how to seamlessly integrate Swagger with FortJs for automatic generation of API documentation. Explore initiation and model definition in Swagger with FortJs.","sidebar":"tutorialSidebar"},"test/e2e-test":{"id":"test/e2e-test","title":"e2e Test","description":"Setting up e2e test in fortjs","sidebar":"tutorialSidebar"},"test/initialize":{"id":"test/initialize","title":"Initialize Controller","description":"initialize is a method in a controller which initializes a controller.","sidebar":"tutorialSidebar"},"test/test":{"id":"test/test","title":"Test","description":"Setting up test in fortjs","sidebar":"tutorialSidebar"},"test/unit-test":{"id":"test/unit-test","title":"Unit Test","description":"Setting up unit test in fortjs","sidebar":"tutorialSidebar"},"validation":{"id":"validation","title":"Validation","description":"Explore Fortjs validation capabilities for HTTP Body, Query String, and URL Parameters. Learn how to use the versatile validate decorator, backed by powerful components like Guard and Shield.","sidebar":"tutorialSidebar"}}}')}}]);