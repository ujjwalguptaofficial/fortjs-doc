"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Get Started","href":"/docs/get-started","docId":"get-started"},{"type":"link","label":"Controller","href":"/docs/controller","docId":"controller"},{"type":"link","label":"Route","href":"/docs/route","docId":"route"},{"type":"link","label":"Validation","href":"/docs/validation","docId":"validation"},{"type":"link","label":"Authentication","href":"/docs/authentication","docId":"authentication"},{"type":"category","label":"Component","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Wall","href":"/docs/component/wall","docId":"component/wall"},{"type":"link","label":"Shield","href":"/docs/component/shield","docId":"component/shield"},{"type":"link","label":"Guard","href":"/docs/component/guard","docId":"component/guard"}],"href":"/docs/component/"},{"type":"category","label":"Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dependency Injection","href":"/docs/concepts/dependency-injection","docId":"concepts/dependency-injection"},{"type":"link","label":"Body","href":"/docs/concepts/body","docId":"concepts/body"},{"type":"link","label":"Cookie","href":"/docs/concepts/cookie","docId":"concepts/cookie"},{"type":"link","label":"Data","href":"/docs/concepts/data","docId":"concepts/data"},{"type":"link","label":"File","href":"/docs/concepts/file","docId":"concepts/file"},{"type":"link","label":"Param","href":"/docs/concepts/param","docId":"concepts/param"},{"type":"link","label":"Query","href":"/docs/concepts/query","docId":"concepts/query"},{"type":"link","label":"Session","href":"/docs/concepts/session","docId":"concepts/session"}]},{"type":"link","label":"Bootstrap","href":"/docs/setup","docId":"setup"},{"type":"link","label":"View","href":"/docs/view","docId":"view"},{"type":"link","label":"Logger","href":"/docs/logger","docId":"logger"},{"type":"link","label":"Middleware","href":"/docs/middleware","docId":"middleware"},{"type":"category","label":"Test","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"e2e Test","href":"/docs/test/e2e-test","docId":"test/e2e-test"},{"type":"link","label":"Initialize Controller","href":"/docs/test/initialize","docId":"test/initialize"},{"type":"link","label":"Unit Test","href":"/docs/test/unit-test","docId":"test/unit-test"}],"href":"/docs/test/"},{"type":"category","label":"Decorators","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"valide Decorator","href":"/docs/decorators/validate","docId":"decorators/validate"}],"href":"/docs/decorators/"},{"type":"category","label":"Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Http Format Result","href":"/docs/types/http-format-result","docId":"types/http-format-result"},{"type":"link","label":"Http Request","href":"/docs/types/http-request","docId":"types/http-request"},{"type":"link","label":"Http Response","href":"/docs/types/http-response","docId":"types/http-response"},{"type":"link","label":"HttpResult","href":"/docs/types/http-result","docId":"types/http-result"},{"type":"link","label":"View Engine Data","href":"/docs/types/view-engine-data","docId":"types/view-engine-data"}]},{"type":"category","label":"Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Worker","href":"/docs/advanced/worker","docId":"advanced/worker"},{"type":"link","label":"Components","href":"/docs/advanced/components","docId":"advanced/components"},{"type":"link","label":"Customize Error","href":"/docs/advanced/customize-error","docId":"advanced/customize-error"},{"type":"link","label":"Format Response","href":"/docs/advanced/format-response","docId":"advanced/format-response"},{"type":"link","label":"GraphQl","href":"/docs/advanced/graphql","docId":"advanced/graphql"},{"type":"link","label":"Session Provider","href":"/docs/advanced/session-provider","docId":"advanced/session-provider"},{"type":"link","label":"Socket.io Configuration","href":"/docs/advanced/socket-io","docId":"advanced/socket-io"},{"type":"link","label":"Validator","href":"/docs/advanced/validator","docId":"advanced/validator"},{"type":"link","label":"View Engine","href":"/docs/advanced/view-engine","docId":"advanced/view-engine"},{"type":"link","label":"XmlBodyParser","href":"/docs/advanced/xml-parser","docId":"advanced/xml-parser"}]},{"type":"category","label":"Swagger","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Swagger Initialization","href":"/docs/swagger/initiate","docId":"swagger/initiate"},{"type":"link","label":"Swagger Model","href":"/docs/swagger/model","docId":"swagger/model"}],"href":"/docs/swagger/"},{"type":"link","label":"Deployment","href":"/docs/deployment","docId":"deployment"}]},"docs":{"advanced/components":{"id":"advanced/components","title":"Components","description":"Fortjs exposes Components which allows you to access application component at anywhere in your code.","sidebar":"tutorialSidebar"},"advanced/customize-error":{"id":"advanced/customize-error","title":"Customize Error","description":"How to customize error in nodejs using fortjs","sidebar":"tutorialSidebar"},"advanced/format-response":{"id":"advanced/format-response","title":"Format Response","description":"Formatting response in nodejs using fortjs","sidebar":"tutorialSidebar"},"advanced/graphql":{"id":"advanced/graphql","title":"GraphQl","description":"How to use graphql in node using fortjs","sidebar":"tutorialSidebar"},"advanced/session-provider":{"id":"advanced/session-provider","title":"Session Provider","description":"Customize session provider in fortjs","sidebar":"tutorialSidebar"},"advanced/socket-io":{"id":"advanced/socket-io","title":"Socket.io Configuration","description":"Socket.IO enables real-time, bidirectional and event-based communication.","sidebar":"tutorialSidebar"},"advanced/validator":{"id":"advanced/validator","title":"Validator","description":"","sidebar":"tutorialSidebar"},"advanced/view-engine":{"id":"advanced/view-engine","title":"View Engine","description":"Creating custom view engine in fortjs","sidebar":"tutorialSidebar"},"advanced/worker":{"id":"advanced/worker","title":"Worker","description":"Description about worker in fortjs","sidebar":"tutorialSidebar"},"advanced/xml-parser":{"id":"advanced/xml-parser","title":"XmlBodyParser","description":"Configure fortjs to accept xml data as http body","sidebar":"tutorialSidebar"},"authentication":{"id":"authentication","title":"Authentication","description":"How to authenticate in nodejs using fortjs","sidebar":"tutorialSidebar"},"component/component":{"id":"component/component","title":"Components","description":"Description about components of fortjs","sidebar":"tutorialSidebar"},"component/guard":{"id":"component/guard","title":"Guard","description":"Guard is security layer on top of Worker","sidebar":"tutorialSidebar"},"component/shield":{"id":"component/shield","title":"Shield","description":"Enhance the security and control access to your Fort.js application using Shields. Shields act as security layers on top of controllers, allowing you to execute logic before granting access to specific resources. Explore use cases like authentication, authorization, rate limiting, input validation, and more.","sidebar":"tutorialSidebar"},"component/wall":{"id":"component/wall","title":"Wall","description":"A Wall in Fort.js acts as the initial gatekeeper for incoming HTTP requests. It controls whether a request should be allowed or rejected, and it can execute tasks and pass data to the Controller. Walls are essential components for implementing global application logic, such as setting CORS headers or counting requests. They provide a modular and reusable way to structure the initial handling of incoming requests.","sidebar":"tutorialSidebar"},"concepts/body":{"id":"concepts/body","title":"Body","description":"fortjs body member details","sidebar":"tutorialSidebar"},"concepts/cookie":{"id":"concepts/cookie","title":"Cookie","description":"How to access Http Cookie in node using fortjs","sidebar":"tutorialSidebar"},"concepts/data":{"id":"concepts/data","title":"Data","description":"How to pass & access components data","sidebar":"tutorialSidebar"},"concepts/dependency-injection":{"id":"concepts/dependency-injection","title":"Dependency Injection","description":"Learn about Dependency Injection in Fort.js and how to use decorators such as `@singleton` and `@assign` for injecting dependencies into controllers and components. These decorators provide a clean and modular way to manage dependencies, making your code more maintainable and testable. ","sidebar":"tutorialSidebar"},"concepts/file":{"id":"concepts/file","title":"File","description":"Access request file in nodejs using fortjs","sidebar":"tutorialSidebar"},"concepts/param":{"id":"concepts/param","title":"Param","description":"parameterizing route in fortjs","sidebar":"tutorialSidebar"},"concepts/query":{"id":"concepts/query","title":"Query","description":"Accessing query string value in fortjs","sidebar":"tutorialSidebar"},"concepts/session":{"id":"concepts/session","title":"Session","description":"Using session in fortjs","sidebar":"tutorialSidebar"},"controller":{"id":"controller","title":"Controller","description":"Description about controller in fortjs","sidebar":"tutorialSidebar"},"decorators/decorators":{"id":"decorators/decorators","title":"Decorator","description":"This page tells about different decorator present in fortjs.","sidebar":"tutorialSidebar"},"decorators/validate":{"id":"decorators/validate","title":"valide Decorator","description":"This page tells about decorator ExpectQuery & how to use this.","sidebar":"tutorialSidebar"},"deployment":{"id":"deployment","title":"Deployment","description":"Deployment note in nodejs using fortjs","sidebar":"tutorialSidebar"},"get-started":{"id":"get-started","title":"Get Started","description":"Get started quickly with Fort.js, a powerful and modular web framework for Node.js. Follow this comprehensive guide to set up your project, understand the basics, and explore essential features for building robust web applications.","sidebar":"tutorialSidebar"},"logger":{"id":"logger","title":"Logger","description":"How to use & customize logger in fortjs","sidebar":"tutorialSidebar"},"middleware":{"id":"middleware","title":"Middleware","description":"How to use middleware pattern in fortjs.","sidebar":"tutorialSidebar"},"route":{"id":"route","title":"Route","description":"Explore the documentation for a specific route in Fort.js, including details on the associated controller route and HTTP route. Understand the purpose and usage of this route to efficiently handle incoming requests and enhance your Fort.js application.","sidebar":"tutorialSidebar"},"setup":{"id":"setup","title":"Bootstrap","description":"fortjs bootstrap information & how to bootstrap","sidebar":"tutorialSidebar"},"swagger/initiate":{"id":"swagger/initiate","title":"Swagger Initialization","description":"Swagger integration in fortjs","sidebar":"tutorialSidebar"},"swagger/model":{"id":"swagger/model","title":"Swagger Model","description":"Swagger model in fortjs","sidebar":"tutorialSidebar"},"swagger/swagger":{"id":"swagger/swagger","title":"Swagger","description":"How to integrate swagger in fortjs","sidebar":"tutorialSidebar"},"test/e2e-test":{"id":"test/e2e-test","title":"e2e Test","description":"Setting up e2e test in fortjs","sidebar":"tutorialSidebar"},"test/initialize":{"id":"test/initialize","title":"Initialize Controller","description":"initialize is a method in a controller which initializes a controller.","sidebar":"tutorialSidebar"},"test/test":{"id":"test/test","title":"Test","description":"Setting up test in fortjs","sidebar":"tutorialSidebar"},"test/unit-test":{"id":"test/unit-test","title":"Unit Test","description":"Setting up unit test in fortjs","sidebar":"tutorialSidebar"},"types/http-format-result":{"id":"types/http-format-result","title":"Http Format Result","description":"HttpFormatResult type description","sidebar":"tutorialSidebar"},"types/http-request":{"id":"types/http-request","title":"Http Request","description":"Type http request member description","sidebar":"tutorialSidebar"},"types/http-response":{"id":"types/http-response","title":"Http Response","description":"Type HttpResponse member description","sidebar":"tutorialSidebar"},"types/http-result":{"id":"types/http-result","title":"HttpResult","description":"Type HttpResult member description","sidebar":"tutorialSidebar"},"types/view-engine-data":{"id":"types/view-engine-data","title":"View Engine Data","description":"Type viewEngineData member description","sidebar":"tutorialSidebar"},"validation":{"id":"validation","title":"Validation","description":"Explore Fortjs validation capabilities for HTTP Body, Query String, and URL Parameters. Learn how to use the versatile validate decorator, backed by powerful components like Guard and Shield.","sidebar":"tutorialSidebar"},"view":{"id":"view","title":"View","description":"How to create & render views","sidebar":"tutorialSidebar"}}}')}}]);