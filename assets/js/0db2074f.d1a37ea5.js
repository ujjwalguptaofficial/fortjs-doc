"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[8854],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>w});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,w=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(w,o(o({ref:n},p),{},{components:t})):r.createElement(w,o({ref:n},p))}));function w(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3268:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const a={Title:"View Engine",Keywords:"view engine, cutomize, options, fortjs, node",Description:"Creating custom view engine in fortjs"},o="View Engine",l={unversionedId:"advanced/view-engine",id:"advanced/view-engine",title:"View Engine",description:'In order to create a view engine - You need to create a class which will implement class ViewEngine from "fortjs".',source:"@site/docs/advanced/view-engine.md",sourceDirName:"advanced",slug:"/advanced/view-engine",permalink:"/fortjs-doc/docs/advanced/view-engine",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/advanced/view-engine.md",tags:[],version:"current",frontMatter:{Title:"View Engine",Keywords:"view engine, cutomize, options, fortjs, node",Description:"Creating custom view engine in fortjs"},sidebar:"tutorialSidebar",previous:{title:"Socket.io Configuration",permalink:"/fortjs-doc/docs/advanced/socket-io"},next:{title:"XmlParser",permalink:"/fortjs-doc/docs/advanced/xml-parser"}},s={},c=[{value:"Create a view",id:"create-a-view",level:2}],p={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"view-engine"},"View Engine"),(0,i.kt)("p",null,"In order to create a view engine - You need to create a class which will implement class ",(0,i.kt)("inlineCode",{parentName:"p"},"ViewEngine"),' from "fortjs".'),(0,i.kt)("p",null,"e.g - Let's see how we can use ejs as view engine. You can download the code for below example here - ",(0,i.kt)("a",{href:"https://github.com/ujjwalguptaofficial/fortjs-examples/tree/master/ejs",target:"_blank"},"ViewEngine configurtion example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import { ViewEngine, ViewEngineData, getViewFromFile } from "fortjs";\nimport * as ejs from "ejs"; \n\nexport class EjsViewEngine implements ViewEngine {\n\n    async render(value: ViewEngineData) {\n        const viewData = await getViewFromFile({ fileLocation: value.view});\n        return ejs.render(viewData, value.model);\n    }\n}\n')),(0,i.kt)("p",null,"The method ",(0,i.kt)("inlineCode",{parentName:"p"},"render")," will be called by fortjs with value of type ",(0,i.kt)("a",{parentName:"p",href:"/fortjs-doc/docs/types/view-engine-data"},"ViewEngineData"),". You need to use this value and return html string."),(0,i.kt)("p",null,"After you have created view engine, you need to tell fort to use this view engine. Open app.ts /app.js"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Fort } from 'fortjs';\nimport { routes } from './routes';\nimport { EjsViewEngine } from './ejs_view_engine';\n\n\nFort.viewEngine = EjsViewEngine;\nFort.routes = routes;\nFort.create();\n\n")),(0,i.kt)("p",null,"Now We have successfully integrated our view engine with fortjs. Let's test our view engine setup - "),(0,i.kt)("h2",{id:"create-a-view"},"Create a view"),(0,i.kt)("p",null,'create a file "index.ejs" inside the folder - "views". Paste the below code inside the file -'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<html lang="en">\n\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title><%=title%></title>\n</head>\n\n<body>\n    <h1><%=msg%></h1>\n</body>\n\n</html>\n')),(0,i.kt)("p",null,"In the above code - ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"msg")," will be sent from the controller and rendered by ejs view engine. "),(0,i.kt)("p",null,"Now let's pass data from Controller and call our view engine for rendering this view - "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'export class DefaultController extends Controller {\n\n    @defaultWorker()\n    async default() {\n        const model = {\n            title: "FortJs",\n            msg: "This is rendered by mustache"\n        };\n        const result = await viewResult("index.ejs", model);\n        return result;\n    }\n}\n')),(0,i.kt)("p",null,"we are using ",(0,i.kt)("inlineCode",{parentName:"p"},"viewResult")," to render the view, which takes - the relative location of view and model value."))}u.isMDXComponent=!0}}]);