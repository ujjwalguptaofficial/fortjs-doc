"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[3051],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1695:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:6,Title:"View",Keywords:"view, render, fortjs, node",Description:"How to create & render views"},i="View",l={unversionedId:"view",id:"view",title:"View",description:"A view is a HTML page which needs some data also called model to show those datas to users.The data(model) is passed from controller to view where view engine accepts the data and create the html page.",source:"@site/docs/view.md",sourceDirName:".",slug:"/view",permalink:"/fortjs-doc/docs/view",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/view.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,Title:"View",Keywords:"view, render, fortjs, node",Description:"How to create & render views"},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/fortjs-doc/docs/setup"},next:{title:"Validation",permalink:"/fortjs-doc/docs/validation"}},s={},c=[{value:"viewResult",id:"viewresult",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"view"},"View"),(0,o.kt)("p",null,"A view is a HTML page which needs some data also called model to show those datas to users.The data(model) is passed from controller to view where view engine accepts the data and create the html page."),(0,o.kt)("h2",{id:"viewresult"},"viewResult"),(0,o.kt)("p",null,"A view is rendered using the method ",(0,o.kt)("inlineCode",{parentName:"p"},"viewResult"),". The viewResult accepts two parameters - "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"view identification - view location or view name or id"),(0,o.kt)("li",{parentName:"ol"},"model")),(0,o.kt)("br",null),"Let's see an example -",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export class DefaultController extends Controller {\n    \n    @DefaultWorker()\n    async default() {\n        const model = {\n            title: 'FortJs'\n        }\n        const result = await viewResult('default/index.html',model);\n        return result;\n    }\n}\n")),(0,o.kt)("p",null,"By default fortjs provides ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/janl/mustache.js/"},"mustache")," as view engine. But any view engine like - handlebar, ejs etc can be used."),(0,o.kt)("p",null,"For configuring other view engine, please read the docs - ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced/view-engine"},"viewEngine")))}u.isMDXComponent=!0}}]);