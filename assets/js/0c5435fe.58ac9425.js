"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[729],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=s.createContext({}),l=function(e){var t=s.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return s.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},f=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=l(n),f=r,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?s.createElement(m,i(i({ref:t},u),{},{components:n})):s.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[p]="string"==typeof e?e:r,i[1]=a;for(var l=2;l<o;l++)i[l]=n[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2367:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=n(7462),r=(n(7294),n(3905));const o={title:"Session",keywords:["session","uses","example","fortjs","node"],description:"Using session in fortjs"},i="Session",a={unversionedId:"concepts/session",id:"concepts/session",title:"Session",description:"Using session in fortjs",source:"@site/docs/concepts/session.md",sourceDirName:"concepts",slug:"/concepts/session",permalink:"/fortjs-doc/docs/concepts/session",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/concepts/session.md",tags:[],version:"current",frontMatter:{title:"Session",keywords:["session","uses","example","fortjs","node"],description:"Using session in fortjs"},sidebar:"tutorialSidebar",previous:{title:"Query",permalink:"/fortjs-doc/docs/concepts/query"},next:{title:"Http Format Result",permalink:"/fortjs-doc/docs/types/http-format-result"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,s.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"session"},"Session"),(0,r.kt)("p",null,"Session is a State Management Technique. It enables you to store and retrieve values for a user as the user navigates pages in a Web application."),(0,r.kt)("p",null,"Let's see how we can use session - "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import { Controller, defaultWorker, textResult, viewResult } from \"fortjs\";\n\nexport class DefaultController extends Controller {\n\n    @defaultWorker()\n    async default() {\n        // check if session exist\n        const isSessionExist = await this.session.isExist('userId');\n\n        // add value to session\n        await this.session.set('userId', 45);\n\n        // get session value\n        const userIdFromSession = await this.session.get('userId');\n\n        // remove session\n        await this.session.remove('session_name');\n\n        // set multiple session at a time\n        await this.session.setMany({\n            'user_id' : 1,\n            'name' : 'ujjwal gupta'\n        })\n\n        return textResult('Welcome to FortJs');\n    }\n}\n")),(0,r.kt)("p",null,"By default fortjs stores all your session data in memory which means data will be lost when nodejs process is stopped or restarted. "),(0,r.kt)("p",null,"If you want to preserve your session values, then you need to store your value in a database or use any tools or service. You can customize the session store by creating a ",(0,r.kt)("a",{parentName:"p",href:"/fortjs-doc/docs/advanced/session-provider"},"session provider"),"."),(0,r.kt)("p",null,"You should take a look at our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ujjwalguptaofficial/fortjs-examples/tree/master/authentication"},"authentication"),' example. In this example - a login page is shown to user and when user logs in - session is created. Login method is present in "default controller".'))}d.isMDXComponent=!0}}]);