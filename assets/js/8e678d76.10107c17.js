"use strict";(self.webpackChunkmy=self.webpackChunkmy||[]).push([[6826],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(r),u=a,d=m["".concat(s,".").concat(u)]||m[u]||h[u]||o;return r?n.createElement(d,c(c({ref:t},l),{},{components:r})):n.createElement(d,c({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2382:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={title:"Cache store",keywords:["Fort.js","caching","cache manager","performance optimization","web development","JavaScript framework"],description:"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cache manager and best practices for caching strategies."},c="Cache store",i={unversionedId:"advanced/caching/cache-store",id:"advanced/caching/cache-store",title:"Cache store",description:"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cache manager and best practices for caching strategies.",source:"@site/docs/advanced/caching/cache-store.md",sourceDirName:"advanced/caching",slug:"/advanced/caching/cache-store",permalink:"/docs/advanced/caching/cache-store",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/fortjs-doc/tree/main/docs/advanced/caching/cache-store.md",tags:[],version:"current",frontMatter:{title:"Cache store",keywords:["Fort.js","caching","cache manager","performance optimization","web development","JavaScript framework"],description:"Explore how to implement caching in your Fort.js applications for improved performance. Learn about the cache manager and best practices for caching strategies."},sidebar:"tutorialSidebar",previous:{title:"Cache Manager",permalink:"/docs/advanced/caching/cache-manager"},next:{title:"Components",permalink:"/docs/advanced/components"}},s={},p=[{value:"Implement a cache store",id:"implement-a-cache-store",level:2},{value:"Use cache Store",id:"use-cache-store",level:2}],l={toc:p},m="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cache-store"},"Cache store"),(0,a.kt)("p",null,"FortJs allows you to configure your cache store and store cache data in a database, or use any service. A cache store is a class that implements the interface - ",(0,a.kt)("inlineCode",{parentName:"p"},"ICacheStore"),"."),(0,a.kt)("h2",{id:"implement-a-cache-store"},"Implement a cache store"),(0,a.kt)("p",null,"Let's explore how to implement a simple memory cache store "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { ICacheData, ICacheStore } from "fortjs";\n\nconst store = new Map<any, ICacheData>();\n\nexport class MemoryCacheStore implements ICacheStore {\n\n    async set(option: ICacheData) {\n        store.set(option.key, option);\n    }\n\n    async get(key: string) {\n        return store.get(key);\n    }\n\n    async delete(key: string) {\n        return store.delete(key);\n    }\n\n    count() {\n        return store.size;\n    }\n\n    store() {\n        return store;\n    }\n}\n')),(0,a.kt)("h2",{id:"use-cache-store"},"Use cache Store"),(0,a.kt)("p",null,"Once you have created a session store, you need to instruct FortJs to use the new session store."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { Fort } from "fortjs";\nimport { UserController } from "./controllers";\nimport { MemoryCacheStore } from "./memory_cache_store";\n\n//highlight-start\n// set your cache store provider\nFort.cacheStore = MemoryCacheStore\n//highlight-end\n')))}h.isMDXComponent=!0}}]);