{"version":3,"file":"JsValidator.js","sourceRoot":"","sources":["../Script/Business/MainLogic.ts","../Script/index.ts"],"names":[],"mappings":"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","sourcesContent":["\r\ninterface IMinMax {\r\n    Length: number,\r\n    Msg: string\r\n}\r\n\r\ninterface IError {\r\n    ErrorMsg: string,\r\n    Type: string,\r\n    Code: Function,\r\n    Regex: RegExp,\r\n    Equal: { To: any, Msg: string },\r\n    Is: { Required: boolean, Msg: string },\r\n    Min: IMinMax,\r\n    Max: IMinMax,\r\n    MinMax: {\r\n        Min: number,\r\n        Max: number,\r\n        Msg: string\r\n    }\r\n}\r\n\r\ninterface IOutResult {\r\n    Error: boolean,\r\n    Message: string\r\n}\r\n\r\nclass Helper {\r\n\r\n    IsAnyError = false;\r\n    Errors: Array<IError> = [\r\n\r\n        <IError>{\r\n            Type: 'required',\r\n            ErrorMsg: 'Required field'\r\n        },\r\n        <IError>{\r\n            Type: 'email',\r\n            Regex: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            ErrorMsg: 'Invalid email'\r\n        },\r\n        <IError>{\r\n            Type: 'url',\r\n            Regex: /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/,\r\n            ErrorMsg: 'Invalid url'\r\n        },\r\n        <any>{\r\n            Type: 'number',\r\n            Code: function (value) {\r\n                return isNaN(value);\r\n            },\r\n            ErrorMsg: \"Value should contains only digits\"\r\n        },\r\n        <IError>{\r\n            Type: 'mobile',\r\n            Regex: /^[789]\\d{9}$/,\r\n            ErrorMsg: 'Invalid mobile'\r\n        }\r\n    ];\r\n\r\n    /**\r\n     * return the error message\r\n     * \r\n     * @protected\r\n     * \r\n     * @memberOf Helper\r\n     */\r\n    protected getErrorMsg = function (errorType) {\r\n        var Msg;\r\n        this.Errors.every(function (item) {\r\n            if (item.Type == errorType) {\r\n                Msg = item.ErrorMsg;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return Msg;\r\n    }\r\n\r\n    /**\r\n     * check whether value is valid or not\r\n     * \r\n     * @protected\r\n     * \r\n     * @memberOf Helper\r\n     */\r\n    protected isError = function (value, error: IError): boolean {\r\n\r\n        var ErrorOccured = false;\r\n        this.ErrMsg = \"\";\r\n\r\n        //checking error status\r\n        if (error == undefined) {\r\n            error = <IError>{\r\n                Is: {\r\n                    Required: true\r\n                }\r\n            };\r\n        }\r\n        else if (error.Is == undefined || error.Is.Required == undefined) {\r\n            error[\"Is\"] = <any>{\r\n                Required: true\r\n            }\r\n        }\r\n\r\n        //fetching error property\r\n        if (error.Type != undefined) {\r\n            var ErrorDef = this.selectError(error.Type);\r\n            for (var property in ErrorDef) {\r\n                error[property] = error[property] == null ? ErrorDef[property] : error[property];\r\n            }\r\n        }\r\n\r\n        //validation start\r\n        if (error.Is.Required) {\r\n            this.ErrMsg = error.Is.Msg == undefined ? \"Required field\" : error.Is.Msg;\r\n            ErrorOccured = value.toString().length == 0 ? true : false;\r\n        }\r\n        //if regex exist\r\n        if (!ErrorOccured && error.Regex) {\r\n            this.ErrMsg = error.ErrorMsg;\r\n            ErrorOccured = !error.Regex.test(value);\r\n        }\r\n        //if code exist\r\n        if (!ErrorOccured && error.Code) {\r\n            this.ErrMsg = error.ErrorMsg;\r\n            ErrorOccured = error.Code(value);\r\n        }\r\n        //MinMax Check\r\n        if (!ErrorOccured) {\r\n            if (error.MinMax) {  //MinMax\r\n                this.ErrMsg = error.MinMax.Msg == undefined ? \"The length of Value should be between \" + error.MinMax.Min.toString() + \"and \" + error.MinMax.Max.toString() : error.MinMax.Msg;\r\n                ErrorOccured = (value.length >= error.MinMax.Min) && (value.length <= error.MinMax.Max);\r\n            }\r\n            else if (error.Min) { //Min\r\n                this.ErrMsg = \"Minimum length should be \" + error.Min.Length.toString();\r\n                ErrorOccured = value.length >= error.Min.Length;\r\n            }\r\n            else if (error.Max) { //Min\r\n                this.ErrMsg = \"Maximum length should be \" + error.Max.Length.toString();\r\n                ErrorOccured = value.length <= error.Max.Length;\r\n            }\r\n        }\r\n        // Equal To check\r\n        if (!ErrorOccured && error.Equal) {\r\n            this.ErrMsg = error.Equal.Msg == undefined ? \"invalid value\" : error.Equal.Msg;\r\n            ErrorOccured = (value === error.Equal.To);\r\n        }\r\n        if (!this.IsAnyError && ErrorOccured) {\r\n            this.IsAnyError = ErrorOccured;\r\n        }\r\n        return ErrorOccured;\r\n    }\r\n\r\n    selectError = function (type: string): IError {\r\n        var OutError;\r\n        this.Errors.every(function (item: IError, index) {\r\n            if (item.Type == type) {\r\n                OutError = item;\r\n                OutError['Index'] = index\r\n                return false;\r\n            }\r\n            return true;\r\n        })\r\n        return OutError;\r\n    }\r\n\r\n    selectErrorIndex = function (type: string): number {\r\n        for (var i = 0, length = this.Errors.length; i < length; i++) {\r\n            if (this.Errors[i].Type == type) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    updateError = function (item: IError) {\r\n        var Index = item[\"Index\"],\r\n            That = this;\r\n        for (var property in item) {\r\n            switch (property) {\r\n                case 'Type': That.Errors[Index] = item[property]; break;\r\n                case 'Regex': That.Errors[Index] = item[property]; break;\r\n                case 'Code': That.Errors[Index] = item[property]; break;\r\n                case 'ErrorMsg': That.Errors[Index] = item[property]; break;\r\n                case 'Is': That.Errors[Index] = item[property]; break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass JsValidator extends Helper {\r\n    ErrMsg: string;\r\n\r\n    constructor(errors: Array<IError> = []) {\r\n        super();\r\n        var That = this;\r\n        errors.forEach(function (item) {\r\n            That.setErrorDef(item);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * validate the value\r\n     * \r\n     * \r\n     * @memberOf JsValidator\r\n     */\r\n    isInvalid = function (value, error: IError): boolean {\r\n        // this.ErrMsg = \"\";\r\n        // if (error == undefined) {\r\n        //     return this.isError(value, <IError>{\r\n        //         Is: {\r\n        //             Required: true\r\n        //         }\r\n        //     });\r\n        // }\r\n        // else if (error.Is == undefined || error.Is.Required == undefined) {\r\n        //     error[\"Is\"] = <any>{\r\n        //         Required: true\r\n        //     }\r\n        //     return this.isError(value, error);\r\n        // }\r\n        return this.isError(value, error);\r\n\r\n    };\r\n\r\n    isValid = function (value, error: IError): boolean {\r\n        // this.ErrMsg = \"\";\r\n        // if (error == undefined) {\r\n        //     return !this.isError(value, <IError>{\r\n        //         Is: {\r\n        //             Required: true\r\n        //         }\r\n        //     });\r\n        // }\r\n        // else if (error.Is == undefined || error.Is.Required == undefined) {\r\n        //     error[\"Is\"] = <any>{\r\n        //         Required: true\r\n        //     }\r\n        //     return !this.isError(value, error);\r\n        // }\r\n        return !this.isError(value, error);\r\n\r\n    };\r\n\r\n    /**\r\n     * set the error definition\r\n     * \r\n     * \r\n     * @memberOf JsValidator\r\n     */\r\n    setErrorDef = function (error) {\r\n        var TmpError = this.selectError(error.Type);\r\n        if (TmpError != null && error.Type == TmpError.Type) {\r\n            this.updateError(error);\r\n        }\r\n        else {\r\n            this.Errors.push(error);\r\n        }\r\n    }\r\n\r\n    startValidation = function () {\r\n        this.IsAnyError = false;\r\n    }\r\n\r\n}\r\n\r\n","\r\n/// <reference path=\"Business/MainLogic.ts\" />\r\n\r\n"]}