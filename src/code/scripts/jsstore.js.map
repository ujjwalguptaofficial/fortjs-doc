{"version":3,"file":"jsstore.js","sourceRoot":"","sources":["../License.ts","../KeyStore/UtilsLogic.ts","../KeyStore/CommonLogic.ts","../KeyStore/Helper.ts","../KeyStore/Business/BaseLogic.ts","../KeyStore/Business/GetLogic.ts","../KeyStore/Business/SetLogic.ts","../KeyStore/Business/RemoveLogic.ts","../KeyStore/Business/InitDbLogic.ts","../KeyStore/Business/MainLogic.ts","../KeyStore/KeyStoreInstance.ts","../JsStore/enums.ts","../JsStore/interfaces.ts","../JsStore/CommonLogic.ts","../JsStore/UtilsLogic.ts","../JsStore/HelperLogic.ts","../JsStore/Error.ts","../JsStore/Model/Column.ts","../JsStore/Model/Table.ts","../JsStore/Model/TableHelper.ts","../JsStore/Model/DbHelper.ts","../JsStore/Model/DataBase.ts","../JsStore/Business/BaseHelperLogic.ts","../JsStore/Business/BaseLogic.ts","../JsStore/Business/CreateDbLogic.ts","../JsStore/Business/DropDbLogic.ts","../JsStore/Business/BulkInsertLogic.ts","../JsStore/Business/OpenDbLogic.ts","../JsStore/Business/ClearLogic.ts","../JsStore/Business/MainLogic.ts","../JsStore/Business/WhereChecker.ts","../JsStore/Business/TransactionLogic.ts","../JsStore/Business/Select/BaseSelectLogic.ts","../JsStore/Business/Select/NotWhereLogic.ts","../JsStore/Business/Select/InLogic.ts","../JsStore/Business/Select/LikeLogic.ts","../JsStore/Business/Select/WhereLogic.ts","../JsStore/Business/Select/JoinLogic.ts","../JsStore/Business/Select/GroupByHelperLogic.ts","../JsStore/Business/Select/HelperLogic.ts","../JsStore/Business/Select/InstanceLogic.ts","../JsStore/Business/Count/BaseCountLogic.ts","../JsStore/Business/Count/NotWhereLogic.ts","../JsStore/Business/Count/InLogic.ts","../JsStore/Business/Count/LikeLogic.ts","../JsStore/Business/Count/WhereLogic.ts","../JsStore/Business/Count/InstanceLogic.ts","../JsStore/Business/Update/BaseUpdateLogic.ts","../JsStore/Business/Update/NotWhereLogic.ts","../JsStore/Business/Update/InLogic.ts","../JsStore/Business/Update/LikeLogic.ts","../JsStore/Business/Update/WhereLogic.ts","../JsStore/Business/Update/InstanceLogic.ts","../JsStore/Business/Update/SchemaChecker.ts","../JsStore/Business/Remove/BaseRemoveLogic.ts","../JsStore/Business/Remove/NotWhereLogic.ts","../JsStore/Business/Remove/InLogic.ts","../JsStore/Business/Remove/LikeLogic.ts","../JsStore/Business/Remove/WhereLogic.ts","../JsStore/Business/Remove/InstanceLogic.ts","../JsStore/Business/Insert/InstanceLogic.ts","../JsStore/Business/Insert/ValueCheckerLogic.ts","../JsStore/Business/Insert/ValuesCheckerLogic.ts","../JsStore/CodeExecutionHelper.ts","../JsStore/JsStoreInstance.ts","../JsStore/DirectCode.ts"],"names":[],"mappings":"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","sourcesContent":["/*! \r\n * @license :JsStore.js - v1.6.4 - 15/03/2018\r\n * https://github.com/ujjwalguptaofficial/JsStore\r\n * Copyright (c) 2017 @Ujjwal Gupta; Licensed MIT \r\n */","namespace KeyStore {\r\n    export interface IError {\r\n        Name: string;\r\n        Value: string;\r\n    }\r\n    export class Utils {\r\n        /**\r\n         * determine and set the DataBase Type\r\n         * \r\n         * \r\n         * @memberOf UtilityLogic\r\n         */\r\n        static setDbType() {\r\n            (self as any).indexedDB = self.indexedDB || (self as any).mozIndexedDB ||\r\n                (self as any).webkitIndexedDB || (self as any).msIndexedDB;\r\n            if (indexedDB) {\r\n                (self as any).IDBTransaction = (self as any).IDBTransaction ||\r\n                    (self as any).webkitIDBTransaction || (self as any).msIDBTransaction;\r\n                (self as any).IDBKeyRange = (self as any).IDBKeyRange ||\r\n                    (self as any).webkitIDBKeyRange || (self as any).msIDBKeyRange;\r\n            }\r\n            else if (!self.alert) {\r\n                console.log('worked failed');\r\n                (self as any).postMessage('message:WorkerFailed');\r\n            }\r\n            else {\r\n                JsStore.db_status = {\r\n                    ConStatus: JsStore.Connection_Status.UnableToStart,\r\n                    LastError: JsStore.Error_Type.IndexedDbUndefined\r\n                };\r\n            }\r\n        }\r\n\r\n        static updateDbStatus(status: Connection_Status, err?: JsStore.Error_Type) {\r\n            if (err === undefined) {\r\n                db_status.ConStatus = status;\r\n            }\r\n            else {\r\n                db_status = {\r\n                    ConStatus: status,\r\n                    LastError: err\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n\r\n    export interface ISelect {\r\n        From: any;\r\n        Where: any;\r\n    }\r\n\r\n    export interface IDelete {\r\n        From: string;\r\n        Where: any;\r\n    }\r\n\r\n    export enum Connection_Status {\r\n        Connected = \"connected\",\r\n        Closed = \"closed\",\r\n        NotStarted = \"not_connected\"\r\n    }\r\n\r\n    export interface IDbStatus {\r\n        ConStatus: Connection_Status;\r\n        LastError: string;\r\n    }\r\n\r\n    export interface IInsert {\r\n        TableName: string;\r\n        Set: {\r\n            Key: string,\r\n            Value; any\r\n        };\r\n    }\r\n\r\n    export interface IWebWorkerRequest {\r\n        Name: string;\r\n        Query: any;\r\n        OnSuccess: (result) => void;\r\n        OnError: (err: IError) => void;\r\n    }\r\n\r\n    export interface IWebWorkerResult {\r\n        ErrorOccured: boolean;\r\n        ErrorDetails: any;\r\n        ReturnedValue: any;\r\n    }\r\n\r\n    export var request_queue: IWebWorkerRequest[] = [],\r\n        table_name = \"LocalStore\",\r\n        is_code_executing = false,\r\n        db_status: IDbStatus = {\r\n            ConStatus: Connection_Status.NotStarted,\r\n            LastError: \"\"\r\n        };\r\n\r\n}","namespace KeyStore {\r\n    export var prcoessExecutionOfCode = function (request: IWebWorkerRequest) {\r\n        request_queue.push(request);\r\n        if (request_queue.length === 1) {\r\n            executeCode();\r\n        }\r\n    };\r\n\r\n    export var executeCode = function () {\r\n        if (!is_code_executing && request_queue.length > 0) {\r\n            is_code_executing = true;\r\n            var request = {\r\n                Name: request_queue[0].Name,\r\n                Query: request_queue[0].Query\r\n            } as IWebWorkerRequest;\r\n            executeCodeDirect(request);\r\n        }\r\n    };\r\n\r\n    export var executeCodeDirect = function (request: IWebWorkerRequest) {\r\n        new Business.Main(function (results) {\r\n            this.processFinishedRequest(results);\r\n        }.bind(this)).checkConnectionAndExecuteLogic(request);\r\n    };\r\n\r\n    export var processFinishedRequest = function (message: IWebWorkerResult) {\r\n        var finished_request: IWebWorkerRequest = request_queue.shift();\r\n        is_code_executing = false;\r\n        if (message.ErrorOccured) {\r\n            if (finished_request.OnError) {\r\n                finished_request.OnError(message.ErrorDetails);\r\n            }\r\n            else {\r\n                console.error(message.ErrorDetails);\r\n            }\r\n        }\r\n        else if (finished_request.OnSuccess) {\r\n            finished_request.OnSuccess(message.ReturnedValue);\r\n        }\r\n        this.executeCode();\r\n    };\r\n\r\n}","namespace KeyStore {\r\n    export namespace Business {\r\n        export class Base {\r\n            _results = null;\r\n            _onSuccess: (results) => void;\r\n            _onError: (err: IError) => void;\r\n            _errorOccured: boolean = false;\r\n            _errorCount = 0;\r\n            _transaction: IDBTransaction;\r\n            _objectStore: IDBObjectStore;\r\n\r\n            protected onErrorOccured(e) {\r\n                ++this._errorCount;\r\n                if (this._errorCount === 1) {\r\n                    if (this._onError != null) {\r\n                        this._onError((e as any).target.error);\r\n                    }\r\n                }\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}","namespace KeyStore {\r\n    export namespace Business {\r\n        export class Get extends Base {\r\n            _query: ISelect;\r\n            constructor(query: ISelect, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n                super();\r\n                this._query = query;\r\n                this._onSuccess = onSuccess;\r\n                this._onError = onError;\r\n            }\r\n\r\n            public execute() {\r\n                var getData = function (column, value) {\r\n                    var cursor_request = this._objectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.on_errorOccured(e);\r\n                    }.bind(this);\r\n                    cursor_request.onsuccess = function (e) {\r\n                        var cursor: IDBCursorWithValue = e.target.result;\r\n                        if (cursor) {\r\n                            this._results = cursor.value['Value'];\r\n                        }\r\n                    }.bind(this);\r\n                }.bind(this);\r\n                this.initTransaction();\r\n                for (var prop in this._query.Where) {\r\n                    getData(prop, this._query.Where[prop]);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            private initTransaction() {\r\n                createTransaction([this._query.From], this.onTransactionCompleted.bind(this), 'readonly');\r\n                this._objectStore = db_transaction.objectStore(this._query.From);\r\n            }\r\n\r\n            private onTransactionCompleted() {\r\n                if (this._errorOccured === false) {\r\n                    this._onSuccess(this._results);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n    export namespace Business {\r\n        export class Set extends Base {\r\n            _query: IInsert;\r\n            constructor(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                super();\r\n                try {\r\n                    this._query = query;\r\n                    this._onSuccess = onSuccess;\r\n                    this._onError = onError;\r\n                }\r\n                catch (ex) {\r\n                    console.error(ex);\r\n                }\r\n            }\r\n\r\n            public execute() {\r\n                var updateIfExistElseInsert = function () {\r\n                    var cursor_request = this._objectStore.index('Key').openCursor(\r\n                        IDBKeyRange.only(this._query.Set['Key'])\r\n                    );\r\n                    cursor_request.onsuccess = function (e) {\r\n                        var cursor: IDBCursorWithValue = e.target.result;\r\n                        if (cursor) {\r\n                            cursor.value['Value'] = this._query.Set['Value'];\r\n                            cursor.update(cursor.value);\r\n                        }\r\n                        else {\r\n                            insertData();\r\n                        }\r\n                    }.bind(this);\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                }.bind(this),\r\n                    insertData = function () {\r\n                        var add_result = this._objectStore.add(this._query.Set);\r\n                        add_result.onerror = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    }.bind(this);\r\n                this.initTransaction();\r\n                updateIfExistElseInsert();\r\n            }\r\n\r\n            private initTransaction() {\r\n                createTransaction([this._query.TableName], this.onTransactionCompleted.bind(this));\r\n                this._objectStore = db_transaction.objectStore(this._query.TableName);\r\n            }\r\n\r\n            private onTransactionCompleted() {\r\n                if (this._errorOccured === false && this._onSuccess) {\r\n                    this._onSuccess(null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n    export namespace Business {\r\n        export class Remove extends Base {\r\n            _query: IDelete;\r\n            _rowAffected: number = 0;\r\n            constructor(query: IDelete, onSuccess: (recordRemoved: number) => void, onError: (err: IError) => void) {\r\n                super();\r\n                this._query = query;\r\n                this._onSuccess = onSuccess;\r\n                this._onError = onError;\r\n            }\r\n\r\n            public execute() {\r\n                this.initTransaction();\r\n                var removeData = function (column, value) {\r\n                    var cursor_request = this._objectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                    cursor_request.onsuccess = function (e) {\r\n                        var cursor: IDBCursorWithValue = e.target.result;\r\n                        if (cursor) {\r\n                            cursor.delete();\r\n                            ++this._rowAffected;\r\n                            cursor.continue();\r\n                        }\r\n                    }.bind(this);\r\n                }.bind(this);\r\n\r\n                for (var prop in this._query.Where) {\r\n                    if (!this._errorOccured) {\r\n                        removeData(prop, this._query.Where[prop]);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            private initTransaction() {\r\n                createTransaction([this._query.From], this.onTransactionCompleted.bind(this));\r\n                this._objectStore = db_transaction.objectStore(this._query.From);\r\n            }\r\n\r\n            private onTransactionCompleted() {\r\n                if (this._errorOccured === false) {\r\n                    this._onSuccess(this._rowAffected);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n    export namespace Business {\r\n        export var temp_datas;\r\n        export class InitDb {\r\n            constructor(dbName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var db_request = self.indexedDB.open(dbName, 1);\r\n                is_db_deleted_by_browser = false;\r\n                db_request.onerror = function (event) {\r\n                    if ((event as any).target.error.name === 'InvalidStateError') {\r\n                        JsStore.db_status = {\r\n                            ConStatus: JsStore.Connection_Status.UnableToStart,\r\n                            LastError: JsStore.Error_Type.IndexedDbBlocked,\r\n                        };\r\n                    }\r\n                    if (onError != null) {\r\n                        onError((event as any).target.error);\r\n                    }\r\n                };\r\n\r\n                db_request.onsuccess = function (event) {\r\n                    db_status.ConStatus = Connection_Status.Connected;\r\n                    db_connection = db_request.result;\r\n                    db_connection.onclose = function () {\r\n                        callDbDroppedByBrowser();\r\n                        Utils.updateDbStatus(Connection_Status.Closed, JsStore.Error_Type.ConnectionClosed);\r\n                    };\r\n\r\n                    db_connection.onversionchange = function (e) {\r\n                        if (e.newVersion === null) { // An attempt is made to delete the db\r\n                            e.target.close(); // Manually close our connection to the db\r\n                            callDbDroppedByBrowser();\r\n                            Utils.updateDbStatus(Connection_Status.Closed, JsStore.Error_Type.ConnectionClosed);\r\n                        }\r\n                    };\r\n\r\n                    db_connection.onerror = function (e) {\r\n                        db_status.LastError = \"Error occured in connection :\" + e.target.result;\r\n                    };\r\n\r\n                    db_connection.onabort = function (e) {\r\n                        db_status.ConStatus = Connection_Status.Closed;\r\n                        db_status.LastError = \"Connection aborted\";\r\n                    };\r\n\r\n                    if (onSuccess != null) {\r\n                        onSuccess();\r\n                    }\r\n                };\r\n\r\n                db_request.onupgradeneeded = function (event: any) {\r\n                    var db = event.target.result,\r\n                        column = \"Key\";\r\n                    db.createObjectStore(table_name, {\r\n                        keyPath: column\r\n                    }).createIndex(column, column, { unique: true });\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace KeyStore {\r\n    export namespace Business {\r\n        export var db_connection,\r\n            is_db_deleted_by_browser: boolean,\r\n            db_transaction: IDBTransaction = null,\r\n            callDbDroppedByBrowser = function () {\r\n                is_db_deleted_by_browser = db_status.ConStatus === Connection_Status.Connected ? true : false;\r\n            },\r\n            createTransaction = function (tableNames, callBack: () => void, mode?) {\r\n                if (db_transaction === null) {\r\n                    mode = mode ? mode : \"readwrite\";\r\n                    db_transaction = db_connection.transaction(tableNames, mode);\r\n                    db_transaction.oncomplete = function () {\r\n                        db_transaction = null;\r\n                        callBack();\r\n                    };\r\n                    (db_transaction as any).ontimeout = function () {\r\n                        db_transaction = null;\r\n                        console.error('transaction timed out');\r\n                    };\r\n                }\r\n            };\r\n\r\n        export class Main {\r\n            _onSuccess: (result) => void;\r\n            constructor(onSuccess = null) {\r\n                this._onSuccess = onSuccess;\r\n            }\r\n\r\n            public set(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var obj_insert = new Set(query, onSuccess, onError);\r\n                obj_insert.execute();\r\n            }\r\n\r\n            public remove(query: IDelete, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n                var obj_delete = new Remove(query, onSuccess, onError);\r\n                obj_delete.execute();\r\n            }\r\n\r\n            public get(query: ISelect, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n                var get_object = new Get(query, onSuccess, onError);\r\n                get_object.execute();\r\n            }\r\n\r\n            public createDb(onSuccess: () => void, onError: (err: IError) => void) {\r\n                var db_name = \"KeyStore\";\r\n                var init_db_object = new InitDb(db_name, onSuccess, onError);\r\n            }\r\n\r\n            public checkConnectionAndExecuteLogic(request: IWebWorkerRequest) {\r\n                if (request.Name === 'create_db' || request.Name === 'open_db') {\r\n                    this.executeLogic(request);\r\n                }\r\n                else {\r\n                    switch (db_status.ConStatus) {\r\n                        case Connection_Status.Connected: this.executeLogic(request); break;\r\n                        case Connection_Status.NotStarted:\r\n                            setTimeout(function () {\r\n                                this.checkConnectionAndExecuteLogic(request);\r\n                            }.bind(this), 100); break;\r\n                        case Connection_Status.Closed:\r\n                            if (is_db_deleted_by_browser) {\r\n                                this.createDb(function () {\r\n                                    is_db_deleted_by_browser = false;\r\n                                    this.checkConnectionAndExecuteLogic(request);\r\n                                }.bind(this), function (err) {\r\n                                    console.error(err);\r\n                                });\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n\r\n            private returnResult(result) {\r\n                if (this._onSuccess) {\r\n                    this._onSuccess(result);\r\n                }\r\n            }\r\n\r\n            private executeLogic = function (request: IWebWorkerRequest) {\r\n                var onSuccess = function (results) {\r\n                    this.returnResult({\r\n                        ReturnedValue: results\r\n                    } as IWebWorkerResult);\r\n                }.bind(this),\r\n                    onError = function (err) {\r\n                        this.returnResult({\r\n                            ErrorDetails: err,\r\n                            ErrorOccured: true\r\n                        } as IWebWorkerResult);\r\n                    }.bind(this);\r\n\r\n                switch (request.Name) {\r\n                    case 'get':\r\n                        this.get(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'set': this.set(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'remove': this.remove(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'create_db': this.createDb(onSuccess, onError); break;\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n\r\n    /**\r\n     * Initialize KeyStore\r\n     * \r\n     */\r\n    export var init = function () {\r\n        Utils.setDbType();\r\n        if (indexedDB) {\r\n            prcoessExecutionOfCode({\r\n                Name: 'create_db',\r\n                Query: null\r\n            } as IWebWorkerRequest);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * return the value by key\r\n     * \r\n     * @param {string} key \r\n     * @param {(result) => void} onSuccess \r\n     * @param {(err: IError) => void} [onError=null] \r\n     * @returns \r\n     */\r\n    export var get = function (key: string, onSuccess: (result) => void, onError: (err: IError) => void = null) {\r\n        var query = {\r\n            From: table_name,\r\n            Where: {\r\n                Key: key\r\n            }\r\n        } as ISelect;\r\n        prcoessExecutionOfCode({\r\n            Name: 'get',\r\n            OnError: onError,\r\n            OnSuccess: onSuccess,\r\n            Query: query\r\n        } as IWebWorkerRequest);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * insert or update value\r\n     * \r\n     * @param {any} key \r\n     * @param {any} value \r\n     * @param {(result) => void} [onSuccess] \r\n     * @param {(err: IError) => void} [onError] \r\n     * @returns \r\n     */\r\n    export var set = function (key, value, onSuccess?: (result) => void, onError?: (err: IError) => void) {\r\n        var query = {\r\n            Set: {\r\n                Key: key,\r\n                Value: value\r\n            },\r\n            TableName: table_name,\r\n        } as IInsert;\r\n        prcoessExecutionOfCode({\r\n            Name: 'set',\r\n            OnError: onError,\r\n            OnSuccess: onSuccess,\r\n            Query: query\r\n        } as IWebWorkerRequest);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * delete value\r\n     * \r\n     * @param {string} key \r\n     * @param {(result) => void} [onSuccess=null] \r\n     * @param {(err: IError) => void} [onError=null] \r\n     * @returns \r\n     */\r\n    export var remove = function (\r\n        key: string, onSuccess: (result) => void = null, onError: (err: IError) => void = null\r\n    ) {\r\n        var query = {\r\n            From: table_name,\r\n            Where: {\r\n                Key: key\r\n            }\r\n        } as IDelete;\r\n        prcoessExecutionOfCode({\r\n            Name: 'remove',\r\n            OnError: onError,\r\n            OnSuccess: onSuccess,\r\n            Query: query\r\n        } as IWebWorkerRequest);\r\n        return this;\r\n    };\r\n}\r\n","namespace JsStore {\r\n\r\n    export enum Occurence {\r\n        First = 'f',\r\n        Last = 'l',\r\n        Any = 'a'\r\n    }\r\n\r\n    export enum WebWorker_Status {\r\n        Registered = \"registerd\",\r\n        Failed = \"failed\",\r\n        NotStarted = \"not_started\"\r\n    }\r\n\r\n    export enum Connection_Status {\r\n        Connected = \"connected\",\r\n        Closed = \"closed\",\r\n        NotStarted = \"not_started\",\r\n        UnableToStart = \"unable_to_start\",\r\n        ClosedByJsStore = \"closed_by_jsstore\"\r\n    }\r\n\r\n    export enum WhereQryOption {\r\n        In = \"In\",\r\n        Like = \"Like\",\r\n        Or = \"Or\"\r\n    }\r\n\r\n    export enum Data_Type {\r\n        String = \"string\",\r\n        Object = \"object\",\r\n        Array = \"array\",\r\n        Number = \"number\",\r\n        Boolean = \"boolean\",\r\n        Null = \"null\"\r\n    }\r\n}","namespace JsStore {\r\n    export interface IDbInfo {\r\n        DbName: string;\r\n        Table: {\r\n            Name: string,\r\n            Version: number\r\n        };\r\n    }\r\n\r\n    export interface IDataBaseOption {\r\n        Name: string;\r\n        Tables: ITableOption[];\r\n    }\r\n\r\n    export interface ITableOption {\r\n        Name: string;\r\n        Columns: IColumnOption[];\r\n        Version?: number;\r\n    }\r\n\r\n    export interface IColumnOption {\r\n        Name: string;\r\n        PrimaryKey?: boolean;\r\n        AutoIncrement?: boolean;\r\n        Unique?: boolean;\r\n        NotNull?: boolean;\r\n        DataType?: string;\r\n        Default?: any;\r\n        MultiEntry?: boolean;\r\n        EnableSearch?: boolean;\r\n    }\r\n\r\n    export interface ISelect {\r\n        From: any;\r\n        Where?: any;\r\n        Skip?: number;\r\n        Limit?: number;\r\n        OnSuccess?: (results: any[]) => void;\r\n        OnError?: (error: IError) => void;\r\n        Order?: IOrder;\r\n        GroupBy?: any;\r\n        Aggregate?: IAggregate;\r\n        IgnoreCase?: boolean;\r\n        Distinct?: boolean;\r\n    }\r\n\r\n    export interface IOrder {\r\n        By: string; // Column name\r\n        Type: string;\r\n    }\r\n\r\n    export interface ICount {\r\n        From: any;\r\n        IgnoreCase?: boolean;\r\n        Where?: any;\r\n        OnSuccess?: (noOfRecord: number) => void;\r\n        OnError?: (error: IError) => void;\r\n    }\r\n\r\n    export interface IRemove {\r\n        From: string;\r\n        IgnoreCase?: boolean;\r\n        Where?: any;\r\n        OnSuccess?: (rowsDeleted: number) => void;\r\n        OnError?: (error: IError) => void;\r\n    }\r\n\r\n    export interface IUpdate {\r\n        In: string;\r\n        IgnoreCase?: boolean;\r\n        Set: any;\r\n        Where?: any;\r\n        OnSuccess?: (rowsUpdated: number) => void;\r\n        OnError?: (error: IError) => void;\r\n    }\r\n\r\n    export interface IInsert {\r\n        Into: string;\r\n        Values: any[];\r\n        Return?: boolean;\r\n        OnSuccess?: (rowsInserted: number) => void;\r\n        OnError?: (error: IError) => void;\r\n        SkipDataCheck?: boolean;\r\n    }\r\n\r\n    export interface ICondition {\r\n        Column: string;\r\n        Value: string;\r\n        Op: string;\r\n    }\r\n\r\n    export interface ITableJoin {\r\n        Column: string;\r\n        Table: string;\r\n        Where?: any;\r\n        Order?: IOrder;\r\n        JoinType?: string;\r\n        NextJoin?: INextJoin;\r\n    }\r\n\r\n    export interface ISelectJoin {\r\n        From: IJoin; // IJoin\r\n        Count?: boolean;\r\n        Skip?: number;\r\n        Limit?: number;\r\n        OnSuccess?: (results) => void;\r\n        OnError?: (err: IError) => void;\r\n    }\r\n\r\n    export interface IJoin {\r\n        Table1: ITableJoin;\r\n        Join: string; // inner,left,right,outer\r\n        Table2: ITableJoin;\r\n    }\r\n\r\n    export interface INextJoin {\r\n        Table: string;\r\n        Column: string;\r\n    }\r\n\r\n    export interface IDbStatus {\r\n        ConStatus: Connection_Status;\r\n        LastError: Error_Type;\r\n    }\r\n\r\n    export interface IWebWorkerRequest {\r\n        Name: string;\r\n        Query: any;\r\n        OnSuccess: (results) => void;\r\n        OnError: (err: IError) => void;\r\n    }\r\n\r\n    export interface IWebWorkerResult {\r\n        ErrorOccured: boolean;\r\n        ErrorDetails: any;\r\n        ReturnedValue: any;\r\n        ThrowError: boolean;\r\n    }\r\n\r\n    export interface IAggregate {\r\n        Max?: any[];\r\n        Min?: any[];\r\n        Sum?: any[];\r\n        Count?: any[];\r\n        Avg?: any[];\r\n    }\r\n\r\n    export interface ITranscationQry {\r\n        TableNames: string[];\r\n        Logic: string;\r\n        Data: any;\r\n        AbortOnError?: boolean;\r\n        OnSuccess?: (results: any[]) => void;\r\n        OnError?: (err: IError) => void;\r\n    }\r\n\r\n    export interface IConfig {\r\n        EnableLog?: boolean;\r\n        OnDbDroppedByBrowser?: string;\r\n        FileName?: string;\r\n    }\r\n}","namespace JsStore {\r\n    export var enable_log = false,\r\n        db_version: number = 0,\r\n        db_status: IDbStatus = {\r\n            ConStatus: Connection_Status.NotStarted,\r\n            LastError: null\r\n        },\r\n        file_name;\r\n\r\n    export var setFileName = function (fileName) {\r\n        file_name = fileName;\r\n    };\r\n\r\n    export var getObjectFirstKey = function (value) {\r\n        for (var key in value) {\r\n            return key;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    export var log = function (msg) {\r\n        if (enable_log) {\r\n            console.log(msg);\r\n        }\r\n    };\r\n\r\n    export var logError = function (msg) {\r\n        if (enable_log) {\r\n            console.error(msg);\r\n        }\r\n    };\r\n}","namespace JsStore {\r\n    export class Utils {\r\n        static updateDbStatus(status: Connection_Status, err?: Error_Type) {\r\n            if (err === undefined) {\r\n                db_status.ConStatus = status;\r\n            }\r\n            else {\r\n                db_status = {\r\n                    ConStatus: status,\r\n                    LastError: err\r\n                };\r\n            }\r\n        }\r\n\r\n        static changeLogStatus() {\r\n            if (worker_instance) {\r\n                worker_instance.postMessage({\r\n                    Name: 'change_log_status',\r\n                    Query: {\r\n                        logging: enable_log\r\n                    }\r\n                } as IWebWorkerRequest);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","namespace JsStore {\r\n\r\n    /**\r\n     * checks whether db exist or not\r\n     * \r\n     * @param {(IDbInfo | string)} dbInfo \r\n     * @param {(isExist: boolean) => void} callback \r\n     * @param {(err: IError) => void} [errCallBack] \r\n     * @returns \r\n     */\r\n    export var isDbExist = function (\r\n        dbInfo: IDbInfo | string,\r\n        callback: (isExist: boolean) => void,\r\n        errCallBack?: (err: IError) => void\r\n    ) {\r\n        var use_promise = callback ? false : true;\r\n        if (db_status.ConStatus !== Connection_Status.UnableToStart) {\r\n            if (use_promise) {\r\n                return new Promise(function (resolve, reject) {\r\n                    if (typeof dbInfo === 'string') {\r\n                        getDbVersion(dbInfo, function (dbVersion) {\r\n                            resolve(Boolean(dbVersion));\r\n                        });\r\n                    }\r\n                    else {\r\n                        getDbVersion(dbInfo.DbName, function (dbVersion) {\r\n                            resolve(dbInfo.Table.Version <= dbVersion);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (typeof dbInfo === 'string') {\r\n                    getDbVersion.call(this, dbInfo, function (dbVersion) {\r\n                        callback.call(this, Boolean(dbVersion));\r\n                    });\r\n                }\r\n                else {\r\n                    getDbVersion.call(this, dbInfo.DbName, function (dbVersion) {\r\n                        callback.call(this, dbInfo.Table.Version <= dbVersion);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var error = {\r\n                _message: null,\r\n                _type: db_status.LastError,\r\n            } as IError;\r\n            switch (error._type) {\r\n                case Error_Type.IndexedDbBlocked:\r\n                    error._message = \"IndexedDB is blocked\"; break;\r\n                case Error_Type.IndexedDbUndefined:\r\n                    error._message = \"IndexedDB is not supported\"; break;\r\n            }\r\n            if (use_promise) {\r\n                return new Promise(function (resolve, reject) {\r\n                    reject(error);\r\n                });\r\n            }\r\n            else if (errCallBack) {\r\n                errCallBack(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * get Db Version\r\n     * \r\n     * @param {string} dbName \r\n     * @param {(version: number) => void} callback \r\n     */\r\n    export var getDbVersion = function (dbName: string, callback: (version: number) => void) {\r\n        KeyStore.get(\"JsStore_\" + dbName + '_Db_Version', function (dbVersion) {\r\n            callback.call(this, Number(dbVersion));\r\n        }.bind(this));\r\n    };\r\n\r\n    /**\r\n     * get Database Schema\r\n     * \r\n     * @param {string} dbName \r\n     * @param {(any) => void} callback \r\n     */\r\n    export var getDbSchema = function (dbName: string, callback: (any) => void) {\r\n        if (callback) {\r\n            KeyStore.get(\"JsStore_\" + dbName + \"_Schema\", function (result) {\r\n                if (result) {\r\n                    if (result._name) {\r\n                        callback(result);\r\n                    }\r\n                    else {\r\n                        var db_schema = new Model.DataBase(result);\r\n                        KeyStore.set(\"JsStore_\" + dbName + \"_Schema\", db_schema);\r\n                        callback(db_schema);\r\n                    }\r\n                }\r\n                else {\r\n                    callback(result);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * check for null value\r\n     * \r\n     * @param {any} value \r\n     * @returns \r\n     */\r\n    export var isNull = function (value) {\r\n        if (value == null) {\r\n            return true;\r\n        } else {\r\n            switch (typeof value) {\r\n                case 'string': return value.length === 0;\r\n                case 'number': return isNaN(value);\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Enable log\r\n     * \r\n     */\r\n    export var enableLog = function () {\r\n        enable_log = true;\r\n        Utils.changeLogStatus();\r\n    };\r\n\r\n    /**\r\n     * disable log\r\n     * \r\n     */\r\n    export var disableLog = function () {\r\n        enable_log = false;\r\n        Utils.changeLogStatus();\r\n    };\r\n\r\n    /**\r\n     * set the configuration\r\n     * \r\n     * @param {IConfig} config \r\n     */\r\n    export var setConfig = function (config: IConfig) {\r\n        if (config.OnDbDroppedByBrowser) {\r\n            config.OnDbDroppedByBrowser = config.OnDbDroppedByBrowser.toString();\r\n        }\r\n        if (worker_instance) {\r\n            worker_instance.postMessage({\r\n                Name: 'set_config',\r\n                Query: config\r\n            } as IWebWorkerRequest);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * get data type of supplied value\r\n     * \r\n     * @param {any} value \r\n     * @returns \r\n     */\r\n    export var getType = function (value) {\r\n        if (value === null) {\r\n            return Data_Type.Null;\r\n        }\r\n        var type = typeof value;\r\n        switch (type) {\r\n            case 'object':\r\n                if (Array.isArray(value)) {\r\n                    return Data_Type.Array;\r\n                }\r\n            default:\r\n                return type;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * get database list\r\n     * \r\n     * @param {(dbList: string[]) => void} callback \r\n     */\r\n    export var getDbList = function (callback: (dbList: string[]) => void) {\r\n        if (callback === undefined) {\r\n            return new Promise(function (resolve, reject) {\r\n                KeyStore.get('database_list', function (result) {\r\n                    if (result == null) {\r\n                        result = [];\r\n                    }\r\n                    resolve(result);\r\n                }, function (err) {\r\n                    reject(err);\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            KeyStore.get('database_list', function (result) {\r\n                if (result == null) {\r\n                    result = [];\r\n                }\r\n                callback(result);\r\n            });\r\n        }\r\n    };\r\n}","namespace JsStore {\r\n    export enum Error_Type {\r\n        UndefinedColumn = \"undefined_column\",\r\n        UndefinedValue = \"undefined_value\",\r\n        UndefinedColumnName = \"undefined_column_name\",\r\n        UndefinedDbName = \"undefined_database_name\",\r\n        UndefinedColumnValue = \"undefined_column_value\",\r\n        NotArray = \"not_array\",\r\n        NoValueSupplied = \"no_value_supplied\",\r\n        ColumnNotExist = \"column_not_exist\",\r\n        EnableSearchOff = \"enable_search_off\",\r\n        InvalidOp = \"invalid_operator\",\r\n        NullValue = \"null_value\",\r\n        BadDataType = \"bad_data_type\",\r\n        NextJoinNotExist = \"next_join_not_exist\",\r\n        TableNotExist = \"table_not_exist\",\r\n        DbNotExist = \"db_not_exist\",\r\n        IndexedDbUndefined = \"indexeddb_undefined\",\r\n        IndexedDbBlocked = \"indexeddb_blocked\",\r\n        ConnectionAborted = \"connection_aborted\",\r\n        ConnectionClosed = \"connection_closed\",\r\n        NotObject = \"not_object\",\r\n        InvalidConfig = \"invalid_config\"\r\n    }\r\n\r\n    export interface IError {\r\n        _type: Error_Type;\r\n        _message: string;\r\n    }\r\n\r\n    export class Error implements IError {\r\n        _type: Error_Type;\r\n        _message: string;\r\n        private _info: any;\r\n\r\n        constructor(type: Error_Type, info: any = null) {\r\n            this._type = type;\r\n            this._info = info;\r\n            this._message = this.getMsg();\r\n        }\r\n\r\n        public throw = function () {\r\n            throw this.get();\r\n        };\r\n\r\n        logError = function () {\r\n            console.error(this.get());\r\n        };\r\n\r\n        logWarning = function () {\r\n            console.warn(this.get());\r\n        };\r\n\r\n        public get() {\r\n            return {\r\n                _message: this._message,\r\n                _type: this._type\r\n            } as IError;\r\n        }\r\n\r\n        private getMsg = function () {\r\n            var err_msg: string;\r\n            switch (this._type) {\r\n                case Error_Type.NotArray:\r\n                    err_msg = \"Supplied value is not an array\";\r\n                    break;\r\n                case Error_Type.UndefinedColumn:\r\n                    err_msg = \"Column is undefined in Where\";\r\n                    break;\r\n                case Error_Type.UndefinedValue:\r\n                    err_msg = \"Value is undefined in Where\";\r\n                    break;\r\n                case Error_Type.UndefinedColumnName:\r\n                    err_msg = \"Column name is undefined '\" + this._info['TableName'] + \"'\";\r\n                    break;\r\n                case Error_Type.UndefinedDbName:\r\n                    err_msg = \"Database name is not supplied\";\r\n                    break;\r\n                case Error_Type.UndefinedColumnValue:\r\n                    err_msg = \"Column value is undefined\";\r\n                    break;\r\n                case Error_Type.NoValueSupplied:\r\n                    err_msg = \"No value supplied\";\r\n                    break;\r\n                case Error_Type.InvalidOp:\r\n                    err_msg = \"Invalid Op Value '\" + this._info['Op'] + \"'\";\r\n                    break;\r\n                case Error_Type.ColumnNotExist:\r\n                    err_msg = \"Column '\" + this._info['ColumnName'] + \"' does not exist\";\r\n                    break;\r\n                case Error_Type.EnableSearchOff:\r\n                    err_msg = \"Search is turned off for the Column '\" + this._info['ColumnName'] + \"'\";\r\n                    break;\r\n                case Error_Type.NullValue:\r\n                    err_msg = \"Null value is not allowed for column '\" + this._info['ColumnName'] + \"'\";\r\n                    break;\r\n                case Error_Type.BadDataType:\r\n                    err_msg = \"Supplied value for column '\" + this._info['ColumnName'] +\r\n                        \"' does not have valid type\";\r\n                    break;\r\n                case Error_Type.NextJoinNotExist: err_msg = \"Next join details not supplied\";\r\n                    break;\r\n                case Error_Type.TableNotExist:\r\n                    err_msg = \"Table '\" + this._info['TableName'] + \"' does not exist\";\r\n                    break;\r\n                case Error_Type.DbNotExist:\r\n                    err_msg = \"Database '\" + this._info['DbName'] + \"' does not exist\";\r\n                    break;\r\n                case Error_Type.NotObject:\r\n                    err_msg = \"supplied value is not object\";\r\n                    break;\r\n                case Error_Type.InvalidOp:\r\n                    err_msg = \"Invalid Config '\" + this._info['Config'] + \" '\";\r\n                default:\r\n                    err_msg = this._message;\r\n                    break;\r\n            }\r\n            return err_msg;\r\n        };\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Model {\r\n        export class Column {\r\n            _name: string;\r\n            _autoIncrement: boolean;\r\n            _primaryKey: boolean;\r\n            _unique: boolean;\r\n            _notNull: boolean;\r\n            _dataType: string;\r\n            _default: any;\r\n            _multiEntry: boolean;\r\n            _enableSearch: boolean;\r\n\r\n            constructor(key: IColumnOption, tableName: string) {\r\n                if (key.Name != null) {\r\n                    this._name = key.Name;\r\n                }\r\n                else {\r\n                    var err = new Error(Error_Type.UndefinedColumnName, { TableName: tableName });\r\n                    err.throw();\r\n                }\r\n                this._autoIncrement = key.AutoIncrement != null ? key.AutoIncrement : false;\r\n                this._primaryKey = key.PrimaryKey != null ? key.PrimaryKey : false;\r\n                this._unique = key.Unique != null ? key.Unique : false;\r\n                this._notNull = key.NotNull != null ? key.NotNull : false;\r\n                this._dataType = key.DataType != null ? key.DataType : (key.AutoIncrement ? 'number' : null);\r\n                this._default = key.Default;\r\n                this._multiEntry = key.MultiEntry == null ? false : key.MultiEntry;\r\n                this._enableSearch = key.EnableSearch == null ? true : key.EnableSearch;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Model {\r\n        export class Table {\r\n            _name: string;\r\n            _columns: Column[] = [];\r\n            _version: number;\r\n            _primaryKey: string;\r\n\r\n            constructor(table: ITableOption) {\r\n                this._name = table.Name;\r\n                this._version = table.Version == null ? 1 : table.Version;\r\n                table.Columns.forEach(function (item) {\r\n                    this._columns.push(new Column(item, table.Name));\r\n                }, this);\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Model {\r\n        export class TableHelper {\r\n            _name: string;\r\n            _columns: Column[] = [];\r\n\r\n            // internal Members\r\n            _primaryKey: string;\r\n            _version: number;\r\n            _requireDelete: boolean = false;\r\n            _requireCreation: boolean = false;\r\n            _callback: () => void;\r\n\r\n            constructor(table: Table) {\r\n                this._name = table._name;\r\n                this._version = table._version;\r\n                this._columns = table._columns;\r\n                this.setPrimaryKey();\r\n            }\r\n\r\n            public createMetaData(dbName: string, callBack: () => void) {\r\n                this._callback = callBack;\r\n                this.setRequireDelete(dbName);\r\n                this.setDbVersion(dbName);\r\n            }\r\n\r\n            private setPrimaryKey() {\r\n                this._columns.every(function (item) {\r\n                    this._primaryKey = item._primaryKey ? item._name : \"\";\r\n                    return !item._primaryKey;\r\n                }, this);\r\n            }\r\n\r\n            private setRequireDelete(dbName: string) {\r\n                KeyStore.get(\"JsStore_\" + dbName + \"_\" + this._name + \"_Version\", function (tableVersion) {\r\n                    if (tableVersion == null) {\r\n                        this._requireCreation = true;\r\n                    }\r\n                    // mark only table which has version greater than store version\r\n                    else if (tableVersion < this._version) {\r\n                        this._requireDelete = true;\r\n                    }\r\n                }.bind(this));\r\n            }\r\n\r\n            private setDbVersion(dbName: string) {\r\n                db_version = db_version > this._version ? db_version : this._version;\r\n                // setting db version\r\n                KeyStore.set('JsStore_' + dbName + '_Db_Version', db_version)\r\n                    // setting table version\r\n                    .set(\"JsStore_\" + dbName + \"_\" + this._name + \"_Version\", db_version, this._callback);\r\n                this._version = db_version;\r\n            }\r\n        }\r\n    }\r\n}","\r\nnamespace JsStore {\r\n    export namespace Model {\r\n        export class DbHelper {\r\n            _name: string;\r\n            _tables: Table[] = [];\r\n\r\n            constructor(dataBase: DataBase) {\r\n                this._name = dataBase._name;\r\n                this._tables = dataBase._tables;\r\n            }\r\n\r\n            public createMetaData(callBack: (tablesMetaData: TableHelper[]) => void) {\r\n                var index = 0,\r\n                    table_helpers: TableHelper[] = [],\r\n                    createMetaDataForTable = function () {\r\n                        if (index < this._tables.length) {\r\n                            var table: Table = this._tables[index],\r\n                                table_helper: TableHelper = new TableHelper(table);\r\n                            table_helper.createMetaData(this._name, function () {\r\n                                table_helper._callback = null;\r\n                                table_helpers.push(table_helper);\r\n                                createMetaDataForTable();\r\n                            });\r\n                            ++index;\r\n                        }\r\n                        else {\r\n                            callBack(table_helpers);\r\n                        }\r\n                    }.bind(this);\r\n                createMetaDataForTable();\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nnamespace JsStore {\r\n    export namespace Model {\r\n        export class DataBase {\r\n            _name: string;\r\n            _tables: Table[] = [];\r\n\r\n            constructor(dataBase: IDataBaseOption) {\r\n                this._name = dataBase.Name;\r\n                dataBase.Tables.forEach(function (item) {\r\n                    this._tables.push(new Table(item));\r\n                }, this);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class BaseHelper {\r\n            protected containsNot(whereQry: object) {\r\n                var status = false,\r\n                    value;\r\n                Object.keys(whereQry).every(function (key) {\r\n                    value = whereQry[key];\r\n                    if (value['!=']) {\r\n                        status = true;\r\n                    }\r\n                    return !status;\r\n                });\r\n                return status;\r\n            }\r\n            \r\n            protected filterOnOccurence = function (value) {\r\n                var found = false;\r\n                value = value.toLowerCase();\r\n                switch (this._compSymbol) {\r\n                    case Occurence.Any: if (value.indexOf(this._compValue) >= 0) {\r\n                        found = true;\r\n                    } break;\r\n                    case Occurence.First: if (value.indexOf(this._compValue) === 0) {\r\n                        found = true;\r\n                    } break;\r\n                    case Occurence.Last:\r\n                        if (value.lastIndexOf(this._compValue) === value.length - this._compValueLength) {\r\n                            found = true;\r\n                        } break;\r\n                    default: if (value !== this._compValue) {\r\n                        found = true;\r\n                    }\r\n                }\r\n                return found;\r\n            };\r\n\r\n            protected isTableExist(tableName: string) {\r\n                var is_exist: boolean = false;\r\n                active_db._tables.every(function (table) {\r\n                    if (table._name === tableName) {\r\n                        is_exist = true;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                return is_exist;\r\n            }\r\n\r\n            protected getTable(tableName: string) {\r\n                var current_table: Table;\r\n                active_db._tables.every(function (table) {\r\n                    if (table._name === tableName) {\r\n                        current_table = table;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                return current_table;\r\n            }\r\n\r\n            protected getKeyRange(value, op) {\r\n                var key_range: IDBKeyRange;\r\n                switch (op) {\r\n                    case '-': key_range = IDBKeyRange.bound(value.Low, value.High, false, false); break;\r\n                    case '>': key_range = IDBKeyRange.lowerBound(value, true); break;\r\n                    case '>=': key_range = IDBKeyRange.lowerBound(value); break;\r\n                    case '<': key_range = IDBKeyRange.upperBound(value, true); break;\r\n                    case '<=': key_range = IDBKeyRange.upperBound(value); break;\r\n                    default: key_range = IDBKeyRange.only(value); break;\r\n                }\r\n                return key_range;\r\n            }\r\n\r\n            protected getPrimaryKey(tableName): string {\r\n                var primary_key: string = (this.getTable(tableName) as Table)._primaryKey;\r\n                return primary_key ? primary_key : this.getKeyPath(tableName);\r\n            }\r\n\r\n            protected getKeyPath(tableName) {\r\n                var transaction: IDBTransaction = db_connection.transaction([tableName], \"readonly\"),\r\n                    object_store = transaction.objectStore(tableName);\r\n                return object_store.keyPath as string;\r\n            }\r\n\r\n            protected sortNumberInAsc(values) {\r\n                values.sort(function (a, b) {\r\n                    return a - b;\r\n                });\r\n                return values;\r\n            }\r\n\r\n            protected sortNumberInDesc(values) {\r\n                values.sort(function (a, b) {\r\n                    return b - a;\r\n                });\r\n                return values;\r\n            }\r\n\r\n            protected sortAlphabetInAsc(values) {\r\n                values.sort(function (a, b) {\r\n                    return a.toLowerCase().localeCompare(b.toLowerCase());\r\n                });\r\n                return values;\r\n            }\r\n\r\n            protected sortAlphabetInDesc(values) {\r\n                values.sort(function (a, b) {\r\n                    return b.toLowerCase().localeCompare(a.toLowerCase());\r\n                });\r\n                return values;\r\n            }\r\n\r\n            protected getAllCombinationOfWord(word: string, isArray?: boolean) {\r\n                if (isArray) {\r\n                    var results = [];\r\n                    for (var i = 0, length = word.length; i < length; i++) {\r\n                        results = results.concat(this.getCombination(word[i]));\r\n                    }\r\n                    return results;\r\n                }\r\n                else {\r\n                    return this.getCombination(word);\r\n                }\r\n            }\r\n\r\n            private getCombination(word: string) {\r\n                var results = [],\r\n                    doAndPushCombination = function (subWord: string, chars, index: number) {\r\n                        if (index === subWord.length) {\r\n                            results.push(chars.join(\"\"));\r\n                        } else {\r\n                            var ch = subWord.charAt(index);\r\n                            chars[index] = ch.toLowerCase();\r\n                            doAndPushCombination(subWord, chars, index + 1);\r\n                            chars[index] = ch.toUpperCase();\r\n                            doAndPushCombination(subWord, chars, index + 1);\r\n                        }\r\n                    };\r\n                doAndPushCombination(word, [], 0);\r\n                return results;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class Base extends BaseHelper {\r\n            _error: IError;\r\n            _errorOccured: boolean = false;\r\n            _errorCount = 0;\r\n            _rowAffected = 0;\r\n            _onSuccess: (result?) => void;\r\n            _onError: (err: IError) => void;\r\n            _objectStore: IDBObjectStore;\r\n            _query;\r\n            _whereChecker: WhereChecker;\r\n            _tableName: string;\r\n            _isTransaction: boolean;\r\n            _cursorOpenRequest: IDBRequest;\r\n\r\n            protected onErrorOccured(e, customError = false) {\r\n                ++this._errorCount;\r\n                if (this._errorCount === 1) {\r\n                    if (this._onError != null) {\r\n                        if (!customError) {\r\n                            var error = {\r\n                                _message: (e as any).target.error.message,\r\n                                _type: (e as any).target.error.name\r\n                            } as IError;\r\n                            this._onError(error);\r\n                            logError(error);\r\n                        }\r\n                        else {\r\n                            this._onError(e);\r\n                            logError(e);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            protected onExceptionOccured(ex: DOMException, info) {\r\n                switch (ex.name) {\r\n                    case 'NotFoundError':\r\n                        var error = new Error(Error_Type.TableNotExist, info);\r\n                        this.onErrorOccured(error.get(), true);\r\n                        break;\r\n                    default: console.error(ex);\r\n                }\r\n            }\r\n\r\n            protected getColumnInfo(columnName) {\r\n                var column_info: Column;\r\n                this.getTable(this._tableName)._columns.every(function (column) {\r\n                    if (column._name === columnName) {\r\n                        column_info = column;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                return column_info;\r\n            }\r\n\r\n            protected addGreatAndLessToNotOp() {\r\n                var where_query = this._query.Where,\r\n                    value;\r\n                if (this.containsNot(where_query)) {\r\n                    var query_keys = Object.keys(where_query);\r\n                    if (query_keys.length === 1) {\r\n                        query_keys.forEach(function (prop) {\r\n                            value = where_query[prop];\r\n                            if (value['!=']) {\r\n                                where_query[prop]['>'] = value['!='];\r\n                                if (where_query['Or'] === undefined) {\r\n                                    where_query['Or'] = {};\r\n                                    where_query['Or'][prop] = {};\r\n                                }\r\n                                else if (where_query['Or'][prop] === undefined) {\r\n                                    where_query['Or'][prop] = {};\r\n                                }\r\n                                where_query['Or'][prop]['<'] = value['!='];\r\n                                delete where_query[prop]['!='];\r\n                            }\r\n                        });\r\n                        this._query.Where = where_query;\r\n                    }\r\n                    else {\r\n                        var where_tmp = [];\r\n                        query_keys.forEach(function (prop) {\r\n                            value = where_query[prop];\r\n                            var tmp_qry = {};\r\n                            if (value['!=']) {\r\n                                tmp_qry[prop] = {\r\n                                    '>': value['!='],\r\n                                    'Or': {\r\n\r\n                                    }\r\n                                };\r\n                                tmp_qry[prop]['Or'][prop] = {};\r\n                                tmp_qry[prop]['Or'][prop]['<'] = value['!='];\r\n                            }\r\n                            else {\r\n                                tmp_qry[prop] = value;\r\n                            }\r\n                            where_tmp.push(tmp_qry);\r\n                        });\r\n                        this._query.Where = where_tmp;\r\n                    }\r\n                }\r\n            }\r\n\r\n            protected goToWhereLogic = function () {\r\n                var column_name = getObjectFirstKey(this._query.Where);\r\n                if (this._query.IgnoreCase === true) {\r\n                    this._query.Where = this.makeQryInCaseSensitive(this._query.Where);\r\n                }\r\n                if (this._objectStore.indexNames.contains(column_name)) {\r\n                    var value = this._query.Where[column_name];\r\n                    if (typeof value === 'object') {\r\n                        this._checkFlag = Boolean(\r\n                            Object.keys(value).length > 1 ||\r\n                            Object.keys(this._query.Where).length > 1\r\n                        );\r\n                        if (this._checkFlag === true) {\r\n                            this._whereChecker = new WhereChecker(this._query.Where);\r\n                        }\r\n                        var key = getObjectFirstKey(value);\r\n                        switch (key) {\r\n                            case 'Like': {\r\n                                var filter_values = value.Like.split('%'),\r\n                                    filter_value: string,\r\n                                    occurence: Occurence;\r\n                                if (filter_values[1]) {\r\n                                    filter_value = filter_values[1];\r\n                                    occurence = filter_values.length > 2 ? Occurence.Any : Occurence.Last;\r\n                                }\r\n                                else {\r\n                                    filter_value = filter_values[0];\r\n                                    occurence = Occurence.First;\r\n                                }\r\n                                if (occurence === Occurence.First) {\r\n                                    this.getAllCombinationOfWord(filter_value).forEach(function (item) {\r\n                                        this.executeWhereLogic(column_name,\r\n                                            { '-': { Low: item, High: item + '\\uffff' } },\r\n                                            '-');\r\n                                    }, this);\r\n                                    delete this._query.Where[column_name]['Like'];\r\n                                }\r\n                                else {\r\n                                    this.executeLikeLogic(column_name, filter_value, occurence);\r\n                                }\r\n                            } break;\r\n                            case 'In':\r\n                                this.executeInLogic(column_name, value['In']);\r\n                                break;\r\n                            case '-':\r\n                            case '>':\r\n                            case '<':\r\n                            case '>=':\r\n                            case '<=':\r\n                                this.executeWhereLogic(column_name, value, key);\r\n                                break;\r\n                            case 'Aggregate': break;\r\n                            default: this.executeWhereLogic(column_name, value);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._checkFlag = Boolean(Object.keys(this._query.Where).length > 1);\r\n                        if (this._checkFlag === true) {\r\n                            this._whereChecker = new WhereChecker(this._query.Where);\r\n                        }\r\n                        this.executeWhereLogic(column_name, value);\r\n                    }\r\n                }\r\n                else {\r\n                    this._errorOccured = true;\r\n                    var column: Column = this.getColumnInfo(column_name),\r\n                        error;\r\n                    if (column == null) {\r\n                        error = new Error(Error_Type.ColumnNotExist, { ColumnName: column_name }).get();\r\n                    }\r\n                    else {\r\n                        error = new Error(Error_Type.EnableSearchOff, { ColumnName: column_name }).get();\r\n                    }\r\n                    this.onErrorOccured(error, true);\r\n                }\r\n            };\r\n\r\n            protected makeQryInCaseSensitive(qry) {\r\n                var results = [],\r\n                    column_value,\r\n                    key_value;\r\n                for (var column in qry) {\r\n                    column_value = qry[column];\r\n                    if (typeof column_value === 'object') {\r\n                        for (var key in column_value) {\r\n                            key_value = column_value[key];\r\n                            switch (key) {\r\n                                case WhereQryOption.In:\r\n                                    results = results.concat(this.getAllCombinationOfWord(key_value, true));\r\n                                    break;\r\n                                case WhereQryOption.Like:\r\n                                    break;\r\n                                default:\r\n                                    results = results.concat(this.getAllCombinationOfWord(key_value));\r\n                            }\r\n                        }\r\n                        qry[column]['In'] = results;\r\n                    }\r\n                    else {\r\n                        results = results.concat(this.getAllCombinationOfWord(column_value));\r\n                        qry[column] = {\r\n                            In: results\r\n                        };\r\n                    }\r\n                }\r\n                return qry;\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class CreateDb {\r\n            constructor(tablesMetaData: Model.TableHelper[],\r\n                onSuccess: (listOf) => void, onError: (err: IError) => void) {\r\n\r\n                var table_created_list = [],\r\n                    db_request = indexedDB.open(active_db._name, db_version);\r\n\r\n                db_request.onerror = function (event) {\r\n                    if (onError != null) {\r\n                        onError((event as any).target.error);\r\n                    }\r\n                };\r\n\r\n                db_request.onsuccess = function (event) {\r\n                    db_status.ConStatus = Connection_Status.Connected;\r\n                    db_connection = db_request.result;\r\n                    (db_connection as any).onclose = function (e) {\r\n                        callDbDroppedByBrowser();\r\n                        Utils.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                    };\r\n\r\n                    db_connection.onversionchange = function (e) {\r\n                        if (e.newVersion === null) { // An attempt is made to delete the db\r\n                            (e.target as any).close(); // Manually close our connection to the db\r\n                            callDbDroppedByBrowser(true);\r\n                            Utils.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                        }\r\n                    };\r\n\r\n                    db_connection.onerror = function (e) {\r\n                        db_status.LastError = (\"Error occured in connection :\" + (e.target as any).result) as any;\r\n                    };\r\n\r\n                    db_connection.onabort = function (e) {\r\n                        db_status = {\r\n                            ConStatus: Connection_Status.Closed,\r\n                            LastError: Error_Type.ConnectionAborted\r\n                        };\r\n                    };\r\n\r\n                    // save in database list\r\n                    this.saveDbName();\r\n                    if (onSuccess != null) {\r\n                        onSuccess(table_created_list);\r\n                    }\r\n                }.bind(this);\r\n\r\n                db_request.onupgradeneeded = function (event) {\r\n                    db_connection = (event as any).target.result;\r\n                    tablesMetaData.forEach(function (item: Model.TableHelper, index) {\r\n                        if (item._requireDelete) {\r\n                            // Delete the old datastore.    \r\n                            if (db_connection.objectStoreNames.contains(item._name)) {\r\n                                db_connection.deleteObjectStore(item._name);\r\n                            }\r\n                            createObjectStore(item, index);\r\n                        }\r\n                        else if (item._requireCreation) {\r\n                            createObjectStore(item, index);\r\n                        }\r\n                    });\r\n                };\r\n\r\n                var createObjectStore = function (item: Model.TableHelper, index) {\r\n                    try {\r\n                        if (item._primaryKey.length > 0) {\r\n                            active_db._tables[index]._primaryKey = item._primaryKey;\r\n                            var store = db_connection.createObjectStore(item._name, {\r\n                                keyPath: item._primaryKey\r\n                            });\r\n                            item._columns.forEach(function (column: Column) {\r\n                                if (column._enableSearch === true) {\r\n                                    var options = column._primaryKey ? { unique: true } : { unique: column._unique };\r\n                                    options['multiEntry'] = column._multiEntry;\r\n                                    store.createIndex(column._name, column._name, options);\r\n                                    if (column._autoIncrement) {\r\n                                        KeyStore.set(\r\n                                            \"JsStore_\" + active_db._name + \"_\" + item._name +\r\n                                            \"_\" + column._name + \"_Value\",\r\n                                            0\r\n                                        );\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            var store = db_connection.createObjectStore(item._name, {\r\n                                autoIncrement: true\r\n                            });\r\n                            item._columns.forEach(function (column: Column) {\r\n                                var options = { unique: column._unique, multiEntry: column._multiEntry };\r\n                                store.createIndex(column._name, column._name, options);\r\n                                if (column._autoIncrement) {\r\n                                    KeyStore.set(\r\n                                        \"JsStore_\" + active_db._name + \"_\" + item._name + \"_\" + column._name + \"_Value\",\r\n                                        0\r\n                                    );\r\n                                }\r\n                            });\r\n                        }\r\n                        table_created_list.push(item._name);\r\n                        // setting the table version\r\n                        KeyStore.set(\"JsStore_\" + active_db._name + \"_\" + item._name + \"_Version\", item._version);\r\n                    }\r\n                    catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                };\r\n            }\r\n\r\n            private saveDbName() {\r\n                getDbList(function (result) {\r\n                    if (result.indexOf(active_db._name) < 0) {\r\n                        result.push(active_db._name);\r\n                        setDbList(result);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class DropDb {\r\n            _onSuccess: () => void;\r\n            _onError: (err: IError) => void;\r\n            constructor(onSuccess: () => void, onError: (err: IError) => void) {\r\n                this._onSuccess = onSuccess;\r\n                this._onError = onError;\r\n            }\r\n\r\n            deleteMetaData() {\r\n                KeyStore.remove('JsStore_' + active_db._name + '_Db_Version');\r\n                active_db._tables.forEach(function (table: Model.Table) {\r\n                    KeyStore.remove(\"JsStore_\" + active_db._name + \"_\" + table._name + \"_Version\");\r\n                    table._columns.forEach(function (column: Column) {\r\n                        if (column._autoIncrement) {\r\n                            KeyStore.remove(\r\n                                \"JsStore_\" + active_db._name + \"_\" + table._name + \"_\" + column._name + \"_Value\"\r\n                            );\r\n                        }\r\n                    });\r\n                });\r\n                // remove from database_list \r\n                getDbList(function (result) {\r\n                    result.splice(result.indexOf(active_db._name), 1);\r\n                    setDbList(result);\r\n                });\r\n                KeyStore.remove(\"JsStore_\" + active_db._name + \"_Schema\", this._onSuccess);\r\n            }\r\n\r\n            deleteDb() {\r\n                setTimeout(function () {\r\n                    var db_drop_request = indexedDB.deleteDatabase(active_db._name);\r\n                    db_drop_request.onblocked = function () {\r\n                        if (this._onError != null) {\r\n                            this._onError(\"database is blocked, cant be deleted right now.\");\r\n                        }\r\n                    }.bind(this);\r\n                    db_drop_request.onerror = function (e) {\r\n                        if (this._onError != null) {\r\n                            this._onError((event as any).target.error);\r\n                        }\r\n                    }.bind(this);\r\n                    db_drop_request.onsuccess = function () {\r\n                        db_status.ConStatus = Connection_Status.Closed;\r\n                        this.deleteMetaData();\r\n                    }.bind(this);\r\n                }.bind(this), 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class BulkInsert extends Base {\r\n            _query: IInsert;\r\n\r\n            constructor(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                super();\r\n                this._query = query;\r\n                this._onSuccess = onSuccess;\r\n                this._onError = onError;\r\n            }\r\n\r\n            execute() {\r\n                if (!Array.isArray(this._query.Values)) {\r\n                    this.onErrorOccured(\r\n                        new Error(Error_Type.NotArray).get(),\r\n                        true\r\n                    );\r\n                }\r\n                else if (this.isTableExist(this._query.Into) === true) {\r\n                    try {\r\n                        this.bulkinsertData();\r\n                    }\r\n                    catch (ex) {\r\n                        this.onExceptionOccured(ex, { TableName: this._query.Into });\r\n                    }\r\n                }\r\n                else {\r\n                    var error = new Error(Error_Type.TableNotExist, { TableName: this._query.Into });\r\n                    error.throw();\r\n                }\r\n            }\r\n\r\n            private bulkinsertData() {\r\n                createTransaction([this._query.Into], function (e) {\r\n                    this._onSuccess();\r\n                }.bind(this));\r\n                this._objectStore = db_transaction.objectStore(this._query.Into);\r\n                this._query.Values.forEach(function (value) {\r\n                    this._objectStore.add(value);\r\n                }, this);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class OpenDb {\r\n            constructor(dbVersion, onSuccess: () => void, onError: (err: IError) => void) {\r\n                if (active_db._name.length > 0) {\r\n                    var db_request = indexedDB.open(active_db._name, dbVersion);\r\n\r\n                    db_request.onerror = function (event) {\r\n                        if (onError != null) {\r\n                            onError((event as any).target.error);\r\n                        }\r\n                    };\r\n\r\n                    db_request.onsuccess = function (event) {\r\n                        db_status.ConStatus = Connection_Status.Connected;\r\n                        db_connection = db_request.result;\r\n                        (db_connection as any).onclose = function (e) {\r\n                            callDbDroppedByBrowser();\r\n                            Utils.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                        };\r\n\r\n                        db_connection.onversionchange = function (e) {\r\n                            if (e.newVersion === null) { // An attempt is made to delete the db\r\n                                if (e.newVersion === null) { // An attempt is made to delete the db\r\n                                    (e.target as any).close(); // Manually close our connection to the db\r\n                                    callDbDroppedByBrowser(true);\r\n                                    Utils.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        db_connection.onerror = function (e) {\r\n                            db_status.LastError = (\"Error occured in connection :\" + (e.target as any).result) as any;\r\n                        };\r\n\r\n                        db_connection.onabort = function (e) {\r\n                            db_status.ConStatus = Connection_Status.Closed;\r\n                            db_status.LastError = Error_Type.ConnectionAborted;\r\n                        };\r\n                        if (onSuccess != null) {\r\n                            onSuccess();\r\n                        }\r\n                        this.setPrimaryKey();\r\n                    }.bind(this);\r\n                }\r\n                else {\r\n                    var error = new Error(Error_Type.UndefinedDbName);\r\n                    error.throw();\r\n                }\r\n            }\r\n\r\n            private setPrimaryKey = function () {\r\n                active_db._tables.forEach(function (table: Table, index) {\r\n                    table._columns.every(function (item) {\r\n                        active_db._tables[index]._primaryKey = item._primaryKey ? item._name : \"\";\r\n                        return !item._primaryKey;\r\n                    });\r\n                });\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class Clear extends Base {\r\n            constructor(tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n                super();\r\n                this._query = tableName;\r\n                this._onSuccess = onSuccess;\r\n                this._onError = onError;\r\n            }\r\n\r\n            execute() {\r\n                createTransaction([this._query], function (e) {\r\n                    if (this._errorOccured === false) {\r\n                        this._onSuccess();\r\n                    }\r\n                }.bind(this));\r\n                var clear_request: IDBRequest = db_transaction.objectStore(this._query).clear();\r\n                clear_request.onsuccess = function (e) {\r\n                    var current_table = this.getTable(this._query);\r\n                    current_table._columns.forEach(function (column: Column) {\r\n                        if (column._autoIncrement) {\r\n                            KeyStore.set(\r\n                                \"JsStore_\" + active_db._name + \"_\" + this._query + \"_\" + column._name + \"_Value\",\r\n                                0\r\n                            );\r\n                        }\r\n                    }, this);\r\n                }.bind(this);\r\n\r\n                clear_request.onerror = function (e) {\r\n                    this._errorOccured = true;\r\n                    this.onErrorOccured(e);\r\n                }.bind(this);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export var\r\n            on_db_dropped_by_browser: () => void,\r\n            is_db_deleted_by_browser: boolean,\r\n            db_connection: IDBDatabase,\r\n            active_db: DataBase,\r\n            db_transaction: IDBTransaction = null,\r\n            callDbDroppedByBrowser = function (deleteMetaData?: boolean) {\r\n                if (db_status.ConStatus === Connection_Status.Connected) {\r\n                    is_db_deleted_by_browser = true;\r\n                    if (deleteMetaData === true) {\r\n                        var drop_db_object = new DropDb(on_db_dropped_by_browser, null);\r\n                        drop_db_object.deleteMetaData();\r\n                    }\r\n                }\r\n            },\r\n            createTransaction = function (tableNames, callBack: () => void, mode?) {\r\n                if (db_transaction === null) {\r\n                    mode = mode ? mode : \"readwrite\";\r\n                    db_transaction = db_connection.transaction(tableNames, mode);\r\n                    db_transaction.oncomplete = function () {\r\n                        db_transaction = null;\r\n                        callBack();\r\n                    };\r\n                    (db_transaction as any).ontimeout = function () {\r\n                        db_transaction = null;\r\n                        console.error('transaction timed out');\r\n                    };\r\n                }\r\n            },\r\n            setDbList = function (list: string[]) {\r\n                KeyStore.set('database_list', list);\r\n            };\r\n\r\n        export class Main {\r\n            _onSuccess: (result) => void;\r\n\r\n            constructor(onSuccess?) {\r\n                this._onSuccess = onSuccess;\r\n            }\r\n\r\n            public checkConnectionAndExecuteLogic(request: IWebWorkerRequest) {\r\n                log('checking connection and executing request:' + request.Name);\r\n                switch (request.Name) {\r\n                    case 'create_db':\r\n                    case 'open_db':\r\n                        this.executeLogic(request);\r\n                        break;\r\n                    case 'change_log_status':\r\n                        this.changeLogStatus(request.Query['logging']); break;\r\n                    case 'set_config':\r\n                        this.setConfig(request.Query); break;\r\n                    default:\r\n                        switch (db_status.ConStatus) {\r\n                            case Connection_Status.Connected: {\r\n                                this.executeLogic(request);\r\n                            } break;\r\n                            case Connection_Status.Closed: {\r\n                                if (is_db_deleted_by_browser === true) {\r\n                                    this.createDb(null, function () {\r\n                                        is_db_deleted_by_browser = false;\r\n                                        this.checkConnectionAndExecuteLogic(request);\r\n                                    }.bind(this), request.OnError);\r\n                                }\r\n                                else {\r\n                                    this.openDb(active_db._name, function () {\r\n                                        this.checkConnectionAndExecuteLogic(request);\r\n                                    }.bind(this), request.OnError);\r\n                                }\r\n                            } break;\r\n                        }\r\n                }\r\n            }\r\n\r\n            private changeLogStatus(enableLog) {\r\n                enable_log = enableLog;\r\n            }\r\n\r\n            private setConfig(config: IConfig) {\r\n                for (var prop in config) {\r\n                    switch (prop) {\r\n                        case 'EnableLog': this.changeLogStatus(config[prop]); break;\r\n                        case 'FileName': file_name = config[prop]; break;\r\n                        case 'OnDbDroppedByBrowser': eval(\"on_db_dropped_by_browser=\" + config.OnDbDroppedByBrowser);\r\n                            break;\r\n                        default:\r\n                            var err = new Error(Error_Type.InvalidConfig, { Config: prop });\r\n                            err.logError();\r\n                    }\r\n                }\r\n            }\r\n\r\n            private returnResult(result) {\r\n                if (this._onSuccess) {\r\n                    this._onSuccess(result);\r\n                }\r\n                else {\r\n                    (self as any).postMessage(result);\r\n                }\r\n            }\r\n\r\n            private executeLogic(request: IWebWorkerRequest) {\r\n                var onSuccess = function (results) {\r\n                    this.returnResult({\r\n                        ReturnedValue: results\r\n                    } as IWebWorkerResult);\r\n                }.bind(this),\r\n                    onError = function (err) {\r\n                        this.returnResult({\r\n                            ErrorDetails: err,\r\n                            ErrorOccured: true\r\n                        } as IWebWorkerResult);\r\n                    }.bind(this);\r\n\r\n                switch (request.Name) {\r\n                    case 'select':\r\n                        this.select(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'insert': this.insert(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'update': this.update(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'remove': this.remove(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'open_db':\r\n                        if (is_db_deleted_by_browser === true) {\r\n                            this.createDb(null, function () {\r\n                                is_db_deleted_by_browser = false;\r\n                                onSuccess();\r\n                            }.bind(this), onError);\r\n                        }\r\n                        else {\r\n                            this.openDb(request.Query, onSuccess, onError);\r\n                        }\r\n                        break;\r\n                    case 'create_db': this.createDb(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'clear': this.clear(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'drop_db': this.dropDb(onSuccess, onError);\r\n                        break;\r\n                    case 'count': this.count(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'bulk_insert': this.bulkInsert(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'transaction': this.transaction(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'export_json': this.exportJson(request.Query, onSuccess, onError);\r\n                        break;\r\n                    default: console.error('The Api:-' + request.Name + ' does not support.');\r\n                }\r\n            }\r\n\r\n            private transaction(qry: ITranscationQry, onSuccess, onError) {\r\n                var transaction_obj = new Transaction(qry, onSuccess, onError);\r\n                transaction_obj.execute();\r\n            }\r\n\r\n            private openDb(dbName, onSuccess: () => void, onError: (err: IError) => void) {\r\n                getDbVersion(dbName, function (dbVersion) {\r\n                    if (dbVersion !== 0) {\r\n                        getDbSchema(dbName, function (result) {\r\n                            active_db = result;\r\n                            var open_db_object = new OpenDb(dbVersion, onSuccess, onError);\r\n                        });\r\n                    }\r\n                    else {\r\n                        var err = new Error(Error_Type.DbNotExist, { DbName: dbName });\r\n                        err.logError();\r\n                        onError(err.get());\r\n                    }\r\n                });\r\n            }\r\n\r\n            private closeDb() {\r\n                if (db_status.ConStatus === Connection_Status.Connected) {\r\n                    db_status.ConStatus = Connection_Status.ClosedByJsStore;\r\n                    db_connection.close();\r\n                }\r\n            }\r\n\r\n            private dropDb(onSuccess: () => void, onError: (err: IError) => void) {\r\n                this.closeDb();\r\n                var drop_db_object = new DropDb(onSuccess, onError);\r\n                drop_db_object.deleteDb();\r\n            }\r\n\r\n            private update(query: IUpdate, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var update_db_object = new Update.Instance(query, onSuccess, onError);\r\n                update_db_object.execute();\r\n            }\r\n\r\n            private insert(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var insert_object = new Business.Insert.Instance(query, onSuccess, onError);\r\n                insert_object.execute();\r\n            }\r\n\r\n            private bulkInsert(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var bulk_insert_object = new BulkInsert(query, onSuccess, onError);\r\n                bulk_insert_object.execute();\r\n            }\r\n\r\n            private remove(query: IRemove, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var delete_object = new Remove.Instance(query, onSuccess, onError);\r\n                delete_object.execute();\r\n            }\r\n\r\n            private select(query, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n                if (typeof query.From === 'object') {\r\n                    var select_join_object = new Select.Join(query as ISelectJoin, onSuccess, onError);\r\n                }\r\n                else {\r\n                    var select_instance = new Select.Instance(query, onSuccess, onError);\r\n                    select_instance.execute();\r\n                }\r\n            }\r\n\r\n            private count(query, onSuccess: () => void, onError: (err: IError) => void) {\r\n                if (typeof query.From === 'object') {\r\n                    query['Count'] = true;\r\n                    var select_join_object = new Select.Join(query, onSuccess, onError);\r\n                }\r\n                else {\r\n                    var count_object = new Count.Instance(query, onSuccess, onError);\r\n                    count_object.execute();\r\n                }\r\n            }\r\n\r\n            private createDb(\r\n                dataBase: IDataBaseOption, onSuccess: () => void, onError: (err: IError) => void\r\n            ) {\r\n                var processCreateDb = function () {\r\n                    // save dbSchema in keystore\r\n                    KeyStore.set(\"JsStore_\" + active_db._name + \"_Schema\", active_db);\r\n                    // create meta data\r\n                    var db_helper = new Model.DbHelper(active_db);\r\n                    db_helper.createMetaData(function (tablesMetaData: Model.TableHelper[]) {\r\n                        var create_db_object = new CreateDb(tablesMetaData, onSuccess, onError);\r\n                    });\r\n                };\r\n                if (dataBase == null) {\r\n                    processCreateDb();\r\n                }\r\n                else {\r\n                    this.closeDb();\r\n                    getDbVersion(dataBase.Name, function (version) {\r\n                        db_version = version ? version : 1;\r\n                        active_db = new Model.DataBase(dataBase);\r\n                        processCreateDb();\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            private clear(tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var clear_object = new Clear(tableName, onSuccess, onError);\r\n                clear_object.execute();\r\n            }\r\n\r\n            private exportJson(query: ISelect, onSuccess: (url: string) => void, onError: (err: IError) => void) {\r\n                this.select(query, function (results) {\r\n                    var url = URL.createObjectURL(new Blob([JSON.stringify(results)], {\r\n                        type: \"text/json\"\r\n                    }));\r\n                    onSuccess(url);\r\n                }, function (err) {\r\n                    onError(err);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n  export namespace Business {\r\n    /**\r\n     * For matching the different column value existance for where option\r\n     * \r\n     * @export\r\n     * @class WhereChecker\r\n     */\r\n    export class WhereChecker {\r\n      _where: object;\r\n      _status: boolean;\r\n\r\n      constructor(where: object) {\r\n        this._where = where;\r\n      }\r\n\r\n      check(rowValue) {\r\n        this._status = true;\r\n        var column_value;\r\n        for (var columnName in this._where) {\r\n          if (this._status) {\r\n            column_value = this._where[columnName];\r\n            if (typeof column_value === 'object') {\r\n              for (var key in column_value) {\r\n                if (this._status) {\r\n                  switch (key) {\r\n                    case 'In': this.checkIn(columnName, rowValue[columnName]); break;\r\n                    case 'Like': this.checkLike(columnName, rowValue[columnName]); break;\r\n                    case '-':\r\n                    case '>':\r\n                    case '<':\r\n                    case '>=':\r\n                    case '<=':\r\n                    case '!=':\r\n                      this.checkComparisionOp(columnName, rowValue[columnName], key);\r\n                      break;\r\n                  }\r\n                }\r\n                else {\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (column_value !== rowValue[columnName]) {\r\n                this._status = false;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            break;\r\n          }\r\n        }\r\n        return this._status;\r\n      }\r\n\r\n      private checkIn(column, value) {\r\n        for (var i = 0, values = this._where[column].In, length = values.length; i < length; i++) {\r\n          if (values[i] === value) {\r\n            this._status = true;\r\n            break;\r\n          }\r\n          else {\r\n            this._status = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      private checkLike(column, value) {\r\n        var values = this._where[column].Like.split('%'),\r\n          comp_symbol: Occurence,\r\n          comp_value,\r\n          symbol_index;\r\n        if (values[1]) {\r\n          comp_value = values[1];\r\n          comp_symbol = values.length > 2 ? Occurence.Any : Occurence.Last;\r\n        }\r\n        else {\r\n          comp_value = values[0];\r\n          comp_symbol = Occurence.First;\r\n        }\r\n        value = value.toLowerCase();\r\n\r\n        switch (comp_symbol) {\r\n          case Occurence.Any:\r\n            symbol_index = value.indexOf(comp_value.toLowerCase());\r\n            if (symbol_index < 0) {\r\n              this._status = false;\r\n            } break;\r\n          case Occurence.First:\r\n            symbol_index = value.indexOf(comp_value.toLowerCase());\r\n            if (symbol_index > 0 || symbol_index < 0) {\r\n              this._status = false;\r\n            } break;\r\n          default:\r\n            symbol_index = value.lastIndexOf(comp_value.toLowerCase());\r\n            if (symbol_index < value.length - comp_value.length) {\r\n              this._status = false;\r\n            }\r\n        }\r\n      }\r\n\r\n      private checkComparisionOp(column, value, symbol) {\r\n        var compare_value = this._where[column][symbol];\r\n        switch (symbol) {\r\n          // greater than\r\n          case '>': if (value <= compare_value) {\r\n            this._status = false;\r\n          } break;\r\n          // less than\r\n          case '<': if (value >= compare_value) {\r\n            this._status = false;\r\n          } break;\r\n          // less than equal\r\n          case '<=': if (value > compare_value) {\r\n            this._status = false;\r\n          } break;\r\n          // greather than equal\r\n          case '>=': if (value < compare_value) {\r\n            this._status = false;\r\n          } break;\r\n          // between\r\n          case '-': if (value < compare_value.Low || value > compare_value.High) {\r\n            this._status = false;\r\n          } break;\r\n          // Not equal to\r\n          case '!=': if (value === compare_value) {\r\n            this._status = false;\r\n          } break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","declare var tx_logic;\r\nnamespace JsStore {\r\n    export namespace Business {\r\n        export class Transaction extends Base {\r\n            _results;\r\n\r\n            constructor(qry: ITranscationQry, onSuccess, onError) {\r\n                super();\r\n                qry.AbortOnError = qry.AbortOnError ? qry.AbortOnError : true;\r\n                this._query = qry;\r\n                this._onSuccess = onSuccess;\r\n                this._onError = onError;\r\n            }\r\n\r\n            execute() {\r\n                var request_queue: IWebWorkerRequest[] = [],\r\n                    onRequestFinished = function (result) {\r\n                        var finisehd_request = request_queue.shift();\r\n                        if (finisehd_request) {\r\n                            if (this._errorOccured && this._query.AbortOnError === true) {\r\n                                db_transaction.abort();\r\n                            }\r\n                            else {\r\n                                if (finisehd_request.OnSuccess) {\r\n                                    finisehd_request.OnSuccess(result);\r\n                                }\r\n                                if (request_queue.length >= 1) {\r\n                                    executeRequest(request_queue[0]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }.bind(this),\r\n                    executeRequest = function (request: IWebWorkerRequest) {\r\n                        var request_obj;\r\n                        switch (request.Name) {\r\n                            case 'select':\r\n                                request_obj = new Select.Instance(\r\n                                    request.Query, onRequestFinished, this._onError.bind(this)\r\n                                );\r\n                                break;\r\n                            case 'insert':\r\n                                request_obj = new Insert.Instance(\r\n                                    request.Query, onRequestFinished, this._onError.bind(this)\r\n                                );\r\n                                break;\r\n                            case 'update': break;\r\n                            case 'remove': break;\r\n                            case 'count': break;\r\n                        }\r\n                        request_obj._isTransaction = true;\r\n                        request_obj.execute();\r\n                    }.bind(this),\r\n                    pushRequest = function (request: IWebWorkerRequest) {\r\n                        request_queue.push(request);\r\n                        if (request_queue.length === 1) {\r\n                            this.initTransaction(this._query.TableNames);\r\n                            executeRequest(request_queue[0]);\r\n                        }\r\n                    }.bind(this),\r\n                    select = function (qry: ISelect, onSuccess) {\r\n                        onSuccess = qry.OnSuccess ? qry.OnSuccess : onSuccess;\r\n                        pushRequest({\r\n                            Name: 'select',\r\n                            OnSuccess: onSuccess,\r\n                            Query: qry\r\n                        } as IWebWorkerRequest);\r\n                    };\r\n                var insert = function (qry: IInsert, onSuccess) {\r\n                    onSuccess = qry.OnSuccess ? qry.OnSuccess : onSuccess;\r\n                    pushRequest({\r\n                        Name: 'insert',\r\n                        OnSuccess: onSuccess,\r\n                        Query: qry\r\n                    } as IWebWorkerRequest);\r\n                };\r\n                var update = function (qry: IUpdate, onSuccess) {\r\n                    onSuccess = qry.OnSuccess ? qry.OnSuccess : onSuccess;\r\n                    pushRequest({\r\n                        Name: 'update',\r\n                        OnSuccess: onSuccess,\r\n                        Query: qry\r\n                    } as IWebWorkerRequest);\r\n                };\r\n                var remove = function (qry: IRemove, onSuccess) {\r\n                    onSuccess = qry.OnSuccess ? qry.OnSuccess : onSuccess;\r\n                    pushRequest({\r\n                        Name: 'remove',\r\n                        OnSuccess: onSuccess,\r\n                        Query: qry\r\n                    } as IWebWorkerRequest);\r\n                };\r\n                var count = function (qry: ICount, onSuccess) {\r\n                    onSuccess = qry.OnSuccess ? qry.OnSuccess : onSuccess;\r\n                    pushRequest({\r\n                        Name: 'count',\r\n                        OnSuccess: onSuccess,\r\n                        Query: qry\r\n                    } as IWebWorkerRequest);\r\n                };\r\n\r\n                eval(\"var tx_logic =\" + this._query.Logic);\r\n                tx_logic.call(this, this._query.Data);\r\n                this._query.Data = this._query.Logic = null;\r\n            }\r\n\r\n            private initTransaction(tableNames) {\r\n                createTransaction(tableNames, this.onTransactionCompleted.bind(this));\r\n            }\r\n\r\n            private onTransactionCompleted() {\r\n                this._onSuccess(this._results);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class BaseSelect extends Base {\r\n                _results = [];\r\n                _sorted: boolean = false;\r\n                _skipRecord;\r\n                _limitRecord;\r\n                _checkFlag = false;\r\n                _isOr: boolean;\r\n                _isArrayQry: boolean;\r\n                _onWhereArrayQrySuccess: () => void;\r\n\r\n                protected removeDuplicates() {\r\n                    var datas = this._results;\r\n                    // free results memory\r\n                    this._results = undefined;\r\n                    var key = this.getPrimaryKey(this._query.From);\r\n                    var lookupObject = {};\r\n                    for (var i in datas) {\r\n                        lookupObject[datas[i][key]] = datas[i];\r\n                    }\r\n                    // free datas memory\r\n                    datas = [];\r\n                    for (i in lookupObject) {\r\n                        datas.push(lookupObject[i]);\r\n                    }\r\n                    this._results = datas;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class NotWhere extends BaseSelect {\r\n                protected executeWhereUndefinedLogic() {\r\n                    if (this._query.Order && this._query.Order.By) {\r\n                        if (this._objectStore.indexNames.contains(this._query.Order.By)) {\r\n                            var order_type: IDBCursorDirection = this._query.Order.Type &&\r\n                                this._query.Order.Type.toLowerCase() === 'desc' ? 'prev' : 'next';\r\n                            this._sorted = true;\r\n                            this._cursorOpenRequest = this._objectStore.index(this._query.Order.By).\r\n                                openCursor(null, order_type);\r\n                        }\r\n                        else {\r\n                            var error = new Error(Error_Type.ColumnNotExist, { ColumnName: this._query.Order.By });\r\n                            error.throw();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest = this._objectStore.openCursor();\r\n                    }\r\n\r\n                    if (this._skipRecord && this._limitRecord) {\r\n                        this.executeSkipAndLimitForNoWhere();\r\n                    }\r\n                    else if (this._skipRecord) {\r\n                        this.executeSkipForNoWhere();\r\n                    }\r\n                    else if (this._limitRecord) {\r\n                        this.executeLimitForNotWhere();\r\n                    }\r\n                    else {\r\n                        this.executeSimpleForNotWhere();\r\n                    }\r\n\r\n                    this._cursorOpenRequest.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                }\r\n\r\n                private executeSkipAndLimitForNoWhere() {\r\n                    var record_skipped = false,\r\n                        cursor: IDBCursorWithValue;\r\n                    this._cursorOpenRequest.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            if (record_skipped && this._results.length !== this._limitRecord) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                record_skipped = true;\r\n                                cursor.advance(this._skipRecord);\r\n                            }\r\n                        } else {\r\n                            this.onQueryFinished();\r\n                        }\r\n                    }.bind(this);\r\n                }\r\n\r\n                private executeSkipForNoWhere() {\r\n                    var record_skipped = false,\r\n                        cursor;\r\n                    this._cursorOpenRequest.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            if (record_skipped) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                record_skipped = true;\r\n                                cursor.advance(this._skipRecord);\r\n                            }\r\n                        } else {\r\n                            this.onQueryFinished();\r\n                        }\r\n                    }.bind(this);\r\n                }\r\n\r\n                private executeSimpleForNotWhere() {\r\n                    var cursor;\r\n                    this._cursorOpenRequest.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            this._results.push(cursor.value);\r\n                            (cursor as any).continue();\r\n                        }\r\n                        else {\r\n                            this.onQueryFinished();\r\n                        }\r\n                    }.bind(this);\r\n                }\r\n\r\n                private executeLimitForNotWhere() {\r\n                    var cursor;\r\n                    this._cursorOpenRequest.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor && this._results.length !== this._limitRecord) {\r\n                            this._results.push(cursor.value);\r\n                            cursor.continue();\r\n                        } else {\r\n                            this.onQueryFinished();\r\n                        }\r\n                    }.bind(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class In extends NotWhere {\r\n                protected executeInLogic(column, values) {\r\n                    if (this._skipRecord && this._limitRecord) {\r\n                        this.executeSkipAndLimitForIn(column, values);\r\n                    }\r\n                    else if (this._skipRecord) {\r\n                        this.executeSkipForIn(column, values);\r\n                    }\r\n                    else if (this._limitRecord) {\r\n                        this.executeLimitForIn(column, values);\r\n                    }\r\n                    else {\r\n                        this.executeSimpleForIn(column, values);\r\n                    }\r\n                }\r\n\r\n                private executeSkipAndLimitForIn(column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        skip = this._skipRecord,\r\n                        column_store = this._objectStore.index(column),\r\n                        cursor_request: IDBRequest,\r\n                        skipOrPush = function (value) {\r\n                            if (skip === 0) {\r\n                                this._results.push(value);\r\n                            }\r\n                            else {\r\n                                --skip;\r\n                            }\r\n                        }.bind(this),\r\n                        onCursorError = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (this._results.length !== this._limitRecord && cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            skipOrPush(cursor.value);\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (this._results.length !== this._limitRecord && cursor) {\r\n                                        skipOrPush(cursor.value);\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                private executeSkipForIn(column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        skip = this._skipRecord,\r\n                        cursor_request: IDBRequest,\r\n                        column_store = this._objectStore.index(column),\r\n                        skipOrPush = function (value) {\r\n                            if (skip === 0) {\r\n                                this._results.push(value);\r\n                            }\r\n                            else {\r\n                                --skip;\r\n                            }\r\n                        }.bind(this),\r\n                        onCursorError = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            skipOrPush((cursor.value));\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        skipOrPush((cursor.value));\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                private executeLimitForIn(column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        cursor_request: IDBRequest,\r\n                        column_store = this._objectStore.index(column),\r\n                        onCursorError = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor && this._results.length !== this._limitRecord) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            this._results.push(cursor.value);\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor && this._results.length !== this._limitRecord) {\r\n                                        this._results.push(cursor.value);\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                private executeSimpleForIn(column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        cursor_request: IDBRequest,\r\n                        column_store = this._objectStore.index(column),\r\n                        onCursorError = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            this._results.push(cursor.value);\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        this._results.push(cursor.value);\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Like extends In {\r\n                _compSymbol: Occurence;\r\n                _compValue;\r\n                _compValueLength: number;\r\n\r\n                protected executeLikeLogic(column, value: string, symbol: Occurence) {\r\n                    this._compValue = value.toLowerCase();\r\n                    this._compValueLength = this._compValue.length;\r\n                    this._compSymbol = symbol;\r\n                    this._cursorOpenRequest = this._objectStore.index(column).openCursor();\r\n                    this._cursorOpenRequest.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                    if (this._skipRecord && this._limitRecord) {\r\n                        this.executeSkipAndLimit();\r\n                    }\r\n                    else if (this._skipRecord) {\r\n                        this.executeSkip();\r\n                    }\r\n                    else if (this._limitRecord) {\r\n                        this.executeLimit();\r\n                    }\r\n                    else {\r\n                        this.executeSimple();\r\n                    }\r\n                }\r\n\r\n                private executeSkipAndLimit() {\r\n                    var cursor: IDBCursorWithValue,\r\n                        skip = this._skipRecord,\r\n                        skipOrPush = function (value) {\r\n                            if (skip === 0) {\r\n                                this._results.push(value);\r\n                            }\r\n                            else {\r\n                                --skip;\r\n                            }\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (this._results.length !== this._limitRecord && cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    skipOrPush(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (this._results.length !== this._limitRecord && cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    skipOrPush(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n\r\n                private executeSkip() {\r\n                    var cursor: IDBCursorWithValue,\r\n                        skip = this._skipRecord,\r\n                        skipOrPush = function (value) {\r\n                            if (skip === 0) {\r\n                                this._results.push(value);\r\n                            }\r\n                            else {\r\n                                --skip;\r\n                            }\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    skipOrPush((cursor.value));\r\n                                }\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    skipOrPush((cursor.value));\r\n                                }\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n\r\n                private executeLimit() {\r\n                    var cursor: IDBCursorWithValue;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (this._results.length !== this._limitRecord && cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (this._results.length !== this._limitRecord && cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n\r\n                private executeSimple() {\r\n                    var cursor: IDBCursorWithValue;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Where extends Like {\r\n                private executeSkipAndLimitForWhere() {\r\n                    var record_skipped = false,\r\n                        cursor;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (record_skipped && this._results.length !== this._limitRecord) {\r\n                                    if (this._whereChecker.check(cursor.value)) {\r\n                                        this._results.push(cursor.value);\r\n                                    }\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    record_skipped = true;\r\n                                    cursor.advance(this._skipRecord);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (record_skipped && this._results.length !== this._limitRecord) {\r\n                                    this._results.push(cursor.value);\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    record_skipped = true;\r\n                                    cursor.advance(this._skipRecord);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n\r\n                private executeSkipForWhere() {\r\n                    var record_skipped = false,\r\n                        cursor;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (record_skipped) {\r\n                                    if (this._whereChecker.check(cursor.value)) {\r\n                                        this._results.push(cursor.value);\r\n                                    }\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    record_skipped = true;\r\n                                    cursor.advance(this._skipRecord);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (record_skipped) {\r\n                                    this._results.push(cursor.value);\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    record_skipped = true;\r\n                                    cursor.advance(this._skipRecord);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n\r\n                private executeLimitForWhere() {\r\n                    var cursor;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor && this._results.length !== this._limitRecord &&\r\n                                this._whereChecker.check(cursor.value)) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor && this._results.length !== this._limitRecord) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n\r\n                private executeSimpleForWhere() {\r\n                    var cursor;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this._whereChecker.check(cursor.value)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            } else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n\r\n                private executeWhereLogic(column, value, op, dir) {\r\n                    value = op ? value[op] : value;\r\n                    this._cursorOpenRequest = this._objectStore.index(column).openCursor(\r\n                        this.getKeyRange(value, op),\r\n                        dir\r\n                    );\r\n\r\n                    this._cursorOpenRequest.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                    if (this._skipRecord && this._limitRecord) {\r\n                        this.executeSkipAndLimitForWhere();\r\n                    }\r\n                    else if (this._skipRecord) {\r\n                        this.executeSkipForWhere();\r\n                    }\r\n                    else if (this._limitRecord) {\r\n                        this.executeLimitForWhere();\r\n                    }\r\n                    else {\r\n                        this.executeSimpleForWhere();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Join extends BaseSelect {\r\n                _query: ISelectJoin;\r\n                _queryStack: ITableJoin[] = [];\r\n                _currentQueryStackIndex = 0;\r\n\r\n                constructor(query: ISelectJoin, onSuccess: (results: any[]) => void, onError: (err: IError) => void) {\r\n                    super();\r\n                    this._onSuccess = onSuccess;\r\n                    this._onError = onError;\r\n                    this._query = query;\r\n                    var table_list = []; // used to open the multiple object store\r\n\r\n                    var convertQueryIntoStack = function (qry) {\r\n                        if (qry.hasOwnProperty('Table1')) {\r\n                            qry.Table2['JoinType'] = (qry as IJoin).Join === undefined ?\r\n                                'inner' : (qry as IJoin).Join.toLowerCase();\r\n                            this._queryStack.push(qry.Table2);\r\n                            if (this._queryStack.length % 2 === 0) {\r\n                                this._queryStack[this._queryStack.length - 1].NextJoin = qry.NextJoin;\r\n                            }\r\n                            table_list.push(qry.Table2.Table);\r\n                            return convertQueryIntoStack(qry.Table1);\r\n                        }\r\n                        else {\r\n                            this._queryStack.push(qry);\r\n                            table_list.push(qry.Table);\r\n                            return;\r\n                        }\r\n                    }.bind(this);\r\n                    convertQueryIntoStack(query.From);\r\n                    this._queryStack.reverse();\r\n                    // get the data for first table\r\n                    if (!this._errorOccured) {\r\n                        var select_object = new Select.Instance({\r\n                            From: this._queryStack[0].Table,\r\n                            Where: this._queryStack[0].Where\r\n                        } as ISelect, function (results) {\r\n                            var table_name = this._queryStack[0].Table;\r\n                            results.forEach(function (item, index) {\r\n                                this._results[index] = {};\r\n                                this._results[index][table_name] = item;\r\n                            }, this);\r\n                            this.startExecutionJoinLogic();\r\n                        }.bind(this), this.onErrorOccured.bind(this));\r\n                        select_object.execute();\r\n                    }\r\n                }\r\n\r\n                private onTransactionCompleted(e) {\r\n                    if (this._onSuccess != null && (this._queryStack.length === this._currentQueryStackIndex + 1)) {\r\n                        if (this._query['Count']) {\r\n                            this._onSuccess(this._results.length);\r\n                        }\r\n                        else {\r\n                            if (this._query['Skip'] && this._query['Limit']) {\r\n                                this._results.splice(0, this._query['Skip']);\r\n                                this._results.splice(this._query['Limit'] - 1, this._results.length);\r\n                            }\r\n                            else if (this._query['Skip']) {\r\n                                this._results.splice(0, this._query['Skip']);\r\n                            }\r\n                            else if (this._query['Limit']) {\r\n                                this._results.splice(this._query['Limit'] - 1, this._results.length);\r\n                            }\r\n                            this._onSuccess(this._results);\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                private executeWhereJoinLogic(joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var results = [],\r\n                        join_index = 0,\r\n                        column = query.Column,\r\n                        tmp_results = this._results,\r\n                        item,\r\n                        result_length = tmp_results.length;\r\n\r\n                    // get the data from query table\r\n                    var select_object = new Select.Instance({\r\n                        From: query.Table,\r\n                        Order: query.Order,\r\n                        Where: query.Where\r\n                    } as ISelect, function (selectResults) {\r\n                        // perform join\r\n                        selectResults.forEach(function (value, index) {\r\n                            // search item through each global result\r\n                            for (var i = 0; i < result_length; i++) {\r\n                                item = tmp_results[i][joinQuery.Table][joinQuery.Column];\r\n                                doJoin(item, value, i);\r\n                            }\r\n                        });\r\n                        this._results = results;\r\n                        // check if further execution needed\r\n                        if (this._queryStack.length > this._currentQueryStackIndex + 1) {\r\n                            this.startExecutionJoinLogic();\r\n                        }\r\n                        else {\r\n                            this.onTransactionCompleted(null);\r\n                        }\r\n\r\n                    }.bind(this), this.onErrorOccured.bind(this));\r\n                    select_object.execute();\r\n\r\n                    var doJoin = function (value1, value2, itemIndex) {\r\n                        results[join_index] = {};\r\n                        if (value1 === value2[query.Column]) {\r\n                            results[join_index][query.Table] = value2;\r\n                            // copy other relative data into current result\r\n                            for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                results[join_index][this._queryStack[j].Table] =\r\n                                    tmp_results[itemIndex][this._queryStack[j].Table];\r\n                            }\r\n                            ++join_index;\r\n                        }\r\n                        else if (query.JoinType === 'left') {\r\n                            // left join\r\n                            results[join_index] = {};\r\n                            results[join_index][query.Table] = null;\r\n                            // copy other relative data into current result\r\n                            for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                results[join_index][this._queryStack[j].Table] =\r\n                                    tmp_results[itemIndex][this._queryStack[j].Table];\r\n                            }\r\n                            // results[JoinIndex][joinQuery.Table] = TmpResults[ItemIndex][joinQuery.Table];\r\n                            ++join_index;\r\n                        }\r\n                    }.bind(this);\r\n                }\r\n\r\n                private executeRightJoin(joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var join_results = [],\r\n                        join_index = 0,\r\n                        column = query.Column,\r\n                        tmp_results = this._results,\r\n                        result_length = tmp_results.length,\r\n                        item_index = 0,\r\n                        where = {},\r\n                        onExecutionFinished = function () {\r\n                            this._results = join_results;\r\n                            // check if further execution needed\r\n                            if (this._queryStack.length > this._currentQueryStackIndex + 1) {\r\n                                this.startExecutionJoinLogic();\r\n                            }\r\n                            else {\r\n                                this.onTransactionCompleted(null);\r\n                            }\r\n                        }.bind(this),\r\n                        doRightJoin = function (results) {\r\n                            var value_found = false;\r\n                            results.forEach(function (item, index) {\r\n                                for (item_index = 0; item_index < result_length; item_index++) {\r\n                                    if (item[query.Column] ===\r\n                                        tmp_results[item_index][joinQuery.Table][joinQuery.Column]) {\r\n                                        value_found = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                join_results[index] = {};\r\n                                join_results[index][query.Table] = item;\r\n                                if (value_found) {\r\n                                    value_found = false;\r\n                                    for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                        join_results[index][this._queryStack[j].Table] =\r\n                                            tmp_results[item_index][this._queryStack[j].Table];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                        join_results[index][this._queryStack[j].Table] = null;\r\n                                    }\r\n                                }\r\n                            }, this);\r\n                        }.bind(this),\r\n                        executeLogic = function () {\r\n                            var select_object = new Select.Instance({\r\n                                From: query.Table,\r\n                                Order: query.Order,\r\n                                Where: query.Where\r\n                            } as ISelect, function (results) {\r\n                                doRightJoin(results);\r\n                                onExecutionFinished();\r\n                            }.bind(this), this.onErrorOccured.bind(this));\r\n                            select_object.execute();\r\n                        }.bind(this);\r\n                    executeLogic();\r\n                }\r\n\r\n                private executeWhereUndefinedLogicForJoin(joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var join_results = [],\r\n                        join_index = 0,\r\n                        column = query.Column,\r\n                        tmp_results = this._results,\r\n                        // Item,\r\n                        result_length = tmp_results.length,\r\n                        item_index = 0,\r\n                        where = {},\r\n                        onExecutionFinished = function () {\r\n                            this._results = join_results;\r\n                            // check if further execution needed\r\n                            if (this._queryStack.length > this._currentQueryStackIndex + 1) {\r\n                                this.startExecutionJoinLogic();\r\n                            }\r\n                            else {\r\n                                this.onTransactionCompleted(null);\r\n                            }\r\n                        }.bind(this),\r\n                        doJoin = function (results) {\r\n                            if (results.length > 0) {\r\n                                results.forEach(function (value) {\r\n                                    join_results[join_index] = {};\r\n                                    join_results[join_index][query.Table] = value;\r\n                                    // copy other relative data into current result\r\n                                    for (var k = 0; k < this._currentQueryStackIndex; k++) {\r\n                                        join_results[join_index][this._queryStack[k].Table] =\r\n                                            tmp_results[item_index][this._queryStack[k].Table];\r\n                                    }\r\n                                    ++join_index;\r\n                                }, this);\r\n                            }\r\n                            else if (query.JoinType === 'left') {\r\n                                // left join\r\n                                join_results[join_index] = {};\r\n                                join_results[join_index][query.Table] = null;\r\n                                // copy other relative data into current result\r\n                                for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                    join_results[join_index][this._queryStack[j].Table] =\r\n                                        tmp_results[item_index][this._queryStack[j].Table];\r\n                                }\r\n                                ++join_index;\r\n                            }\r\n                        }.bind(this),\r\n                        executeLogic = function () {\r\n                            if (item_index < result_length) {\r\n                                if (!this._errorOccured) {\r\n                                    where[query.Column] = tmp_results[item_index][joinQuery.Table][joinQuery.Column];\r\n                                    var select_object = new Select.Instance({\r\n                                        From: query.Table,\r\n                                        Order: query.Order,\r\n                                        Where: where\r\n                                    } as ISelect, function (results) {\r\n                                        doJoin(results);\r\n                                        ++item_index;\r\n                                        executeLogic();\r\n                                    }.bind(this), this.onErrorOccured.bind(this));\r\n                                    select_object.execute();\r\n                                }\r\n                            }\r\n                            else {\r\n                                onExecutionFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    executeLogic();\r\n                }\r\n\r\n                private startExecutionJoinLogic() {\r\n                    var join_query;\r\n                    if (this._currentQueryStackIndex >= 1 && this._currentQueryStackIndex % 2 === 1) {\r\n                        join_query = {\r\n                            Column: this._queryStack[this._currentQueryStackIndex].NextJoin.Column,\r\n                            Table: this._queryStack[this._currentQueryStackIndex].NextJoin.Table\r\n                        } as ITableJoin;\r\n                        this._currentQueryStackIndex++;\r\n                    }\r\n                    else {\r\n                        join_query = this._queryStack[this._currentQueryStackIndex++];\r\n                    }\r\n\r\n                    var query = this._queryStack[this._currentQueryStackIndex];\r\n                    if (query.JoinType === 'right') {\r\n                        this.executeRightJoin(join_query, query);\r\n                    }\r\n                    else if (query.Where) {\r\n                        this.executeWhereJoinLogic(join_query, query);\r\n                    }\r\n                    else {\r\n                        this.executeWhereUndefinedLogicForJoin(join_query, query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class GroupByHelper extends Where {\r\n                constructor() {\r\n                    super();\r\n                }\r\n\r\n                protected processGroupBy() {\r\n                    var grp_qry = this._query.GroupBy,\r\n                        datas = this._results,\r\n                        look_up_obj = {};\r\n                    // free results memory\r\n                    this._results = this._query.GroupBy = undefined;\r\n                    if (typeof grp_qry === 'string') {\r\n                        for (var i in datas) {\r\n                            look_up_obj[datas[i][grp_qry]] = datas[i];\r\n                        }\r\n                    }\r\n                    else {\r\n                        var obj_key;\r\n                        for (var i in datas) {\r\n                            obj_key = \"\";\r\n                            for (var column in grp_qry) {\r\n                                obj_key += datas[i][grp_qry[column]];\r\n                            }\r\n                            look_up_obj[obj_key] = datas[i];\r\n                        }\r\n                    }\r\n                    // free datas memory\r\n                    datas = [];\r\n                    for (i in look_up_obj) {\r\n                        datas.push(look_up_obj[i]);\r\n                    }\r\n                    this._results = datas;\r\n                }\r\n\r\n                protected executeAggregateGroupBy() {\r\n                    var grp_qry = this._query.GroupBy,\r\n                        datas = this._results,\r\n                        look_up_obj = {},\r\n                        // assign aggregate and free aggregate memory\r\n                        aggregate_qry = this._query.Aggregate;\r\n                    this._query.Aggregate = undefined;\r\n                    // free results memory\r\n                    this._results = undefined;\r\n\r\n                    var index, obj_Key, value, aggr_column;\r\n                    var calculateAggregate = function () {\r\n                        for (var prop in aggregate_qry) {\r\n                            switch (prop) {\r\n                                case 'Count':\r\n                                    var getCount = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old value\r\n                                        value = value ? value[\"Count(\" + aggr_column + \")\"] : 0;\r\n                                        // add with old value if data exist\r\n                                        value += datas[index][aggr_column] ? 1 : 0;\r\n                                        return value;\r\n                                    };\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        datas[index][\"Count(\" + aggr_column + \")\"] = getCount();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            datas[index][\"Count(\" + aggr_column + \")\"] = getCount();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'Max':\r\n                                    var getMax = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old value\r\n                                        value = value ? value[\"Max(\" + aggr_column + \")\"] : 0;\r\n                                        datas[index][aggr_column] = datas[index][aggr_column] ?\r\n                                            datas[index][aggr_column] : 0;\r\n                                        // compare between old value and new value\r\n                                        return value > datas[index][aggr_column] ? value : datas[index][aggr_column];\r\n                                    };\r\n\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        datas[index][\"Max(\" + aggr_column + \")\"] = getMax();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            datas[index][\"Max(\" + aggr_column + \")\"] = getMax();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'Min':\r\n                                    var getMin = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old value\r\n                                        value = value ? value[\"Min(\" + aggr_column + \")\"] : Infinity;\r\n                                        datas[index][aggr_column] = datas[index][aggr_column] ?\r\n                                            datas[index][aggr_column] : Infinity;\r\n                                        // compare between old value and new value\r\n                                        return value < datas[index][aggr_column] ? value : datas[index][aggr_column];\r\n                                    };\r\n\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        datas[index][\"Min(\" + aggr_column + \")\"] = getMin();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            datas[index][\"Min(\" + aggr_column + \")\"] = getMin();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'Sum':\r\n                                    var getSum = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old value\r\n                                        value = value ? value[\"Sum(\" + aggr_column + \")\"] : 0;\r\n                                        // add with old value if data exist\r\n                                        value += datas[index][aggr_column] ? datas[index][aggr_column] : 0;\r\n                                        return value;\r\n                                    };\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        datas[index][\"Sum(\" + aggr_column + \")\"] = getSum();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            datas[index][\"Sum(\" + aggr_column + \")\"] = getSum();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'Avg':\r\n                                    var getAvg = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old sum value\r\n                                        var sum_of_column = value ? value[\"Sum(\" + aggr_column + \")\"] : 0;\r\n                                        // add with old value if data exist\r\n                                        sum_of_column += datas[index][aggr_column] ? datas[index][aggr_column] : 0;\r\n                                        datas[index][\"Sum(\" + aggr_column + \")\"] = sum_of_column;\r\n                                        // get old count value\r\n                                        value = value ? value[\"Count(\" + aggr_column + \")\"] : 0;\r\n                                        // add with old value if data exist\r\n                                        value += datas[index][aggr_column] ? 1 : 0;\r\n                                        datas[index][\"Count(\" + aggr_column + \")\"] = value;\r\n                                    };\r\n\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        getAvg();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            getAvg();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    if (typeof grp_qry === 'string') {\r\n                        for (index in datas) {\r\n                            obj_Key = datas[index][grp_qry];\r\n                            calculateAggregate();\r\n                            look_up_obj[obj_Key] = datas[index];\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (index in datas) {\r\n                            obj_Key = \"\";\r\n                            for (var column in grp_qry) {\r\n                                obj_Key += datas[index][grp_qry[column]];\r\n                            }\r\n                            calculateAggregate();\r\n                            look_up_obj[obj_Key] = datas[index];\r\n                        }\r\n\r\n                    }\r\n                    // free datas memory\r\n                    datas = [];\r\n                    for (var i in look_up_obj) {\r\n                        datas.push(look_up_obj[i]);\r\n                    }\r\n                    // Checking for avg and if exist then fill the datas;\r\n                    if (aggregate_qry.Avg) {\r\n                        if (typeof aggregate_qry.Avg === 'string') {\r\n                            for (index in datas) {\r\n                                var sum_for_avg = datas[index][\"Sum(\" + aggregate_qry.Avg + \")\"],\r\n                                    count_for_avg = datas[index][\"Count(\" + aggregate_qry.Avg + \")\"];\r\n                                datas[index][\"Avg(\" + aggregate_qry.Avg + \")\"] = sum_for_avg / count_for_avg;\r\n                                if (aggregate_qry.Count !== aggregate_qry.Avg) {\r\n                                    delete datas[index][\"Count(\" + aggregate_qry.Avg + \")\"];\r\n                                }\r\n                                if (aggregate_qry.Sum !== aggregate_qry.Avg) {\r\n                                    delete datas[index][\"Sum(\" + aggregate_qry.Avg + \")\"];\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            var is_count_type_string = typeof aggregate_qry.Count,\r\n                                is_sum_type_string = typeof aggregate_qry.Count;\r\n                            for (index in datas) {\r\n                                for (var column in aggregate_qry.Avg) {\r\n                                    var avg_column = aggregate_qry.Avg[column],\r\n                                        sum = datas[index][\"Sum(\" + avg_column + \")\"],\r\n                                        count = datas[index][\"Count(\" + avg_column + \")\"];\r\n                                    datas[index][\"Avg(\" + avg_column + \")\"] = sum / count;\r\n\r\n                                    if (is_count_type_string) {\r\n                                        if (aggregate_qry.Count !== avg_column) {\r\n                                            delete datas[index][\"Count(\" + avg_column + \")\"];\r\n                                        }\r\n                                        else if (aggregate_qry.Count.indexOf(avg_column) === -1) {\r\n                                            delete datas[index][\"Count(\" + avg_column + \")\"];\r\n                                        }\r\n                                    }\r\n\r\n                                    if (is_sum_type_string) {\r\n                                        if (aggregate_qry.Sum !== avg_column) {\r\n                                            delete datas[index][\"Sum(\" + avg_column + \")\"];\r\n                                        }\r\n                                        else if (aggregate_qry.Sum.indexOf(avg_column) === -1) {\r\n                                            delete datas[index][\"Sum(\" + avg_column + \")\"];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this._results = datas;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Helper extends GroupByHelper {\r\n\r\n                constructor() {\r\n                    super();\r\n                }\r\n\r\n                processOrderBy() {\r\n                    var Order = this._query.Order;\r\n                    if (Order && this._results.length > 0 && !this._sorted && Order.By) {\r\n                        Order.Type = Order.Type ? Order.Type.toLowerCase() : 'asc';\r\n                        var order_column = Order.By,\r\n                            sortNumberInAsc = function () {\r\n                                this._results.sort(function (a, b) {\r\n                                    return a[order_column] - b[order_column];\r\n                                });\r\n                            }.bind(this),\r\n                            sortNumberInDesc = function () {\r\n                                this._results.sort(function (a, b) {\r\n                                    return b[order_column] - a[order_column];\r\n                                });\r\n                            }.bind(this),\r\n                            sortAlphabetInAsc = function () {\r\n                                this._results.sort(function (a, b) {\r\n                                    return a[order_column].toLowerCase().localeCompare(b[order_column].toLowerCase());\r\n                                });\r\n                            }.bind(this),\r\n                            sortAlphabetInDesc = function () {\r\n                                this._results.sort(function (a, b) {\r\n                                    return b[order_column].toLowerCase().localeCompare(a[order_column].toLowerCase());\r\n                                });\r\n                            }.bind(this);\r\n                        if (typeof this._results[0][order_column] === 'string') {\r\n                            if (Order.Type === 'asc') {\r\n                                sortAlphabetInAsc();\r\n                            }\r\n                            else {\r\n                                sortAlphabetInDesc();\r\n                            }\r\n                        }\r\n                        else if (typeof this._results[0][order_column] === 'number') {\r\n                            if (Order.Type === 'asc') {\r\n                                sortNumberInAsc();\r\n                            }\r\n                            else {\r\n                                sortNumberInDesc();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                protected processAggregateQry() {\r\n                    var datas = this._results,\r\n                        results = {},\r\n                        column_to_aggregate;\r\n                    // free results memory\r\n                    this._results = undefined;\r\n                    for (var prop in this._query.Aggregate) {\r\n                        switch (prop) {\r\n                            case 'Count':\r\n                                var getCount = function () {\r\n                                    var result = 0;\r\n                                    for (var i in datas) {\r\n                                        result += datas[i][column_to_aggregate] ? 1 : 0;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Count(\" + column_to_aggregate + \")\"] = getCount();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Count(\" + column_to_aggregate + \")\"] = getCount();\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'Max':\r\n                                var getMax = function () {\r\n                                    var result = 0;\r\n                                    for (var i in datas) {\r\n                                        result = result > datas[i][column_to_aggregate] ?\r\n                                            result : datas[i][column_to_aggregate];\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Max(\" + column_to_aggregate + \")\"] = getMax();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Max(\" + column_to_aggregate + \")\"] = getMax();\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'Min':\r\n                                var getMin = function () {\r\n                                    var result = Infinity, value = Infinity;\r\n                                    for (var i in datas) {\r\n                                        value = datas[i][column_to_aggregate] ?\r\n                                            datas[i][column_to_aggregate] : Infinity;\r\n                                        result = result < value ? result : value;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Min(\" + column_to_aggregate + \")\"] = getMin();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Min(\" + column_to_aggregate + \")\"] = getMin();\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'Sum':\r\n                                var getSum = function () {\r\n                                    var result = 0;\r\n                                    for (var i in datas) {\r\n                                        result += datas[i][column_to_aggregate];\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Sum(\" + column_to_aggregate + \")\"] = getSum();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Sum(\" + column_to_aggregate + \")\"] = getSum();\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'Avg':\r\n                                var getAvg = function () {\r\n                                    var result = 0;\r\n                                    for (var i in datas) {\r\n                                        result += datas[i][column_to_aggregate];\r\n                                    }\r\n                                    return result / datas.length;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Avg(\" + column_to_aggregate + \")\"] = getAvg();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Avg(\" + column_to_aggregate + \")\"] = getAvg();\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    // add results to the first index of result\r\n                    for (var prop in results) {\r\n                        datas[0][prop] = results[prop];\r\n                    }\r\n                    this._results = datas;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Instance extends Helper {\r\n\r\n                constructor(query: ISelect, onSuccess: (results: any[]) => void, onError: (err: IError) => void) {\r\n                    super();\r\n                    this._onError = onError;\r\n                    this._onSuccess = onSuccess;\r\n                    this._query = query;\r\n                    this._skipRecord = this._query.Skip;\r\n                    this._limitRecord = this._query.Limit;\r\n                    this._tableName = this._query.From;\r\n                }\r\n\r\n                execute() {\r\n                    if (this.isTableExist(this._tableName) === true) {\r\n                        try {\r\n                            if (this._query.Where !== undefined) {\r\n                                this.addGreatAndLessToNotOp();\r\n                                this.initTransaction();\r\n                                if (Array.isArray(this._query.Where)) {\r\n                                    this.processWhereArrayQry();\r\n                                }\r\n                                else {\r\n                                    this.processWhere();\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.initTransaction();\r\n                                this.executeWhereUndefinedLogic();\r\n                            }\r\n                        }\r\n                        catch (ex) {\r\n                            this._errorOccured = true;\r\n                            this.onExceptionOccured.call(this, ex, { TableName: this._query.From });\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(\r\n                            new Error(Error_Type.TableNotExist, { TableName: this._query.From }).get(),\r\n                            true\r\n                        );\r\n                    }\r\n                }\r\n\r\n                private processWhereArrayQry() {\r\n                    this._isArrayQry = true;\r\n                    var is_first_where = true,\r\n                        where_query = this._query.Where,\r\n                        output = [], operation,\r\n                        pKey = this.getPrimaryKey(this._query.From),\r\n                        isItemExist = function (keyValue) {\r\n                            var is_exist = false;\r\n                            output.every(function (item) {\r\n                                if (item[pKey] === keyValue) {\r\n                                    is_exist = true;\r\n                                    return false;\r\n                                }\r\n                                return true;\r\n                            });\r\n                            return is_exist;\r\n                        },\r\n                        onSuccess = function () {\r\n                            if (operation === 'and') {\r\n                                var doAnd = function () {\r\n                                    var and_results = [];\r\n                                    this._results.forEach(function (item) {\r\n                                        if (isItemExist(item[pKey])) {\r\n                                            and_results.push(item);\r\n                                        }\r\n                                    });\r\n                                    output = and_results;\r\n                                    and_results = null;\r\n                                }.bind(this);\r\n                                if (output.length > 0) {\r\n                                    doAnd();\r\n                                }\r\n                                else if (is_first_where === true) {\r\n                                    output = this._results;\r\n                                }\r\n                                else {\r\n                                    doAnd();\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (output.length > 0) {\r\n                                    this._results = output.concat(this._results);\r\n                                    this.removeDuplicates();\r\n                                    output = this._results;\r\n                                }\r\n                                else {\r\n                                    output = this._results;\r\n                                }\r\n                            }\r\n                            if (where_query.length > 0) {\r\n                                this._results = [];\r\n                                processFirstQry();\r\n                            }\r\n                            else {\r\n                                this._results = output;\r\n                            }\r\n                            is_first_where = false;\r\n                        }.bind(this),\r\n                        processFirstQry = function () {\r\n                            this._query.Where = where_query.shift();\r\n                            if (this._query.Where['Or']) {\r\n                                if (Object.keys(this._query.Where).length === 1) {\r\n                                    operation = 'or';\r\n                                    this._query.Where = this._query.Where['Or'];\r\n                                    this._onWhereArrayQrySuccess = onSuccess;\r\n                                }\r\n                                else {\r\n                                    operation = 'and';\r\n                                    this._onWhereArrayQrySuccess = onSuccess;\r\n                                }\r\n                            }\r\n                            else {\r\n                                operation = 'and';\r\n                                this._onWhereArrayQrySuccess = onSuccess;\r\n                            }\r\n                            this.processWhere();\r\n                        }.bind(this);\r\n                    processFirstQry();\r\n                }\r\n\r\n                private onQueryFinished() {\r\n                    if (this._isOr === true) {\r\n                        this.orQuerySuccess();\r\n                    }\r\n                    else if (this._isArrayQry === true) {\r\n                        this._onWhereArrayQrySuccess();\r\n                    }\r\n                    else if (this._isTransaction === true) {\r\n                        this.onTransactionCompleted();\r\n                    }\r\n                }\r\n\r\n                private initTransaction() {\r\n                    createTransaction([this._query.From], this.onTransactionCompleted.bind(this), 'readonly');\r\n                    this._objectStore = db_transaction.objectStore(this._query.From);\r\n                }\r\n\r\n                private processWhere() {\r\n                    if (this._query.Where.Or) {\r\n                        this.processOrLogic();\r\n                    }\r\n                    this.goToWhereLogic();\r\n                }\r\n\r\n                private onTransactionCompleted() {\r\n                    if (this._errorOccured === false) {\r\n                        this.processOrderBy();\r\n                        if (this._query.Distinct) {\r\n                            var group_by = [];\r\n                            var result = this._results[0];\r\n                            for (var key in result) {\r\n                                group_by.push(key);\r\n                            }\r\n                            var primary_key = this.getPrimaryKey(this._query.From),\r\n                                index = group_by.indexOf(primary_key);\r\n                            group_by.splice(index, 1);\r\n                            this._query.GroupBy = group_by.length > 0 ? group_by : null;\r\n                        }\r\n                        if (this._query.GroupBy) {\r\n                            if (this._query.Aggregate) {\r\n                                this.executeAggregateGroupBy();\r\n                            }\r\n                            else {\r\n                                this.processGroupBy();\r\n                            }\r\n                        }\r\n                        else if (this._query.Aggregate) {\r\n                            this.processAggregateQry();\r\n                        }\r\n                        this._onSuccess(this._results);\r\n                    }\r\n                }\r\n\r\n                private orQueryFinish() {\r\n                    this._isOr = false;\r\n                    this._results = (this as any)._orInfo.Results;\r\n                    // free or info memory\r\n                    (this as any)._orInfo = undefined;\r\n                    this.removeDuplicates();\r\n                    this.onQueryFinished();\r\n                }\r\n\r\n                private orQuerySuccess() {\r\n                    (this as any)._orInfo.Results = (this as any)._orInfo.Results.concat(this._results);\r\n                    if (!this._query.Limit || (this._query.Limit > (this as any)._orInfo.Results.length)) {\r\n                        this._results = [];\r\n                        var key = getObjectFirstKey((this as any)._orInfo.OrQuery);\r\n                        if (key != null) {\r\n                            var where = {};\r\n                            where[key] = (this as any)._orInfo.OrQuery[key];\r\n                            delete (this as any)._orInfo.OrQuery[key];\r\n                            this._query.Where = where;\r\n                            this.goToWhereLogic();\r\n                        }\r\n                        else {\r\n                            this.orQueryFinish();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.orQueryFinish();\r\n                    }\r\n                }\r\n\r\n                private processOrLogic() {\r\n                    this._isOr = true;\r\n                    (this as any)._orInfo = {\r\n                        OrQuery: this._query.Where.Or,\r\n                        Results: []\r\n                    };\r\n                    // free or memory\r\n                    delete this._query.Where.Or;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class BaseCount extends Base {\r\n                _resultCount: number = 0;\r\n                _skipRecord;\r\n                _limitRecord;\r\n                _checkFlag = false;\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class NotWhere extends BaseCount {\r\n                protected executeWhereUndefinedLogic() {\r\n                    if (this._objectStore.count) {\r\n                        var count_request = this._objectStore.count();\r\n                        count_request.onsuccess = function () {\r\n                            this._resultCount = count_request.result;\r\n                            this.onQueryFinished();\r\n                        }.bind(this);\r\n                        count_request.onerror = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        var cursor,\r\n                            cursor_request = this._objectStore.openCursor();\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                ++this._resultCount;\r\n                                (cursor as any).continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                        cursor_request.onerror = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class In extends NotWhere {\r\n                private executeInLogic(column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        column_store = this._objectStore.index(column),\r\n                        cursor_request,\r\n                        onCursorError = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            ++this._resultCount;\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this._objectStore.count) {\r\n                            for (var i = 0, length = values.length; i < length; i++) {\r\n                                if (!this._errorOccured) {\r\n                                    cursor_request = column_store.count(IDBKeyRange.only(values[i]));\r\n                                    cursor_request.onsuccess = function (e) {\r\n                                        this._resultCount += e.target.result;\r\n                                        if (i + 1 === length) {\r\n                                            this.onQueryFinished();\r\n                                        }\r\n                                    }.bind(this);\r\n                                    cursor_request.onerror = onCursorError;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var i = 0, length = values.length; i < length; i++) {\r\n                                if (!this._errorOccured) {\r\n                                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                    cursor_request.onsuccess = function (e) {\r\n                                        cursor = e.target.result;\r\n                                        if (cursor) {\r\n                                            ++this._resultCount;\r\n                                            cursor.continue();\r\n                                        }\r\n                                        else if (i + 1 === length) {\r\n                                            this.onQueryFinished();\r\n                                        }\r\n                                    }.bind(this);\r\n                                    cursor_request.onerror = onCursorError;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class Like extends In {\r\n                _compSymbol: Occurence;\r\n                _compValue;\r\n                _compValueLength: number;\r\n\r\n                protected executeLikeLogic(column, value, symbol: Occurence) {\r\n                    var cursor: IDBCursorWithValue;\r\n                    this._compValue = (value as string).toLowerCase();\r\n                    this._compValueLength = this._compValue.length;\r\n                    this._compSymbol = symbol;\r\n                    var cursor_request = this._objectStore.index(column).openCursor();\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    ++this._resultCount;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    ++this._resultCount;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class Where extends Like {\r\n                private executeWhereLogic(column, value, op) {\r\n                    value = op ? value[op] : value;\r\n                    var cursor_request,\r\n                        cursor: IDBCursorWithValue;\r\n                    if (this._checkFlag) {\r\n                        cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this._whereChecker.check(cursor.value)) {\r\n                                    ++this._resultCount;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        if (this._objectStore.count) {\r\n                            cursor_request = this._objectStore.index(column).count(this.getKeyRange(value, op));\r\n                            cursor_request.onsuccess = function () {\r\n                                this._resultCount = cursor_request.result;\r\n                                this.onQueryFinished();\r\n                            }.bind(this);\r\n                        }\r\n                        else {\r\n                            cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                            cursor_request.onsuccess = function (e) {\r\n                                cursor = e.target.result;\r\n                                if (cursor) {\r\n                                    ++this._resultCount;\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    this.onQueryFinished();\r\n                                }\r\n                            }.bind(this);\r\n                        }\r\n                    }\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class Instance extends Where {\r\n\r\n                constructor(query: ICount, onSuccess: (noOfRecord: number) => void, onError: (error: IError) => void) {\r\n                    super();\r\n                    this._onError = onError;\r\n                    this._onSuccess = onSuccess;\r\n                    this._query = query;\r\n                }\r\n\r\n                execute() {\r\n                    if (this.isTableExist(this._query.From)) {\r\n                        try {\r\n                            if (this._query.Where !== undefined) {\r\n                                this.addGreatAndLessToNotOp();\r\n                                if (this._query.Where.Or || Array.isArray(this._query.Where)) {\r\n                                    var select_object = new Select.Instance(this._query as any,\r\n                                        function (results) {\r\n                                            this._resultCount = results.length;\r\n                                            this.onTransactionCompleted();\r\n                                        }.bind(this), this._onError);\r\n                                    select_object.execute();\r\n                                }\r\n                                else {\r\n                                    this.initTransaction();\r\n                                    this.goToWhereLogic();\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.initTransaction();\r\n                                this.executeWhereUndefinedLogic();\r\n                            }\r\n                        }\r\n                        catch (ex) {\r\n                            this.onExceptionOccured(ex, { TableName: this._query.From });\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(\r\n                            new Error(Error_Type.TableNotExist, { TableName: this._query.From }).get(),\r\n                            true\r\n                        );\r\n                    }\r\n                }\r\n\r\n                private initTransaction() {\r\n                    createTransaction([this._query.From], this.onTransactionCompleted.bind(this), 'readonly');\r\n                    this._objectStore = db_transaction.objectStore(this._query.From);\r\n                }\r\n\r\n                private onQueryFinished() {\r\n                    if (this._isTransaction === true) {\r\n                        this.onTransactionCompleted();\r\n                    }\r\n                }\r\n\r\n                private onTransactionCompleted() {\r\n                    if (this._errorOccured === false) {\r\n                        this._onSuccess(this._resultCount);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export var updateValue = function (suppliedValue, storedValue) {\r\n                for (var key in suppliedValue) {\r\n                    if (typeof suppliedValue[key] !== 'object') {\r\n                        storedValue[key] = suppliedValue[key];\r\n                    }\r\n                    else {\r\n                        for (var op in suppliedValue[key]) {\r\n                            switch (op as any) {\r\n                                case '+': storedValue[key] += suppliedValue[key][op]; break;\r\n                                case '-': storedValue[key] -= suppliedValue[key][op]; break;\r\n                                case '*': storedValue[key] *= suppliedValue[key][op]; break;\r\n                                case '/': storedValue[key] /= suppliedValue[key][op]; break;\r\n                                default: storedValue[key] = suppliedValue[key];\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return storedValue;\r\n            };\r\n        }\r\n\r\n        export class BaseUpdate extends Base {\r\n            _checkFlag = false;\r\n            protected initTransaction() {\r\n                createTransaction([this._query.In], this.onTransactionCompleted.bind(this));\r\n                this._objectStore = db_transaction.objectStore(this._query.In);\r\n            }\r\n\r\n            private onQueryFinished() {\r\n                if (this._isTransaction === true) {\r\n                    this.onTransactionCompleted();\r\n                }\r\n            }\r\n\r\n            private onTransactionCompleted() {\r\n                if (this._errorOccured === false) {\r\n                    this._onSuccess(this._rowAffected);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class NotWhere extends BaseUpdate {\r\n\r\n                protected executeWhereUndefinedLogic() {\r\n                    var cursor,\r\n                        cursor_request = this._objectStore.openCursor();\r\n                    cursor_request.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            cursor.update(updateValue(this._query.Set, cursor.value));\r\n                            ++this._rowAffected;\r\n                            (cursor as any).continue();\r\n                        }\r\n                        else {\r\n                            this.onQueryFinished();\r\n                        }\r\n\r\n                    }.bind(this);\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class In extends NotWhere {\r\n                private executeInLogic(column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        column_store = this._objectStore.index(column),\r\n                        cursor_request,\r\n                        onCursorError = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                            ++this._rowAffected;\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                        ++this._rowAffected;\r\n                                        cursor.continue();\r\n                                    } else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class Like extends In {\r\n                _compSymbol: Occurence;\r\n                _compValue;\r\n                _compValueLength: number;\r\n\r\n                protected executeLikeLogic(column, value, symbol: Occurence) {\r\n                    var cursor: IDBCursorWithValue;\r\n                    this._compValue = (value as string).toLowerCase();\r\n                    this._compValueLength = this._compValue.length;\r\n                    this._compSymbol = symbol;\r\n                    var cursor_open_request = this._objectStore.index(column).openCursor();\r\n                    cursor_open_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                    if (this._checkFlag) {\r\n                        cursor_open_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        cursor_open_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class Where extends Like {\r\n                private executeWhereLogic(column, value, op) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        cursor_request;\r\n                    value = op ? value[op] : value;\r\n                    cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                    if (this._checkFlag) {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this._whereChecker.check(cursor.value)) {\r\n                                    cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                ++this._rowAffected;\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class Instance extends Where {\r\n                constructor(query: IUpdate, onSuccess: () => void, onError: (err: IError) => void) {\r\n                    super();\r\n                    this._onSuccess = onSuccess;\r\n                    this._onError = onError;\r\n                    this._query = query;\r\n                }\r\n\r\n                execute() {\r\n                    try {\r\n                        this._error = new SchemaChecker(this.getTable(this._query.In)).\r\n                            check(this._query.Set, this._query.In);\r\n                        if (!this._error) {\r\n                            if (this._query.Where !== undefined) {\r\n                                this.addGreatAndLessToNotOp();\r\n                                if (this._query.Where.Or || Array.isArray(this._query.Where)) {\r\n                                    this.executeComplexLogic();\r\n                                }\r\n                                else {\r\n                                    this.initTransaction();\r\n                                    this.goToWhereLogic();\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.initTransaction();\r\n                                this.executeWhereUndefinedLogic();\r\n                            }\r\n                        }\r\n                        else {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(this._error, true);\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        this._errorOccured = true;\r\n                        this.onExceptionOccured.call(this, ex, { TableName: this._query.In });\r\n                    }\r\n                }\r\n\r\n                private executeComplexLogic() {\r\n                    var select_object = new Select.Instance({\r\n                        From: this._query.In,\r\n                        Where: this._query.Where\r\n                    } as ISelect, function (results: any[]) {\r\n                        var key = this.getPrimaryKey(this._query.In),\r\n                            in_query = [],\r\n                            where_qry = {};\r\n                        results.forEach(function (value) {\r\n                            in_query.push(value[key]);\r\n                        });\r\n                        results = null;\r\n                        where_qry[key] = { In: in_query };\r\n                        this._query['Where'] = where_qry;\r\n                        this.initTransaction();\r\n                        this.goToWhereLogic();\r\n                    }.bind(this), this._onError.bind(this));\r\n                    select_object.execute();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class SchemaChecker {\r\n                _table: Table;\r\n                constructor(table: Table) {\r\n                    this._table = table;\r\n                }\r\n\r\n                check(setValue, tblName) {\r\n                    var error: IError = null;\r\n                    if (typeof setValue === 'object') {\r\n                        if (this._table) {\r\n                            // loop through table column and find data is valid\r\n                            this._table._columns.every(function (column: Model.Column) {\r\n                                if (error === null) {\r\n                                    if (column._name in setValue) {\r\n                                        error = this.checkByColumn(column, setValue[column._name]);\r\n                                    }\r\n                                    return true;\r\n                                }\r\n                                else {\r\n                                    return false;\r\n                                }\r\n                            }, this);\r\n                        }\r\n                        else {\r\n                            error = new Error(\r\n                                Error_Type.TableNotExist,\r\n                                { TableName: tblName }\r\n                            ).get();\r\n                        }\r\n                    }\r\n                    else {\r\n                        error = new Error(Error_Type.NotObject).get();\r\n                    }\r\n                    return error;\r\n                }\r\n\r\n                private checkByColumn(column, value) {\r\n                    var error: IError = null;\r\n                    // check not null schema\r\n                    if (column._notNull && isNull(value)) {\r\n                        error = new Error(\r\n                            Error_Type.NullValue, { ColumnName: column._name }\r\n                        ).get();\r\n                    }\r\n\r\n                    // check datatype\r\n                    var type = getType(value);\r\n                    if (column._dataType) {\r\n                        if (type !== column._dataType && type !== 'object') {\r\n                            error = new Error(Error_Type.BadDataType,\r\n                                { ColumnName: column._name }\r\n                            ).get();\r\n                        }\r\n                    }\r\n\r\n                    // check allowed operators\r\n                    if (type === 'object') {\r\n                        var allowed_prop = ['+', '-', '*', '/'];\r\n                        for (var prop in value) {\r\n                            if (allowed_prop.indexOf(prop) < 0 && column._dataType && type !== column._dataType) {\r\n                                error = new Error(Error_Type.BadDataType,\r\n                                    { ColumnName: column._name }\r\n                                ).get();\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Remove {\r\n            export class BaseRemove extends Base {\r\n                _checkFlag = false;\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Remove {\r\n            export class NotWhere extends BaseRemove {\r\n                protected executeWhereUndefinedLogic() {\r\n                    var cursor,\r\n                        cursor_request = this._objectStore.openCursor();\r\n                    cursor_request.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            cursor.delete();\r\n                            ++this._rowAffected;\r\n                            (cursor as any).continue();\r\n                        }\r\n                        else {\r\n                            this.onQueryFinished();\r\n                        }\r\n                    }.bind(this);\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Remove {\r\n            export class In extends NotWhere {\r\n                private executeInLogic(column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        cursor_request,\r\n                        onCursorError = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = this._objectStore.index(column).\r\n                                    openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            cursor.delete();\r\n                                            ++this._rowAffected;\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = this._objectStore.index(column).\r\n                                    openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        cursor.delete();\r\n                                        ++this._rowAffected;\r\n                                        cursor.continue();\r\n                                    }\r\n                                    else if (i + 1 === length) {\r\n                                        this.onQueryFinished();\r\n                                    }\r\n                                }.bind(this);\r\n                                cursor_request.onerror = onCursorError;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Remove {\r\n            export class Like extends In {\r\n                _compSymbol: Occurence;\r\n                _compValue;\r\n                _compValueLength: number;\r\n\r\n                protected executeLikeLogic(column, value, symbol: Occurence) {\r\n                    var cursor: IDBCursorWithValue;\r\n                    this._compValue = (value as string).toLowerCase();\r\n                    this._compValueLength = this._compValue.length;\r\n                    this._compSymbol = symbol;\r\n                    var cursor_request = this._objectStore.index(column).openCursor();\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                    if (this._checkFlag) {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    cursor.delete();\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    cursor.delete();\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Remove {\r\n            export class Where extends Like {\r\n                private executeWhereLogic(column, value, op) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        cursor_request;\r\n                    value = op ? value[op] : value;\r\n                    cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                    if (this._checkFlag) {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this._whereChecker.check(cursor.value)) {\r\n                                    cursor.delete();\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                cursor.delete();\r\n                                ++this._rowAffected;\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Remove {\r\n            export class Instance extends Where {\r\n                _isOr: boolean;\r\n\r\n                constructor(\r\n                    query: IRemove, onSuccess: (recordRemoved: number) => void,\r\n                    onError: (err: IError) => void\r\n                ) {\r\n                    super();\r\n                    this._query = query;\r\n                    this._onSuccess = onSuccess;\r\n                    this._onError = onError;\r\n                }\r\n\r\n                execute() {\r\n                    try {\r\n                        if (this._query.Where !== undefined) {\r\n                            this.addGreatAndLessToNotOp();\r\n                            this.initTransaction();\r\n                            if (Array.isArray(this._query.Where)) {\r\n                                this.processWhereArrayQry();\r\n                            }\r\n                            else {\r\n                                this.processWhere();\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.initTransaction();\r\n                            this.executeWhereUndefinedLogic();\r\n                        }\r\n\r\n                    }\r\n                    catch (ex) {\r\n                        this._errorOccured = true;\r\n                        this.onExceptionOccured(ex, { TableName: this._query.From });\r\n                    }\r\n                }\r\n\r\n                private processWhereArrayQry() {\r\n                    var select_object = new Select.Instance(this._query as any,\r\n                        function (results) {\r\n                            var key_list = [],\r\n                                p_key = this.getPrimaryKey(this._query.From);\r\n                            results.forEach(function (item) {\r\n                                key_list.push(item[p_key]);\r\n                            });\r\n                            results = null;\r\n                            this._query.Where = {};\r\n                            this._query.Where[p_key] = { In: key_list };\r\n                            this.processWhere(false);\r\n                        }.bind(this), this._onError);\r\n                    select_object.execute();\r\n                }\r\n\r\n                private processWhere() {\r\n                    if (this._query.Where.Or) {\r\n                        this.processOrLogic();\r\n                    }\r\n                    this.goToWhereLogic();\r\n                }\r\n\r\n                private initTransaction() {\r\n                    createTransaction([this._query.From], this.onTransactionCompleted.bind(this));\r\n                    this._objectStore = db_transaction.objectStore(this._query.From);\r\n                }\r\n\r\n                private onTransactionCompleted() {\r\n                    if (this._errorOccured === false) {\r\n                        this._onSuccess(this._rowAffected);\r\n                    }\r\n                }\r\n\r\n                private onQueryFinished() {\r\n                    if (this._isOr === true) {\r\n                        this.orQuerySuccess();\r\n                    }\r\n                    else if (this._isTransaction === true) {\r\n                        this.onTransactionCompleted();\r\n                    }\r\n                }\r\n\r\n                private orQuerySuccess() {\r\n                    var key = getObjectFirstKey((this as any)._orInfo.OrQuery);\r\n                    if (key != null) {\r\n                        var where = {};\r\n                        where[key] = (this as any)._orInfo.OrQuery[key];\r\n                        delete (this as any)._orInfo.OrQuery[key];\r\n                        this._query.Where = where;\r\n                        this.goToWhereLogic();\r\n                    }\r\n                    else {\r\n                        this._isOr = true;\r\n                    }\r\n                }\r\n\r\n                private processOrLogic() {\r\n                    this._isOr = true;\r\n                    (this as any)._orInfo = {\r\n                        OrQuery: this._query.Where.Or\r\n                    };\r\n\r\n                    // free or memory\r\n                    delete this._query.Where.Or;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Insert {\r\n            export class Instance extends Base {\r\n                _valuesAffected = [];\r\n                _query: IInsert;\r\n                _table: Table;\r\n\r\n                constructor(query: IInsert, onSuccess: (rowsInserted: number) => void, onError: (err: IError) => void) {\r\n                    super();\r\n                    this._onError = onError;\r\n                    this._query = query;\r\n                    this._onSuccess = onSuccess;\r\n                    this._tableName = this._query.Into;\r\n                }\r\n\r\n                execute() {\r\n                    var table = this.getTable(this._tableName);\r\n                    if (!Array.isArray(this._query.Values)) {\r\n                        this.onErrorOccured(\r\n                            new Error(Error_Type.NotArray).get(),\r\n                            true\r\n                        );\r\n                    }\r\n                    else if (table) {\r\n                        try {\r\n                            if (this._query.SkipDataCheck) {\r\n                                this.insertData(this._query.Values);\r\n                            }\r\n                            else {\r\n                                var value_checker_obj = new ValuesChecker(table, this._query.Values);\r\n                                value_checker_obj.checkAndModifyValues(function (isError) {\r\n                                    if (isError) {\r\n                                        this.onErrorOccured(value_checker_obj._error, true);\r\n                                    }\r\n                                    else {\r\n                                        this.insertData(value_checker_obj._values);\r\n                                    }\r\n                                    value_checker_obj = undefined;\r\n                                }.bind(this));\r\n                            }\r\n                            // remove values from query\r\n                            this._query.Values = undefined;\r\n                        }\r\n                        catch (ex) {\r\n                            this.onExceptionOccured(ex, { TableName: this._tableName });\r\n                        }\r\n                    }\r\n                    else {\r\n                        new Error(Error_Type.TableNotExist, { TableName: this._tableName }).throw();\r\n                    }\r\n                }\r\n\r\n                private onTransactionCompleted() {\r\n                    if (this._errorOccured === false) {\r\n                        this._onSuccess(this._query.Return ? this._valuesAffected : this._rowAffected);\r\n                    }\r\n                }\r\n\r\n                private onQueryFinished() {\r\n                    if (this._isTransaction === true) {\r\n                        this.onTransactionCompleted();\r\n                    }\r\n                }\r\n\r\n                private insertData(values) {\r\n                    var value_index = 0,\r\n                        insertDataIntoTable: (value: object) => void;\r\n                    if (this._query.Return) {\r\n                        insertDataIntoTable = function (value) {\r\n                            if (value) {\r\n                                var add_result = object_store.add(value);\r\n                                add_result.onerror = this.onErrorOccured.bind(this);\r\n                                add_result.onsuccess = function (e) {\r\n                                    this._valuesAffected.push(value);\r\n                                    insertDataIntoTable.call(this, values[value_index++]);\r\n                                }.bind(this);\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        };\r\n                    }\r\n                    else {\r\n                        insertDataIntoTable = function (value) {\r\n                            if (value) {\r\n                                var add_result = object_store.add(value);\r\n                                add_result.onerror = this.onErrorOccured.bind(this);\r\n                                add_result.onsuccess = function (e) {\r\n                                    ++this._rowAffected;\r\n                                    insertDataIntoTable.call(this, values[value_index++]);\r\n                                }.bind(this);\r\n                            }\r\n                            else {\r\n                                this.onQueryFinished();\r\n                            }\r\n                        };\r\n                    }\r\n                    createTransaction([this._query.Into], this.onTransactionCompleted.bind(this));\r\n                    var object_store = db_transaction.objectStore(this._query.Into);\r\n                    insertDataIntoTable.call(this, values[value_index++]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Insert {\r\n            export class ValueChecker {\r\n                _table: Table;\r\n                _value: object;\r\n                _errorOccured: boolean = false;\r\n                _error: IError;\r\n                _autoIncrementValue = {};\r\n\r\n                constructor(table: Table, autoIncrementValue) {\r\n                    this._table = table;\r\n                    this._autoIncrementValue = autoIncrementValue;\r\n                }\r\n\r\n                public checkAndModifyValue(value) {\r\n                    this._value = value;\r\n                    this._table._columns.every(function (column) {\r\n                        this.checkAndModifyColumnValue(column, value);\r\n                        return !this._errorOccured;\r\n                    }, this);\r\n                    return this._errorOccured;\r\n                }\r\n\r\n                private checkNotNullAndDataType(column: Column) {\r\n                    // check not null schema\r\n                    if (column._notNull && isNull(this._value[column._name])) {\r\n                        this.onValidationError(Error_Type.NullValue, { ColumnName: column._name });\r\n                    }\r\n                    // check datatype\r\n                    else if (column._dataType && !isNull(this._value[column._name]) &&\r\n                        getType(this._value[column._name]) !== column._dataType) {\r\n                        this.onValidationError(Error_Type.BadDataType, { ColumnName: column._name });\r\n                    }\r\n                }\r\n\r\n                private checkAndModifyColumnValue(column: Column) {\r\n                    // check auto increment scheme\r\n                    if (column._autoIncrement) {\r\n                        this._value[column._name] = ++this._autoIncrementValue[column._name];\r\n                    }\r\n                    // check Default Schema\r\n                    else if (column._default && isNull(this._value[column._name])) {\r\n                        this._value[column._name] = column._default;\r\n                    }\r\n                    this.checkNotNullAndDataType(column);\r\n                }\r\n\r\n                private onValidationError(error: Error_Type, details: any) {\r\n                    this._errorOccured = true;\r\n                    this._error = new Error(error, details).get();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Insert {\r\n            export class ValuesChecker {\r\n                _table: Table;\r\n                _values: any[];\r\n                _error: IError;\r\n                _onFinish: (isError: boolean) => void;\r\n                _valueCheckerObj: ValueChecker;\r\n\r\n                constructor(table: Table, values: any[]) {\r\n                    this._table = table;\r\n                    this._values = values;\r\n                }\r\n\r\n                public checkAndModifyValues(onFinish: (isError: boolean) => void) {\r\n                    this._onFinish = onFinish;\r\n                    var auto_inc_columns = this._table._columns.filter(function (col) {\r\n                        return col._autoIncrement;\r\n                    });\r\n                    var auto_inc_values = {};\r\n                    auto_inc_columns.forEach(function (column) {\r\n                        var auto_increment_key =\r\n                            \"JsStore_\" + active_db._name + \"_\" + this._table._name + \"_\" + column._name + \"_Value\";\r\n                        KeyStore.get(auto_increment_key, function (val) {\r\n                            auto_inc_values[column._name] = val;\r\n                        });\r\n                    }, this);\r\n                    KeyStore.get('dumy_key', function (val) {\r\n                        this._valueCheckerObj = new ValueChecker(this._table, auto_inc_values);\r\n                        this.startChecking();\r\n                    }.bind(this), function (err) {\r\n                        this._error = err;\r\n                        this._onFinish(true);\r\n                    }.bind(this));\r\n\r\n                }\r\n\r\n                private startChecking() {\r\n                    var is_error: boolean = false;\r\n                    this._values.every(function (item) {\r\n                        is_error = this._valueCheckerObj.checkAndModifyValue(item);\r\n                        return !is_error;\r\n                    }, this);\r\n                    if (is_error) {\r\n                        this._error = this._valueCheckerObj._error;\r\n                        this._onFinish(true);\r\n                    }\r\n                    else {\r\n                        for (var prop in this._valueCheckerObj._autoIncrementValue) {\r\n                            var auto_increment_key =\r\n                                \"JsStore_\" + active_db._name + \"_\" + this._table._name + \"_\" + prop + \"_Value\";\r\n                            KeyStore.set(auto_increment_key, this._valueCheckerObj._autoIncrementValue[prop]);\r\n                        }\r\n                        KeyStore.get('dumy_key', function (val) {\r\n                            this._onFinish(false);\r\n                        }.bind(this),\r\n                            function (err) {\r\n                                this._error = err;\r\n                                this._onFinish(true);\r\n                            }.bind(this));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","declare var Promise: any;\r\nnamespace JsStore {\r\n    export var worker_status: WebWorker_Status = WebWorker_Status.NotStarted,\r\n        worker_instance: Worker;\r\n    export class CodeExecutionHelper {\r\n        private _requestQueue: IWebWorkerRequest[] = [];\r\n        private _isCodeExecuting = false;\r\n\r\n        protected pushApi(request: IWebWorkerRequest, usePromise: boolean) {\r\n            if (usePromise === true) {\r\n                return new Promise(function (resolve, reject) {\r\n                    request.OnSuccess = function (result) {\r\n                        resolve(result);\r\n                    };\r\n                    request.OnError = function (error) {\r\n                        reject(error);\r\n                    };\r\n                    this.prcoessExecutionOfCode(request);\r\n                }.bind(this));\r\n            }\r\n            else {\r\n                this.prcoessExecutionOfCode(request);\r\n                return this;\r\n            }\r\n        }\r\n\r\n        protected createWorker() {\r\n            try {\r\n                if (Worker) {\r\n                    var script_url = this.getScriptUrl(file_name);\r\n                    if (script_url && script_url.length > 0) {\r\n                        worker_instance = new Worker(script_url);\r\n                        worker_instance.onmessage = function (msg) {\r\n                            this.onMessageFromWorker(msg);\r\n                        }.bind(this);\r\n                        this.executeCodeUsingWorker({\r\n                            Name: 'change_log_status',\r\n                            Query: {\r\n                                logging: enable_log\r\n                            }\r\n                        } as IWebWorkerRequest);\r\n                        setTimeout(function () {\r\n                            if (worker_status !== WebWorker_Status.Failed) {\r\n                                worker_status = WebWorker_Status.Registered;\r\n                            }\r\n                            if (db_status.ConStatus === Connection_Status.Connected) {\r\n                                this.executeCode();\r\n                            }\r\n                        }.bind(this), 100);\r\n                    }\r\n                    else {\r\n                        this.onWorkerFailed();\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    this.onWorkerFailed();\r\n                }\r\n            }\r\n            catch (ex) {\r\n                this.onWorkerFailed();\r\n            }\r\n        }\r\n\r\n        private prcoessExecutionOfCode(request: IWebWorkerRequest) {\r\n            if (db_status.ConStatus === Connection_Status.NotStarted) {\r\n                switch (request.Name) {\r\n                    case 'create_db':\r\n                    case 'open_db':\r\n                        this._requestQueue.splice(0, 0, request);\r\n                        if (worker_status !== WebWorker_Status.NotStarted) {\r\n                            this.executeCode();\r\n                        }\r\n                        db_status.ConStatus = Connection_Status.Connected;\r\n                        break;\r\n                    default: this._requestQueue.push(request);\r\n                }\r\n            }\r\n            else {\r\n                this._requestQueue.push(request);\r\n                if (this._requestQueue.length === 1 && worker_status !== WebWorker_Status.NotStarted) {\r\n                    this.executeCode();\r\n                }\r\n            }\r\n            log(\"request pushed: \" + request.Name);\r\n        }\r\n\r\n        private executeCode() {\r\n            if (!this._isCodeExecuting && this._requestQueue.length > 0) {\r\n                this._isCodeExecuting = true;\r\n                var first_request = this._requestQueue[0],\r\n                    request = {\r\n                        Name: first_request.Name,\r\n                        Query: first_request.Query\r\n                    } as IWebWorkerRequest;\r\n                log(\"request executing : \" + first_request.Name);\r\n                if (worker_status === WebWorker_Status.Registered) {\r\n                    this.executeCodeUsingWorker(request);\r\n                } else {\r\n                    this.executeCodeDirect(request);\r\n                }\r\n            }\r\n        }\r\n\r\n        private executeCodeDirect(request: IWebWorkerRequest) {\r\n            new Business.Main(function (results) {\r\n                this.processFinishedRequest(results);\r\n            }.bind(this)).checkConnectionAndExecuteLogic(request);\r\n        }\r\n\r\n        private executeCodeUsingWorker(request: IWebWorkerRequest) {\r\n            worker_instance.postMessage(request);\r\n        }\r\n\r\n        private processFinishedRequest(message: IWebWorkerResult) {\r\n            var finished_request: IWebWorkerRequest = this._requestQueue.shift();\r\n            this._isCodeExecuting = false;\r\n            if (finished_request) {\r\n                log(\"request finished : \" + finished_request.Name);\r\n                if (message.ErrorOccured) {\r\n                    if (finished_request.OnError) {\r\n                        finished_request.OnError(message.ErrorDetails);\r\n                    }\r\n                }\r\n                else {\r\n                    if (finished_request.OnSuccess) {\r\n                        finished_request.OnSuccess(message.ReturnedValue);\r\n                    }\r\n                }\r\n                this.executeCode();\r\n            }\r\n        }\r\n\r\n        private onWorkerFailed() {\r\n            console.warn('JsStore is not runing in web worker');\r\n            worker_status = WebWorker_Status.Failed;\r\n            if (db_status.ConStatus === Connection_Status.NotStarted) {\r\n                this.executeCode();\r\n            }\r\n        }\r\n\r\n        private getScriptUrl(fileName: string) {\r\n            var script_url = \"\";\r\n            var file_name = fileName ? fileName.toLowerCase() : \"jsstore\";\r\n            var scripts = document.getElementsByTagName('script');\r\n            for (var i = scripts.length - 1, url = \"\"; i >= 0; i--) {\r\n                url = scripts[i].src;\r\n                url = url.substring(url.lastIndexOf('/') + 1).toLowerCase();\r\n                if (url.length > 0 && url.indexOf(file_name) >= 0) {\r\n                    script_url = scripts[i].src;\r\n                    return script_url;\r\n                }\r\n            }\r\n            return script_url;\r\n        }\r\n\r\n        private onMessageFromWorker(msg) {\r\n            if (typeof msg.data === 'string') {\r\n                var datas = msg.data.split(':')[1];\r\n                switch (datas) {\r\n                    case 'WorkerFailed': this.onWorkerFailed();\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this.processFinishedRequest(msg.data);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Model = JsStore.Model;\r\nimport DataBase = Model.DataBase;\r\nimport Column = Model.Column;\r\nimport Table = Model.Table;\r\n\r\nnamespace JsStore {\r\n    export class Instance extends CodeExecutionHelper {\r\n        constructor(dbName?: string) {\r\n            super();\r\n            if (worker_status === WebWorker_Status.Registered) {\r\n                worker_instance.terminate();\r\n            }\r\n            else if (worker_status === WebWorker_Status.NotStarted) {\r\n                KeyStore.init();\r\n            }\r\n            this.createWorker();\r\n            if (dbName) {\r\n                this.openDb(dbName, null, null);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * open database\r\n         * \r\n         * @param {string} dbName \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        openDb(dbName: string, onSuccess?: () => void, onError?: (err: IError) => void) {\r\n            return this.pushApi({\r\n                Name: 'open_db',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: dbName\r\n            } as IWebWorkerRequest, false);\r\n        }\r\n\r\n        /**\r\n         * creates DataBase\r\n         * \r\n         * @param {Model.IDataBase} dataBase \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        createDb(dataBase: IDataBaseOption, onSuccess?: (dbSchema: any) => void, onError?: (err: IError) => void) {\r\n            return this.pushApi({\r\n                Name: 'create_db',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: dataBase\r\n            } as IWebWorkerRequest, false);\r\n        }\r\n\r\n        /**\r\n         * drop dataBase\r\n         * \r\n         * @param {Function} onSuccess \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        dropDb(onSuccess?: () => void, onError?: (err: IError) => void) {\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'drop_db',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: null\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        /**\r\n         * select data from table\r\n         * \r\n         * @param {IQuery} query \r\n         * @param {Function} [onSuccess=null]  \r\n         * @param {Function} [onError=null] \r\n         * \r\n         * @memberOf Main\r\n         */\r\n        select(query: ISelect, onSuccess?: (results: any[]) => void, onError?: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'select',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: query\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        /**\r\n         * perform transaction - execute multiple apis\r\n         * \r\n         * @param {string[]} tableNames \r\n         * @param {any} txLogic \r\n         * @param {(results: any[]) => void} onSuccess \r\n         * @param {(err: IError) => void} onError \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        transaction(query: ITranscationQry, onSuccess?: (results: any[]) => void, onError?: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            query.Logic = query.Logic.toString();\r\n            return this.pushApi({\r\n                Name: 'transaction',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: query\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        /**\r\n         * get no of result from table\r\n         * \r\n         * @param {ICount} query \r\n         * @param {Function} [onSuccess=null]  \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        count(query: ICount, onSuccess?: (noOfRecord: number) => void, onError?: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'count',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: query\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        /**\r\n         * insert data into table\r\n         * \r\n         * @param {IInsert} query \r\n         * @param {(recordInserted: number) => void} onSuccess \r\n         * @param {(err: IError) => void} onError \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        insert(query: IInsert, onSuccess?: (recordInserted: number) => void, onError?: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'insert',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: query\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        /**\r\n         * update data into table\r\n         * \r\n         * @param {IUpdate} query \r\n         * @param {(recordUpdated: number) => void} onSuccess \r\n         * @param {(err: IError) => void} onError \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        update(query: IUpdate, onSuccess?: (recordUpdated: number) => void, onError?: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'update',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: query\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        delete(query: IRemove, onSuccess?: (recordDeleted: number) => void, onError?: (err: IError) => void) {\r\n            JsStore.logError('delete is deprecated because delete is reserved keyword in js. Please use remove api.');\r\n        }\r\n\r\n        /**\r\n         * remove data from table\r\n         * \r\n         * @param {IRemove} query \r\n         * @param {(recordDeleted: number) => void} onSuccess \r\n         * @param {(err: IError) => void} onError \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        remove(query: IRemove, onSuccess?: (recordDeleted: number) => void, onError?: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'remove',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: query\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        /**\r\n         * delete all data from table\r\n         * \r\n         * @param {string} tableName \r\n         * @param {() => void} onSuccess \r\n         * @param {(err: IError) => void} onError \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        clear(tableName: string, onSuccess?: () => void, onError?: (err: IError) => void) {\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'clear',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: tableName\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        /**\r\n         * insert bulk amount of data\r\n         * \r\n         * @param {IInsert} query \r\n         * @param {() => void} onSuccess \r\n         * @param {(err: IError) => void} onError \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        bulkInsert(query: IInsert, onSuccess?: () => void, onError?: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess as any : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            var use_promise = onSuccess ? false : true;\r\n            query.OnSuccess = query.OnError = null;\r\n            return this.pushApi({\r\n                Name: 'bulk_insert',\r\n                OnError: onError,\r\n                OnSuccess: onSuccess,\r\n                Query: query\r\n            } as IWebWorkerRequest, use_promise);\r\n        }\r\n\r\n        /**\r\n         * export the result in json file\r\n         * \r\n         * @param {ISelect} qry \r\n         * @memberof Instance\r\n         */\r\n        exportJson(query: ISelect) {\r\n            var onSuccess = function (url) {\r\n                var link = document.createElement(\"a\");\r\n                link.href = url;\r\n                link.download = query.From + \".json\";\r\n                link.click();\r\n                if (onSuccessCallBack) {\r\n                    onSuccessCallBack(null);\r\n                }\r\n            },\r\n                onError = query['OnError'],\r\n                onSuccessCallBack = query['OnSuccess'];\r\n            query['OnSuccess'] = query['OnError'] = undefined;\r\n            var use_promise = onSuccessCallBack ? false : true;\r\n            if (use_promise) {\r\n                return new Promise(function (resolve, reject) {\r\n                    this.pushApi({\r\n                        Name: 'export_json',\r\n                        OnError: onError,\r\n                        OnSuccess: onSuccess,\r\n                        Query: query\r\n                    } as IWebWorkerRequest, use_promise).then(function (url) {\r\n                        onSuccess(url);\r\n                        resolve();\r\n                    }).catch(function (err) {\r\n                        reject(err);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.pushApi({\r\n                    Name: 'export_json',\r\n                    OnError: onError,\r\n                    OnSuccess: onSuccess,\r\n                    Query: query,\r\n                } as IWebWorkerRequest, use_promise);\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","if (self && !self.alert) {\r\n    self.onmessage = function (e) {\r\n        JsStore.log(\"Request executing from WebWorker, request name: \" + e.data.Name);\r\n        var request = e.data,\r\n            business_main = new JsStore.Business.Main();\r\n        business_main.checkConnectionAndExecuteLogic(request);\r\n    };\r\n    JsStore.worker_status = JsStore.WebWorker_Status.Registered;\r\n    KeyStore.init();\r\n}"]}