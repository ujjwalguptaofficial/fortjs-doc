(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{216:function(e,t,o){"use strict";o.r(t);var n={components:{Layout:o(170).a}},r=o(12),component=Object(r.a)(n,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("Layout",{attrs:{title:"Data",description:"How to pass & access components data",keywords:"data, components, options, fortjs, node",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/concepts/data.md"}},[o("p",[o("code",[e._v("data")]),e._v(" is class member of Wall, Guard , Shield and Controller. It is used to transfer data from one component to another and finally to worker.")]),e._v(" "),o("p",[e._v("e.g - Let's see how we can pass data from wall to controller - ")]),e._v(" "),o("h3",{attrs:{id:"wall"}},[e._v("Wall")]),e._v(" "),o("pre",[o("code",[e._v("import { Wall, textResult } from \"fortjs\";\nexport class RequestLogger extends Wall {\n\n    private getIP(req) {\n        var ip = (req.headers['x-forwarded-for'] || '').split(',').pop() ||\n            req.connection.remoteAddress ||\n            req.socket.remoteAddress ||\n            req.connection.socket.remoteAddress\n        return ip;\n    }\n\n    async onIncoming() {\n        // here we are sending ip to other components\n        this.data.ip = this.getIP(this.request);\n\n        return null;\n    }\n}\n")])]),e._v(" "),o("p",[e._v("The above wall is using "),o("code",[e._v("data")]),e._v(" to pass ip to other components.")]),e._v(" "),o("h3",{attrs:{id:"accessipaddresspassdedfromwallincontroller"}},[e._v("Access ip address passded from Wall in Controller")]),e._v(" "),o("pre",[o("code",[e._v('import { Controller, textResult, DefaultWorker } from "fortjs";\n\nexport class DefaultController extends Controller {\n\n    @DefaultWorker()\n    async default() {\n        // access ip \n        const ip = this.data.ip;\n        return textResult(`Ip is ${ip}`);\n    }\n}\n')])])])}),[],!1,null,null,null);t.default=component.exports}}]);