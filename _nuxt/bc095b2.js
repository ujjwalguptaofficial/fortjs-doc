(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{213:function(e,n,o){"use strict";o.r(n);var t={components:{Layout:o(170).a}},r=o(12),component=Object(r.a)(t,(function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("Layout",{attrs:{title:"Dependency Injection",description:"Dependency injection in nodejs",keywords:"dependency injection, assign, singleton, fortjs, node js",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/concepts/dependency-injection.md"}},[o("p",[e._v('FortJs provides "Assign" And "Singleton" decorator for dependency Injection. ')]),e._v(" "),o("h2",{attrs:{id:"assign"}},[e._v("Assign")]),e._v(" "),o("p",[o("br"),e._v("\nAssign can be used in controller and all type of component.")]),e._v(" "),o("p",[e._v("e.g - ")]),e._v(" "),o("p",[e._v('To inject "hello world" to a variable value')]),e._v(" "),o("pre",[o("code",[e._v("export class UserController extends Controller {\n    service: UserService;\n\n    @Worker()\n    index(@Assign('hello world') value) {\n        console.log(value) // hello world\n    }\n}\n")])]),e._v(" "),o("div",{staticClass:"top-border",staticStyle:{margin:"25px 0"}}),e._v(" "),o("h2",{attrs:{id:"singleton"}},[e._v("Singleton")]),e._v(" "),o("p",[o("br"),e._v("\nSingleton creates a single object & maintain this across whole application.")]),e._v(" "),o("p",[e._v("e.g -")]),e._v(" "),o("p",[e._v("To inject a service in a controller constructor")]),e._v(" "),o("pre",[o("code",[e._v("export class UserController extends Controller {\n    service: UserService;\n\n    constructor(@Singleton(UserService) service) {\n        super();\n        this.service = service;\n    }\n}\n")])]),e._v(" "),o("p",[e._v("By using "),o("code",[e._v("Singleton")]),e._v(" you can save memory as its create only one instance of class & maintains throughout the app.  ")])])}),[],!1,null,null,null);n.default=component.exports}}]);