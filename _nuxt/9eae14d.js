(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{225:function(t,e,o){"use strict";o.r(e);var r={components:{Layout:o(170).a}},n=o(12),component=Object(n.a)(r,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("Layout",{attrs:{title:"XmlBodyParser",description:"Configure fortjs to accept xml data as http body",keywords:"xml, parser, accept xml, body, node",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/advanced/xml-parser.md"}},[o("p",[t._v("By default FortJs doesn't handle xml data in http body but can be configured very easily.")]),t._v(" "),o("p",[t._v("You need to create a class extending abstract class "),o("code",[t._v("XmlParser")])]),t._v(" "),o("pre",[o("code",[t._v('import { XmlParser} from "fortjs";\n\nexport class XmlToJsonParser extends XmlParser {\n\n    async parse(xml) {\n       // convert xml to string and return a json object    \n    }\n\n}\n')])]),t._v(" "),o("p",[t._v("and pass this class in App configuration - ")]),t._v(" "),o("pre",[o("code",[t._v("import { Fort } from 'fortjs';\nimport { XmlToJsonParser } from './xml-parser';\n\nFort.xmlParser = XmlToJsonParser;\n")])]),t._v(" "),o("p",[t._v("You can take a look at example - "),o("a",{attrs:{href:"https://github.com/ujjwalguptaofficial/fortjs-examples/tree/master/xml-in-body"}},[t._v("xml-in-body")]),t._v(".")])])}),[],!1,null,null,null);e.default=component.exports}}]);