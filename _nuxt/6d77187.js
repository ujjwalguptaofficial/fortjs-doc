(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{221:function(e,t,n){"use strict";n.r(t);var o={components:{Layout:n(170).a}},l=n(12),component=Object(l.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Layout",{attrs:{title:"Wall",description:"Description about wall components & its uses",keywords:"wall, component, options, fortjs, node",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/components/wall.md"}},[n("p",[e._v("Wall is security layer on top of your app. It controls whether a request should be allowed to enter inside the app. It can also be used to do some tasks and pass data inside app.")]),e._v(" "),n("p",[e._v("There can be multiple wall for an app & all walls are called in the same order as they are defined.")]),e._v(" "),n("p",[e._v("Wall has two events -")]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("onIncoming")]),e._v(" - called when a request wants to enter inside the fort (app). If this events returns null means request is allowed to enter otherwise rejects with the result returned.")]),e._v(" "),n("p",[e._v('If there are multiple walls then "onIncoming" is called in order as they are defined.')])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("onOutgoing")]),e._v(" - called when a request is about to leave. This is an optional event & Result returned from this event is ignored. onOutgoing is called with returned response & based on that response you can take actions, even you can modify the whole result.")]),e._v(" "),n("p",[e._v('If there are multiple walls then "onOutgoing" is called in reverse order as they are defined.')])])]),e._v(" "),n("p",[e._v("A wall have access to following - ")]),e._v(" "),n("ul",[n("li",[e._v("Request - "),n("a",{attrs:{href:"/tutorial/http-request"}},[e._v("request")])]),e._v(" "),n("li",[e._v("Response - "),n("a",{attrs:{href:"/tutorial/http-response"}},[e._v("response")])]),e._v(" "),n("li",[e._v("Cookie - "),n("a",{attrs:{href:"/tutorial/cookie"}},[e._v("cookie")])]),e._v(" "),n("li",[e._v("Session - "),n("a",{attrs:{href:"/tutorial/session"}},[e._v("session")])]),e._v(" "),n("li",[e._v("Query string data - "),n("a",{attrs:{href:"/tutorial/query"}},[e._v("query")])]),e._v(" "),n("li",[e._v("Data from other components - "),n("a",{attrs:{href:"/tutorial/data"}},[e._v("data")])])]),e._v(" "),n("p",[n("br")]),e._v(" "),n("h1",{attrs:{id:"creatingwall"}},[e._v("Creating wall")]),e._v(" "),n("p",[n("br"),e._v('\nWall is a class which - Extends the class "Wall" from fortjs.')]),e._v(" "),n("pre",[n("code",[e._v('import { Wall } from "fortjs"\n\nexport class AppWall extends Wall {\n    async onIncoming() {\n        console.log("request is asking for entering into the fort");\n        if (some condition) {\n            // block request\n            return textResult("This request is blocked by wall");\n        } else {\n            // allow request\n            return null;\n        }\n\n    }\n\n    async onOutgoing(result) {\n        // can be used to set headers, log events, modify returning result etc\n        console.log("request finished with result", result);\n    }\n}\n')])]),e._v(" "),n("p",[e._v("Now you have defined the wall but in order to use this wall, you need to assign it to App. Open app.ts/.js file and add your wall to the walls array.")]),e._v(" "),n("pre",[n("code",[e._v('import { Fort } from "fortjs";\nimport { UserController } from "./controllers";\nimport { AppWall } from "./walls/app_wall";\n\n//add routes\nFort.routes = [{\n    controller: UserController,\n    path: "/user"\n}]\n\n// adding AppWall to the walls array\nFort.walls = [AppWall]\n')])]),e._v(" "),n("h2",{attrs:{id:"howtomodifyreturningresult"}},[e._v("How to modify returning result")]),e._v(" "),n("pre",[n("code",[e._v('class AppWall extends Wall {\n    async onIncoming() {\n        return null;\n    }\n\n    async onOutgoing(result) {\n       Object.assign(result, textResult("result modified by wall outgoing");\n    }\n}\n')])])])}),[],!1,null,null,null);t.default=component.exports}}]);