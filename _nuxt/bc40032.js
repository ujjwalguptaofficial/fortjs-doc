(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{212:function(e,t,n){"use strict";n.r(t);var o={components:{Layout:n(170).a}},r=n(12),component=Object(r.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Layout",{attrs:{title:"View",description:"How to create & render views",keywords:"view, render, fortjs, node",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/view.md"}},[n("p",[e._v("A view is rendered using the method "),n("code",[e._v("viewResult")]),e._v(". The viewResult accepts two parameters - ")]),e._v(" "),n("ol",[n("li",[e._v("view identification - view location or view name or id")]),e._v(" "),n("li",[e._v("model")])]),e._v(" "),n("p",[n("br"),e._v("\nLet's see an example - ")]),e._v(" "),n("pre",[n("code",[e._v("export class DefaultController extends Controller {\n\n    @DefaultWorker()\n    async default() {\n        const model = {\n            title: 'FortJs'\n        }\n        const result = await viewResult('default/index.html',model);\n        return result;\n    }\n}\n")])]),e._v(" "),n("p",[e._v("By default fortjs provides "),n("a",{attrs:{href:"https://github.com/janl/mustache.js/"}},[e._v("mustache")]),e._v(" as view engine. But any view engine like - handlebar, ejs etc can be used.")]),e._v(" "),n("p",[e._v("For configuring other view engine, please read the docs - "),n("a",{attrs:{href:"/tutorial/advanced/view-engine"}},[e._v("viewEngine")])])])}),[],!1,null,null,null);t.default=component.exports}}]);