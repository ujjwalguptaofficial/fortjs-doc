(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{204:function(e,r,t){"use strict";t.r(r);var n={components:{Layout:t(170).a}},o=t(12),component=Object(o.a)(n,(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("Layout",{attrs:{title:"Guard",description:"Description about guard component in fortjs",keywords:"guard, component, types, fortjs, node",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/components/guard.md"}},[t("p",[e._v("Guard is security layer on top of Worker which means it is called after controller is initiated. It contols whether a request should be allowed to call the "),t("strong",[e._v("Worker")]),e._v(".")]),e._v(" "),t("p",[e._v("The guard is useful for - ")]),e._v(" "),t("ul",[t("li",[e._v("Validation of data. ")]),e._v(" "),t("li",[e._v("Authentication at Worker level.")]),e._v(" "),t("li",[e._v("Doing some task and passing it to worker. In this case - guard will be used as subordinate.")])]),e._v(" "),t("p",[t("br"),e._v("\nThere can be multiple guards for a worker & they are called in respective order, when a request wants to access the particular worker.")]),e._v(" "),t("p",[e._v("A guard has following member - ")]),e._v(" "),t("ul",[t("li",[e._v("Request - "),t("a",{attrs:{href:"/tutorial/http-request"}},[e._v("request")])]),e._v(" "),t("li",[e._v("Response - "),t("a",{attrs:{href:"/tutorial/http-response"}},[e._v("response")])]),e._v(" "),t("li",[e._v("Cookie - "),t("a",{attrs:{href:"/tutorial/cookie"}},[e._v("cookie")])]),e._v(" "),t("li",[e._v("Session - "),t("a",{attrs:{href:"/tutorial/session"}},[e._v("session")])]),e._v(" "),t("li",[e._v("Query string data - "),t("a",{attrs:{href:"/tutorial/query"}},[e._v("query")])]),e._v(" "),t("li",[e._v("Post data - "),t("a",{attrs:{href:"body"}},[e._v("body")])]),e._v(" "),t("li",[e._v("Route parameter -  "),t("a",{attrs:{href:"/tutorial/param"}},[e._v("param")])]),e._v(" "),t("li",[e._v("Data from other components - "),t("a",{attrs:{href:"/tutorial/data"}},[e._v("data")])])]),e._v(" "),t("p",[t("br")]),e._v(" "),t("h1",{attrs:{id:"creatingguard"}},[e._v("Creating guard")]),e._v(" "),t("p",[t("br"),e._v('\nGuard is a class which extends the class "Guard" from fortjs.')]),e._v(" "),t("h2",{attrs:{id:"example"}},[e._v("Example")]),e._v(" "),t("pre",[t("code",[e._v('import { Guard, HttpResult, MIME_TYPE, HTTP_STATUS_CODE } from "fortjs";\nimport {isEmail, isLength, isIn} from "validator";\n\nexport class ModelUserGuard extends Guard {\n\n    async check() {\n        const user = { // extracted the info from request body\n            name: this.body.name,\n            gender: this.body.gender,\n            address: this.body.address,\n            emailId: this.body.emailId\n        }\n        const errMsg = this.validate(user);\n        if (errMsg == null) {\n            // pass user to worker method, so that they dont need to parse again\n            this.data.user = user;\n            // returning null means - this guard allows request to pass\n            return null;\n        } else {\n            return textResult(errMsg, HTTP_STATUS_CODE.BadRequest);\n        }\n    }\n\n    validate(user) {\n        let errMessage;\n        if (user.name == null || !isLength(user.name, 5)) {\n            errMessage = "name should be minimum 5 characters"\n        } else if (user.password == null || !isLength(user.password, 5)) {\n            errMessage = "password should be minimum 5 characters";\n        } else if (user.gender == null || !isIn(user.gender, ["male", "female"])) {\n            errMessage = "gender should be either male or female";\n        } else if (user.gender == null || !isEmail(user.emailId)) {\n            errMessage = "email not valid";\n        } else if (user.address == null || !isLength(user.address, 10, 100)) {\n            errMessage = "address length should be between 10 & 100";\n        }\n        return errMessage;\n    }\n}\n')])]),e._v(" "),t("p",[e._v("Now you have defined the guard but in order to use this guard, you need to assign it to some worker.")]),e._v(" "),t("pre",[t("code",[e._v('import { Controller, Guards } from "fortjs";\nimport { ModelUserGuard } from "location where guard is defined";\n\n\nexport class UserController extends Controller {\n\n    @Guards(ModelUserGuard)\n    addUser(){\n\n    }\n\n}\n')])]),e._v(" "),t("p",[t("strong",[e._v("Note:-")]),e._v(" A guard can be assigned to multiple worker.")])])}),[],!1,null,null,null);r.default=component.exports}}]);