(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{223:function(e,t,o){"use strict";o.r(t);var r={components:{Layout:o(170).a}},n=o(12),component=Object(n.a)(r,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("Layout",{attrs:{title:"Shield",description:"Description about Shield component & how to use",keywords:"shield, component, modular, fortjs, node",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/components/shield.md"}},[o("p",[e._v("Shiled is security layer on top of Section (Controller). It controls whether a request should be allowed to enter inside the Section or not. It can also be used for doing some task before passing it to workers.")]),e._v(" "),o("p",[e._v('e.g - Consider a case - where a controller "Admin" is only allowed if the request is authenticated. You can create a shield which will check for the conditions and if it does not satisfy the conditions, you can just reject it.')]),e._v(" "),o("p",[e._v("There can be multiple shield for a controller & every shield is called when a request wants to access the particular controller in the same order as they are defined.")]),e._v(" "),o("p",[e._v("A shiled has following member - ")]),e._v(" "),o("ul",[o("li",[e._v("Request - "),o("a",{attrs:{href:"/tutorial/http-request"}},[e._v("request")])]),e._v(" "),o("li",[e._v("Response - "),o("a",{attrs:{href:"/tutorial/http-response"}},[e._v("response")])]),e._v(" "),o("li",[e._v("Cookie - "),o("a",{attrs:{href:"/tutorial/cookie"}},[e._v("cookie")])]),e._v(" "),o("li",[e._v("Session - "),o("a",{attrs:{href:"/tutorial/session"}},[e._v("session")])]),e._v(" "),o("li",[e._v("Query string data - "),o("a",{attrs:{href:"/tutorial/query"}},[e._v("query")])]),e._v(" "),o("li",[e._v("Data from other components - "),o("a",{attrs:{href:"/tutorial/data"}},[e._v("data")])]),e._v(" "),o("li",[e._v("Target Worker Name - "),o("a",{attrs:{href:"#"}},[e._v("workerName")])])]),e._v(" "),o("p",[o("br")]),e._v(" "),o("h1",{attrs:{id:"creatingshield"}},[e._v("Creating shield")]),e._v(" "),o("p",[o("br"),e._v('\nShield is a class which extends the class "Shield" from fortjs.')]),e._v(" "),o("h2",{attrs:{id:"example"}},[e._v("Example")]),e._v(" "),o("pre",[o("code",[e._v('import { Shield, textResult, redirectResult} from "fortjs";\n\nexport class AuthenticationShield extends Shield {\n    async protect() {\n\n        const isExist = await this.session.isExist(\'userId\');\n        if (exist) { // user is authenticated so allow\n            return null;\n        } else { //user is not authenticated, so not allow\n            return redirectResult("/default/login");\n        }\n\n    }\n}\n')])]),e._v(" "),o("p",[e._v("Now you have defined the shield but in order to use this shield, you need to assign it to some controller.")]),e._v(" "),o("pre",[o("code",[e._v('import { Controller,Shields } from "fortjs";\nimport { AuthenticationShield } from "location where shield is defined";\n\n@Shields(AuthenticationShield) \nexport class UserController extends Controller {\n\n}\n')])]),e._v(" "),o("p",[o("strong",[e._v("Note:-")]),e._v(" A shield can be assigned to multiple controller.")])])}),[],!1,null,null,null);t.default=component.exports}}]);