(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{224:function(e,t,n){"use strict";n.r(t);var o={components:{Layout:n(170).a}},r=n(12),component=Object(r.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Layout",{attrs:{title:"View Engine",description:"Creating custom view engine in fortjs",keywords:"view engine, cutomize, options, fortjs, node",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/advanced/view-engine.md"}},[n("p",[e._v("In order to create a view engine - You need to create a class which will implement class "),n("code",[e._v("ViewEngine")]),e._v(' from "fortjs".')]),e._v(" "),n("p",[e._v("e.g - Let's see how we can use ejs as view engine. You can download the code for below example here - "),n("a",{attrs:{href:"https://github.com/ujjwalguptaofficial/fortjs-examples/tree/master/ejs",target:"_blank"}},[e._v("ViewEngine configurtion example")])]),e._v(" "),n("pre",[n("code",[e._v('import { ViewEngine, ViewEngineData, getViewFromFile } from "fortjs";\nimport * as ejs from "ejs"; \n\nexport class EjsViewEngine implements ViewEngine {\n\n    async render(value: ViewEngineData) {\n        const viewData = await getViewFromFile({ fileLocation: value.view});\n        return ejs.render(viewData, value.model);\n    }\n}\n')])]),e._v(" "),n("p",[e._v("The method "),n("code",[e._v("render")]),e._v(" will be called by fortjs with value of type "),n("a",{attrs:{href:"/tutorial/type/view-engine-data"}},[e._v("ViewEngineData")]),e._v(". You need to use this value and return html string.")]),e._v(" "),n("p",[e._v("After you have created view engine, you need to tell fort to use this view engine. Open app.ts /app.js")]),e._v(" "),n("pre",[n("code",[e._v("import { Fort } from 'fortjs';\nimport { routes } from './routes';\nimport { EjsViewEngine } from './ejs_view_engine';\n\n\nFort.viewEngine = EjsViewEngine;\nFort.routes = routes;\nFort.create();\n")])]),e._v(" "),n("p",[e._v("Now We have successfully integrated our view engine with fortjs. Let's test our view engine setup - ")]),e._v(" "),n("h2",{attrs:{id:"createaview"}},[e._v("Create a view")]),e._v(" "),n("p",[n("br"),e._v('\ncreate a file "index.ejs" inside the folder - "views". Paste the below code inside the file -')]),e._v(" "),n("pre",[n("code",[e._v('<html lang="en">\n\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title><%=title%></title>\n</head>\n\n<body>\n    <h1><%=msg%></h1>\n</body>\n\n</html>\n')])]),e._v(" "),n("p",[e._v("In the above code - title and msg will be sent from the controller and rendered by mustache. ")]),e._v(" "),n("p",[e._v("Now its time to call our view engine for rendering this view - ")]),e._v(" "),n("pre",[n("code",[e._v('export class DefaultController extends Controller {\n\n    @DefaultWorker()\n    async default() {\n        const model = {\n            title: "FortJs",\n            msg: "This is rendered by mustache"\n        };\n        const result = await viewResult("index.ejs", model);\n        return result;\n    }\n}\n')])]),e._v(" "),n("p",[e._v("we are using "),n("code",[e._v("viewResult")]),e._v(" to render the view, which takes - the relative location of view and model value.")])])}),[],!1,null,null,null);t.default=component.exports}}]);