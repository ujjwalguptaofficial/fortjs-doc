(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{219:function(r,e,t){"use strict";t.r(e);var o={components:{Layout:t(170).a}},n=t(12),component=Object(n.a)(o,(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("Layout",{attrs:{title:"GraphQl",description:"How to use graphql in node using fortjs",keywords:"graphql, integrate, fortjs, node",contentSrc:"/home/travis/build/ujjwalguptaofficial/fortjs.docs/out/content/tutorial/advanced/graphql.md"}},[t("p",[r._v("FortJs provides a seperate package - "),t("a",{attrs:{href:"https://github.com/ujjwalguptaofficial/fortjs-graphql"}},[r._v("fort-graphql")]),r._v(" for integration of graphql.")]),r._v(" "),t("h2",{attrs:{id:"uses"}},[r._v("Uses")]),r._v(" "),t("ol",[t("li",[t("code",[r._v("npm i fortjs-graphql")]),r._v(" or "),t("code",[r._v("yarn add fortjs-graphql")])]),r._v(" "),t("li",[r._v("Create a controller and inherit "),t("code",[r._v("GraphQlHelper")])])]),r._v(" "),t("ul",[t("li",[r._v("Create a default worker and call "),t("code",[r._v("processGraphQl")]),r._v(" inside it. ")]),r._v(" "),t("li",[r._v("For graphiql , create another worker and call "),t("code",[r._v("getGraphiqlUi")]),r._v(" inside it.")])]),r._v(" "),t("pre",[t("code",[r._v('import { HTTP_METHOD, DefaultWorker, Worker } from "fortjs";\nimport { GraphQlHelper } from "fort-graphql";\n\nexport class GraphQlController extends GraphQlHelper {\n\n    /**\n     * This method will be used to process graphql query \n     *\n     * @returns\n     * @memberof GraphQlController\n     */\n    @DefaultWorker(HTTP_METHOD.Get, HTTP_METHOD.Post)\n    async  default() {\n        return this.processGraphQl();\n    }\n\n    /**\n     * This method will return graphiql \n     *\n     * @returns\n     * @memberof GraphQlController\n     */\n    @Worker()\n    async  graphiql() {\n        return this.getGraphiqlUi();\n    }\n\n}\n')])]),r._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[r._v("Add the controller into routes ")]),r._v(" "),t("li",[r._v("Initiate the graphql, where you have bootstrapped your app. By default file is app.ts/app.js - ")])]),r._v(" "),t("pre",[t("code",[r._v("import { Fort } from 'fortjs';\nimport { routes } from './routes';\nimport { FortViewEngine } from 'eshtml';\nimport * as path from \"path\";\nimport { FortGraphQl } from 'fortjs-graphql';\nimport { GraphQLError, buildSchema } from 'graphql';\n\n\nFort.routes = routes;\n\nFort.create({\n    defaultPath: \"default\" \n}).then(() => {\n    console.log(\"Your fort is located at address - localhost:4000\");\n    // setup graphql\n\n    new FortGraphQl().initiate({\n        schema: buildSchema(`\n        type Query {\n          hello: String\n        }\n        ` ),\n        resolver: { hello: () => 'Hello world!' }\n    })\n}).catch(err => {\n    console.error(err);\n})\n")])])])}),[],!1,null,null,null);e.default=component.exports}}]);